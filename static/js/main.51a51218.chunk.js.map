{"version":3,"sources":["Room/DH_Constants.ts","Room/CubeGeometry.ts","Room/EditRoom.ts","Room/JsonManager.ts","Room/RoomManager.ts","Room/WallGeometry.ts","ts/CameraManager.ts","ts/DH_Cursor.ts","ts/EventManager.ts","ts/GizmoHandler.ts","ts/Handler.ts","ts/MaterialManager.ts","ts/ModeManager.ts","ts/SceneManager.ts","ts/SphereManager.ts","ts/AppManager.ts","Main.tsx","reportWebVitals.ts","index.tsx"],"names":["DH_Constants","modePlane","modePlane_createCorners","modePlane_editFromTop","modePlane_editWallUV","modePlane_editFloorUV","currentRoomName","currentWallGroupName","updatefov","radius","size_ControlBox","wallYDiffernce","divPoint","modeCube","modeCube_CreateNewCube","modeCube_edit_Cube","modeCube_updatingCubeCenter","modeCube_edit_CubeWallUVPosition","modeCube_editRoom","wallHeight","topY","bottomY","CubeGeometry","appManager","handler","scene","camera","cursor","boxSize","distanceY","distanceD","createNewButton","editButton","editCubeToggle","buttons","this","sceneManager","getScene","getCamera","getHandler","DHCursor","getCursor","document","getElementById","push","cubeList","Object","keys","roomManager","RoomData","cubeGroup","index","length","cubeGroupName","console","log","cubeRoot","setEnabled","forEach","element","style","display","checked","disableAllCubeButton","cubeKeys","gizmoHandler","attachOnMesh","updateMsg","cubeName","hasOwnProperty","cubeCenterPointsBoxes","cube","isVisible","edit","pos","center","data","TransformNode","roomName","setPivotPoint","Vector3","x","y","z","createBox","setParent","position","set","tag","centerPosition","cubePosition","cubeRotation","rotation","renderingGroupId","cubeCornerPoints","cubeCornerPointsBoxes","box","clone","isPickable","computeWorldMatrix","cubeCenterPoints","textureGround","DynamicTexture","width","height","getContext","materialGround","StandardMaterial","diffuseTexture","backFaceCulling","specularColor","Color3","drawText","toString","control","material","actionManager","ActionManager","lastMsg","registerAction","ExecuteCodeAction","OnPointerOverTrigger","textContent","OnPointerOutTrigger","OnPickDownTrigger","pick","pointerX","pointerY","gizmoManager","positionGizmoEnabled","rotationGizmoEnabled","scaleGizmoEnabled","updateController","cubeCornerPointsUV","createCubePlane","parentGroup","jsonData","BABYLON","cubeData","createCubePlaneFromJson","faceData","_uvs","vertexData","uvs","newPlane","Mesh","name","newPlanepositions","positions","indicesSeq","indices","newPlanenormals","normals","VertexData","ComputeNormals","applyToMesh","faceName","plane","face","p0","p1","p2","p3","vertex","topPoints","getPoints","bottomPoints","i","coordinates","Project","Matrix","Identity","getTransformMatrix","viewport","toGlobal","getEngine","getRenderWidth","getRenderHeight","uvCoordinates","getUvPoint","getPosition","flag","selectedBox","greater","updateCubeGizmo","gizmos","positionGizmo","xGizmo","scaleRatio","yGizmo","zGizmo","var1","var2","xDif","yDif","zDif","selectedCube","dragEvent","dir","ce","Center","updateCubePlane","Index","newPlanevertexData","error","EditRoom","editRoomPosButton","editRoomElementPosButton","editRoomDoneButton","disableAllButton","JsonManager","loadedJson","getLocalJson","folderPath","$","done","processData","fail","requests","map","fetch","Promise","all","then","resp","r","json","result","initRoomData","Rooms","undefined","parentGroupTransform","scaling","ParentTransform","wallGroup","wallGroups","v","s_WallGroup","wallNames","WallsData","v2","s_WallName","_walldata","wallName","wallGroupName","cornersPos","obj","uvPointsPos","_CubeData","cubeScaling","cubeelement","_faceData","saveJSON","myJson","fileName","sJson","JSON","stringify","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","RoomManager","room_Images","imageTask","textureTask","roomMaterials","CurrentRoomName","firstElement","accordionpanelChangeRoom","accordionpanelEnableRoom","RoomName","materialManager","getMaterial","url","createRoomObject","div","addEventListener","div2","changeRoom","element2","createWallGroup","wallGeometry","createPlaneFromJson","cubeGeometry","createCubeFromJson","floorGroup","wallGroupData","WallsNode","CornersNode","parent","options","modeManger","toggleWallMode","toggleCubeMode","sphereManager","changeRoomMaterial","WallGeometry","floorBoxes","ceilingBoxes","floorLines","allWallCorners","allWallCenterCorners","mousePointer3dBottom","createdFloorPoints","CreateWallButton","CreateWallButtonDone","EditWallButton","EditWallDoneButton","CreateWallButtonMergeWithFirstPoint","MergeWallsButton","EditFromTopButton","EditFromTopDoneButton","FloorDoneButton","transformMatrix","doOnce","grid","disableAllWallButton","wallKeys","wallGroupList","GroupName","wallname","corners","centers","wallMesh","alert","endFloorPointCreation","cameraManager","resetCamera","toggleSphere","Wg","OnLongPressTrigger","setTimeout","selectWall","updateFloorLines","linePoints","dispose","createLine","mergeWithFirst","linePointsFloor","linePointsCeiling","disableCornerCreation","cornerPos","createWall","enableWallOptionsUi","enablePositionGizmoOnly","centersPos","wallData","_roomName","disablePointer","_box2","_box1","vct_","minus","arr_vct","tempvct","last","mesh","point","getSphere","getTextureCoordinates","vertices","twod","refVertices","verticeslocal","Float32Array","verticeslocaltwod","pp","val","parseInt","updateUv","objType","ver","wall","boxName","tagName","direction","centerBox","roomKeys","firstRoom","actions","action","unregisterAction","calculateHeight","updateWall","setVerticalCamera","createGrid","floorName","floorPoints","floorMesh","newPlanepositions2","VP","earcut_","vertex_2d","vector","Vector2","PolygonMeshBuilder","build","UVfloorPoints","createFloorWall","WallData","parseFloat","toFixed","top","down","Distance","CameraManager","lowerBetaLimit","upperBetaLimit","beta","panningSensibility","upperRadiusLimit","maxZ","wheelDeltaPercentage","setTarget","Zero","setPosition","minZ","lowerRadiusLimit","fov","inertia","DH_Cursor","getElementsByClassName","msg","EventManager","sphere","slectedObj","getWallGeometryInstance","getCanvas","onDoubleClick","event","onDocumentMouseWheel","onKeyDown","mouseControls","key","freeCamera","dollhouseCamera","_scaleRatio","createFloorFromEarcut","jsonManager","exportTojson","onPointerDown","evt","pickResult","hit","pickedMesh","onPointerMove","moveCursor","pickinfo","updatePointer","pickedPoint","onPointerUp","addFloorPoint","createCube","wheelDeltaY","Math","max","min","e","TweenMax","to","left","clientX","clientY","GizmoHandler","GizmoManager","usePointerToAttachGizmos","dragBehavior","onDragObservable","add","onMeshDraging","onDragEndObservable","onMeshTransformUpdate","rotationGizmo","scaleGizmo","attachToMesh","Camera","attachToNode","updatePointWallFromTop","updateCube","axis","ondragCubePoints","xAxisScale","yAxisScale","zAxisScale","Handler","mosusePointer","active","myMaterial2","diffuseColor","myMaterial360","MeshBuilder","CreateBox","size","d_RefLPo","_size","CreateLines","points","CreateTube","path","yPosition","gridMaterial","GridMaterial","majorUnitFrequency","minorUnitVisibility","gridRatio","mainColor","lineColor","opacity","zOffset","CreateGround","MaterialManager","textureUrl","pbr","PBRMetallicRoughnessMaterial","metallic","roughness","_albedoTexture","Texture","err","ModeManager","disableAllCube","enableAll","disableAll","disableAllWallMode","enableDefaultOptionsUI","enableAllCube","enableEditRoom","SceneManager","canvas","engine","setScene","setCamera","setEnvironment","Engine","Scene","ArcRotateCamera","attachControl","activeCamera","createDefaultLight","runRenderLoop","render","window","onViewMatrixChangedObservable","update","SphereManager","createSphere","CreateSphere","diameter","force","AppManager","eventsManager","editRoomManager","setupJsToTsCallBack","wplanMode","wplaneModeCreateWall","enableCornerCreation","wplaneModeCreateWallDone","createWallFinished","wplaneModeMergeWithFirstCorner","createWallMergeWithFirstCorner","wplaneModeEditWall","enableWallEdit","wplaneModeEditWallDone","editSelectedWallDone","wplaneModeMergeAllWalls","updateAllWallUv","wplaneModeAdjustWallsFromTop","AdjustWallFromTop","wplaneModeAdjustWallsFromTopDone","AdjustWallFromTopDone","wplaneModeFloorDone","FloorDone","wcubeMode","wcubeModeCreateNewCube","enableNewCubeCreation","wcubeModeEditCube","uiEditCube","wcubeModeEditCubeUV","EditCubeUV","wtoggleEditRoomMode","toggleEditRoomMode","editRoomModePosition","EditRoomPosition","editRoomModeElementPosition","EditRoomElementPosition","wEditRoomDone","DoneRoomEdit","wDefaultCamera","wFreeCamera","wTopCamera","ConsoleEnable","App","props","appInit","componentDidMount","panelSet","state","id","className","onClick","planeModeCreateWall","planeModeCreateWallDone","planeModeMergeWithFirstCorner","planeModeEditWall","planeModeEditWallDone","planeModeMergeAllWalls","planeModeAdjustWallsFromTop","planeModeAdjustWallsFromTopDone","planeModeFloorDone","cubeModeCreateNewCube","cubeModeEditCube","type","cubeModeEditCubeToggle","editRoomModeDone","href","planeMode","cubeMode","editRoomMode","DefaultCamera","FreeCamera","TopCamera","fontSize","openNav","acc","classList","toggle","panel","nextElementSibling","acc2","acc3","acc4","checkBox","wEditRoomPosition","weditRoomModeElementPosition","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.51a51218.chunk.js","sourcesContent":["export class DH_Constants {\r\n\r\n   public static currentRoomName = \"\";\r\n   public static currentWallGroupName = \"\";\r\n   // public static currentCubeName = \"\";\r\n\r\n\r\n\r\n   public static updatefov: boolean = false;\r\n\r\n   public static radius: any = 1600;\r\n   public static size_ControlBox: any = 40;\r\n   public static wallYDiffernce: any = 700;\r\n   public static divPoint: any = 200;\r\n\r\n\r\n\r\n   public static modePlane: boolean = false;\r\n   public static modePlane_createCorners: boolean = false;\r\n   public static modePlane_editWallUV: boolean = false;\r\n   public static modePlane_editFromTop: boolean = false;\r\n   // public static modePlane_editFloor: boolean = false;\r\n   public static modePlane_editFloorUV: boolean = false;\r\n\r\n   public static modeCube: boolean = false;\r\n   public static modeCube_CreateNewCube: boolean = false;\r\n\r\n   public static modeCube_edit_Cube: boolean = false;\r\n   public static modeCube_updatingCubeCenter: boolean = false;\r\n   // public static modeCube_edit_CubeWallCornerPosition: boolean = false;\r\n   public static modeCube_edit_CubeWallUVPosition: boolean = false;\r\n\r\n\r\n   public static modeCube_editRoom: boolean = false;\r\n\r\n\r\n   public static wallHeight=0;\r\n   public static topY=0;\r\n   public static bottomY=0;\r\n\r\n\r\n\r\n\r\n\r\n   public static disableAllMode() {\r\n      DH_Constants.modePlane = false;\r\n   }\r\n\r\n   public static disableAllWallMode() {\r\n     \r\n\r\n      DH_Constants.modePlane=false;\r\n      DH_Constants.modePlane_createCorners=false;\r\n      DH_Constants.modePlane_editFromTop=false;\r\n      DH_Constants.modePlane_editWallUV=false;\r\n      DH_Constants.modePlane_editFloorUV=false;\r\n   }\r\n}","// import { ArcRotateCamera } from \"babylonjs\";\r\nimport { ActionManager, ArcRotateCamera, Color3, DynamicTexture, ExecuteCodeAction, float, Matrix, Mesh, PointerDragBehavior, Scene, StandardMaterial, TransformNode, Vector3, VertexData } from \"@babylonjs/core\";\r\nimport { anaglyphPixelShader } from \"@babylonjs/core/Shaders/anaglyph.fragment\";\r\nimport { Vector2 } from \"babylonjs/Maths/math.vector\";\r\n\r\nimport { AppManager } from \"../ts/AppManager\";\r\nimport { DH_Cursor } from \"../ts/DH_Cursor\";\r\nimport { Handler } from \"../ts/Handler\";\r\nimport { DH_Constants } from \"./DH_Constants\";\r\n\r\nexport class CubeGeometry {\r\n    private appManager: AppManager;\r\n    private handler: Handler;\r\n    private scene: Scene;\r\n    private camera: ArcRotateCamera;\r\n    private cursor: any;\r\n\r\n    private boxSize = 100;\r\n    private distanceY = 300;\r\n    private distanceD = 300;\r\n\r\n    private createNewButton: any;\r\n    private editButton: any;\r\n    private editCubeToggle: any;\r\n    private buttons: any = [];\r\n    // private createNewButton: any;\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n        this.scene = appManager.sceneManager.getScene();\r\n        this.camera = this.appManager.sceneManager.getCamera();\r\n\r\n        this.handler = this.appManager.handler.getHandler();\r\n        this.cursor = this.appManager.DHCursor.getCursor();\r\n\r\n        this.createNewButton = document.getElementById('NewCube');\r\n        this.buttons.push(this.createNewButton);\r\n        this.editButton = document.getElementById('EditCube');\r\n        this.buttons.push(this.editButton);\r\n\r\n        this.editCubeToggle = document.getElementById('EditCubeToggleParent');\r\n        this.buttons.push(this.editCubeToggle);\r\n\r\n\r\n\r\n        // this.createNewButton = document.getElementById('CreateWall');\r\n        // this.buttons.push(this.createNewButton)\r\n\r\n\r\n    }\r\n\r\n    disableAllCube() {\r\n        var cubeList: any = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup);\r\n        for (let index = 0; index < cubeList.length; index++) {\r\n            const cubeGroupName = cubeList[index];\r\n            console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeGroupName].cubeRoot);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeGroupName].cubeRoot.setEnabled(false);\r\n        }\r\n    }\r\n    enableAllCube() {\r\n        var cubeList: any = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup);\r\n        for (let index = 0; index < cubeList.length; index++) {\r\n            const cubeGroupName = cubeList[index];\r\n            console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeGroupName].cubeRoot);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeGroupName].cubeRoot.setEnabled(true);\r\n        }\r\n    }\r\n    //#region UI\r\n    private disableAllCubeButton() {\r\n\r\n        this.buttons.forEach((element: any) => {\r\n            element.style.display = 'none';\r\n        });\r\n\r\n        this.editCubeToggle.checked = false;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Reset to default condition of wall mode\r\n     * where user needs to select options of create edit and merge\r\n     */\r\n    enableDefaultOptionsUI() {\r\n\r\n        this.disableAllCubeButton();\r\n        if (DH_Constants.modeCube) {\r\n\r\n            var cubeKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup);\r\n\r\n            if (this.createNewButton != null)\r\n                this.createNewButton.style.display = 'block';\r\n            if (this.editButton != null && cubeKeys.length > 0)\r\n                this.editButton.style.display = 'block';\r\n        }\r\n        this.appManager.gizmoHandler.attachOnMesh(null);\r\n        DH_Constants.modeCube_CreateNewCube = false;\r\n        DH_Constants.modeCube_edit_Cube = false;\r\n        DH_Constants.modeCube_updatingCubeCenter = false;\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n    }\r\n\r\n\r\n    enableNewCubeCreation() {\r\n        this.disableAllCubeButton();\r\n        DH_Constants.modeCube_CreateNewCube = true;\r\n        DH_Constants.modeCube_edit_Cube = false;\r\n        DH_Constants.modeCube_updatingCubeCenter = false;\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n\r\n        this.appManager.gizmoHandler.attachOnMesh(null);\r\n        this.appManager.DHCursor.updateMsg(\"Double Click to create a cube\");\r\n\r\n        var cubeKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup);\r\n\r\n\r\n        cubeKeys.forEach(cubeName => {\r\n            if (this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].hasOwnProperty(\"cubeCenterPointsBoxes\")) {\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].cubeCenterPointsBoxes.forEach((cube: any) => {\r\n                    cube.isVisible = false;\r\n                });\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    enableEditRoom() {\r\n        this.disableAllCubeButton();\r\n        DH_Constants.modeCube_CreateNewCube = false;\r\n        DH_Constants.modeCube_edit_Cube = true;\r\n        DH_Constants.modeCube_updatingCubeCenter = false;\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n\r\n        this.appManager.gizmoHandler.attachOnMesh(null);\r\n        var cubeKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup);\r\n        cubeKeys.forEach(cubeName => {\r\n            if (this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].hasOwnProperty(\"cubeCenterPointsBoxes\")) {\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].cubeCenterPointsBoxes.forEach((cube: any) => {\r\n                    cube.isVisible = true;\r\n                });\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    //#endregion UI\r\n\r\n    uiCreateCube() {\r\n\r\n    }\r\n    uiEditCube() {\r\n       \r\n\r\n        // this.enableAllCube();\r\n        this.disableAllCubeButton();\r\n        DH_Constants.modeCube_CreateNewCube = false;\r\n        this.editCubeToggle.checked = false;\r\n        DH_Constants.modeCube_edit_Cube = true;\r\n        DH_Constants.modeCube_updatingCubeCenter = false;\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n        this.appManager.DHCursor.updateMsg(\"Select points to edit Cube\");\r\n\r\n        if (this.createNewButton != null)\r\n            this.createNewButton.style.display = 'block';\r\n        if (this.editCubeToggle != null)\r\n            this.editCubeToggle.style.display = 'block';\r\n\r\n\r\n    }\r\n\r\n    EditCubeUV(edit: boolean) {\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = edit;\r\n    }\r\n\r\n    createCube(pos: any) {\r\n\r\n        // var selectedCube = null;\r\n        var center: any;\r\n\r\n        var cubeName: any = \"Cube_\" + Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup).length;\r\n\r\n        var data: any = {\r\n            cubeName: cubeName,\r\n            cubeRoot: new TransformNode(cubeName + \"_ROOT\"),\r\n            roomName: DH_Constants.currentRoomName\r\n        };\r\n\r\n        data.cubeRoot.setPivotPoint(new Vector3(pos.x, pos.y, pos.z));\r\n        // center = new MeshBuilder.CreateBox(\"CubeBox_\", { size: boxSize }, scene);\r\n        center = this.handler.createBox(pos, \"Center_\" + cubeName);\r\n        center.setParent(data.cubeRoot);\r\n        center.position.set(pos.x, pos.y, pos.z);\r\n        center.tag = \"center\";\r\n        data.centerPosition = { \"x\": pos.x, \"y\": pos.y, \"z\": pos.z };\r\n        data.cubePosition = center.position;\r\n        data.cubeRotation = center.rotation;\r\n        data.center = center;\r\n        center.renderingGroupId = 2;\r\n\r\n        var cubeCornerPoints = [];\r\n        cubeCornerPoints.push(new Vector3(pos.x - this.distanceD, pos.y - this.distanceY, pos.z + this.distanceD));\r\n        cubeCornerPoints.push(new Vector3(pos.x + this.distanceD, pos.y - this.distanceY, pos.z + this.distanceD));\r\n        cubeCornerPoints.push(new Vector3(pos.x - this.distanceD, pos.y + this.distanceY, pos.z + this.distanceD));\r\n        cubeCornerPoints.push(new Vector3(pos.x + this.distanceD, pos.y + this.distanceY, pos.z + this.distanceD));\r\n\r\n        cubeCornerPoints.push(new Vector3(pos.x - this.distanceD, pos.y - this.distanceY, pos.z - this.distanceD));\r\n        cubeCornerPoints.push(new Vector3(pos.x + this.distanceD, pos.y - this.distanceY, pos.z - this.distanceD));\r\n        cubeCornerPoints.push(new Vector3(pos.x - this.distanceD, pos.y + this.distanceY, pos.z - this.distanceD));\r\n        cubeCornerPoints.push(new Vector3(pos.x + this.distanceD, pos.y + this.distanceY, pos.z - this.distanceD));\r\n\r\n        var cubeCornerPointsBoxes = [];\r\n        for (let index = 0; index < cubeCornerPoints.length; index++) {\r\n            // var textureGround = new DynamicTexture(\"dynamic texture\", { width: 256, height: 256 }, scene);\r\n            // textureGround.getContext();\r\n            // var materialGround = new StandardMaterial(\"Mat\", scene);\r\n            // materialGround.diffuseTexture = textureGround;\r\n            // materialGround.backFaceCulling = false;\r\n            // materialGround.specularColor = new Color3(0, 0, 0);\r\n            // //Add text to dynamic texture\r\n            // var font = \"bold 200px monospace\";\r\n            // textureGround.drawText(index, 180, 190, font, \"Red\", \"Black\", true, true);\r\n            //  cubeCornerPointsBoxes.push(new MeshBuilder.CreateBox(\"CubeBox_\" + index, { size: boxSize / 4 }, scene));\r\n\r\n            // var box: any = this.handler.createBox(pos, \"CubeCornerBox_\" + cubeName, { size: DH_Constants.size_ControlBox / 4 })\r\n\r\n            var box: any = center.clone(\"CubeCornerBox_\" + cubeName);\r\n            console.log(box);\r\n            box.tag = \"cubeCornerBox__\";\r\n            box.setParent(data.cubeRoot);\r\n            box.position.set(cubeCornerPoints[index].x, cubeCornerPoints[index].y, cubeCornerPoints[index].z);\r\n            // cubeCornerPointsBoxes[index].material = materialGround;\r\n            box.rotation.y = box.rotation.y + 180;\r\n            box.index = index;\r\n            box.cubeName = data.cubeName;\r\n            box.renderingGroupId = 2;\r\n            box.isPickable = false;\r\n            box.computeWorldMatrix(true)\r\n            cubeCornerPointsBoxes.push(box);\r\n        }\r\n\r\n        var cubeCenterPointsBoxes: any = [];\r\n        var cubeCenterPoints = [];\r\n\r\n        cubeCenterPoints.push(new Vector3(pos.x, pos.y + this.distanceY, pos.z));\r\n        cubeCenterPoints.push(new Vector3(pos.x, pos.y - this.distanceY, pos.z));\r\n\r\n        cubeCenterPoints.push(new Vector3(pos.x, pos.y, pos.z - this.distanceD));\r\n        cubeCenterPoints.push(new Vector3(pos.x, pos.y, pos.z + this.distanceD));\r\n\r\n        cubeCenterPoints.push(new Vector3(pos.x + this.distanceD, pos.y, pos.z));\r\n        cubeCenterPoints.push(new Vector3(pos.x - this.distanceD, pos.y, pos.z));\r\n\r\n        for (let index = 0; index < cubeCenterPoints.length; index++) {\r\n\r\n            var textureGround = new DynamicTexture(\"dynamic texture\", { width: 512, height: 256 }, this.scene, false);\r\n            textureGround.getContext();\r\n\r\n            var materialGround = new StandardMaterial(\"Mat\", this.scene);\r\n            materialGround.diffuseTexture = textureGround;\r\n            materialGround.backFaceCulling = false;\r\n            materialGround.specularColor = new Color3(0, 0, 0);\r\n\r\n            //Add text to dynamic texture\r\n            var font = \"bold 200px monospace\";\r\n            textureGround.drawText(index.toString(), 180, 190, font, \"Red\", \"pink\", true, true);\r\n\r\n\r\n            var box: any = center.clone(\"CubeCornerBox_\" + cubeName);\r\n            // var box: any = this.handler.createBox(cubeCenterPoints[index], \"Center_\" + cubeName);\r\n            box.position = cubeCenterPoints[index];\r\n            // box.position.set(cubeCenterPoints[index].x, cubeCenterPoints[index].y, cubeCornerPoints[index].z);\r\n            box.setParent(data.cubeRoot);\r\n            // cubeCenterPoints[index] = box.position;\r\n\r\n            // console.log(box.position);\r\n\r\n            box.tag = \"cubeCornerBox\";\r\n            box.cubeName = data.cubeName;\r\n            box.roomName = data.roomName;\r\n\r\n            if (index == 1)\r\n                box.control = \"bottom\";\r\n            else if (index == 0)\r\n                box.control = \"top\";\r\n            else if (index > 1)\r\n                box.control = \"middle\";\r\n\r\n            box.material = materialGround;\r\n            box.index = index;\r\n            box.renderingGroupId = 3;\r\n\r\n            box.computeWorldMatrix(true)\r\n            cubeCenterPointsBoxes.push(box);\r\n            cubeCenterPointsBoxes[index].actionManager = new ActionManager(this.scene);\r\n\r\n            var lastMsg = \"\";\r\n            cubeCenterPointsBoxes[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                // console.log(\"On pointer over\");\r\n                if (DH_Constants.modeCube_edit_Cube) {\r\n                    lastMsg = this.cursor[0].textContent;\r\n                    this.appManager.DHCursor.updateMsg(\"Click to Select\");\r\n                }\r\n            }));\r\n            cubeCenterPointsBoxes[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                // console.log(\"On pointer exit\");\r\n\r\n                if (DH_Constants.modeCube_edit_Cube) {\r\n                    this.appManager.DHCursor.updateMsg(lastMsg)\r\n                }\r\n            }));\r\n            cubeCenterPointsBoxes[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n                // console.log(\">>>>>>>>>\");\r\n                // console.log(cubeCenterPointsBoxes[index]);\r\n                if (DH_Constants.modeCube_edit_Cube) {\r\n                    DH_Constants.modeCube_updatingCubeCenter = false;\r\n                    const pick = this.scene.pick(this.scene.pointerX, this.scene.pointerY);\r\n                    this.appManager.gizmoHandler.attachOnMesh(cubeCenterPointsBoxes[index]);\r\n                    console.log(this.appManager.gizmoHandler.gizmoManager)\r\n                    this.appManager.gizmoHandler.gizmoManager.positionGizmoEnabled = true;\r\n                    this.appManager.gizmoHandler.gizmoManager.rotationGizmoEnabled = false;\r\n                    this.appManager.gizmoHandler.gizmoManager.scaleGizmoEnabled = false;\r\n                    this.updateController(cubeCenterPointsBoxes[index]);\r\n                }\r\n\r\n                // }\r\n            }));\r\n            cubeCenterPointsBoxes[index].isVisible = true;\r\n        }\r\n\r\n        data.cubeCenterPoints = cubeCenterPoints;\r\n        data.cubeCenterPointsBoxes = cubeCenterPointsBoxes;\r\n        data.cubeCornerPoints = cubeCornerPoints;\r\n        data.cubeCornerPointsUV = cubeCornerPoints;\r\n        data.cubeCornerPointsBoxes = cubeCornerPointsBoxes;\r\n\r\n        data.cube = [];\r\n        data.cube.push(this.createCubePlane(\"front\", cubeCornerPoints[0], cubeCornerPoints[2], cubeCornerPoints[3], cubeCornerPoints[1], false, data));\r\n        data.cube.push(this.createCubePlane(\"left\", cubeCornerPoints[1], cubeCornerPoints[3], cubeCornerPoints[7], cubeCornerPoints[5], false, data));\r\n        data.cube.push(this.createCubePlane(\"back\", cubeCornerPoints[5], cubeCornerPoints[7], cubeCornerPoints[6], cubeCornerPoints[4], false, data));\r\n        data.cube.push(this.createCubePlane(\"right\", cubeCornerPoints[4], cubeCornerPoints[6], cubeCornerPoints[2], cubeCornerPoints[0], false, data));\r\n        data.cube.push(this.createCubePlane(\"top\", cubeCornerPoints[3], cubeCornerPoints[7], cubeCornerPoints[6], cubeCornerPoints[2], true, data));\r\n        data.cube.push(this.createCubePlane(\"bottom\", cubeCornerPoints[1], cubeCornerPoints[5], cubeCornerPoints[4], cubeCornerPoints[0], true, data));\r\n        // this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[data.name] = data;\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[data.cubeName] = data;\r\n        center.actionManager = new ActionManager(this.scene);\r\n\r\n        center.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n            console.log(\">>>>>>>>>\");\r\n            // if (edit_Cube) {\r\n            //     updatingCubeCenter = true;\r\n            //     selectedCube = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[center.cubeName];\r\n            //     // const pick = scene.pick(scene.pointerX, scene.pointerY);\r\n            //     gizmoManager.attachToMesh(data.center);\r\n            //     gizmoManager.positionGizmoEnabled = true;\r\n            //     gizmoManager.rotationGizmoEnabled = true;\r\n            //     gizmoManager.scaleGizmoEnabled = false;\r\n            //     gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 1;\r\n\r\n            //     gizmoManager.gizmos.rotationGizmo.xGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.rotationGizmo.yGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.rotationGizmo.zGizmo.scaleRatio = 1;\r\n            // }\r\n\r\n            if(DH_Constants.modeCube && DH_Constants.modeCube_edit_Cube)\r\n            {\r\n                console.log(DH_Constants)\r\n            }\r\n            //updateCubePoints(cubeCenterPointsBoxes[index]);\r\n\r\n        }));\r\n\r\n\r\n        data.cubeRoot.setParent(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].parentGroup);\r\n        this.disableAllCubeButton();\r\n\r\n        if (DH_Constants.modeCube) {\r\n            if (this.createNewButton != null)\r\n                this.createNewButton.style.display = 'block';\r\n            if (this.editCubeToggle != null)\r\n                this.editCubeToggle.style.display = 'block';\r\n        }\r\n        DH_Constants.modeCube_CreateNewCube = false;\r\n        this.editCubeToggle.checked = false;\r\n        DH_Constants.modeCube_edit_Cube = true;\r\n        DH_Constants.modeCube_updatingCubeCenter = false;\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n        this.appManager.DHCursor.updateMsg(\"Select points to edit Cube\");\r\n\r\n    }\r\n\r\n    createCubeFromJson(jsonData: any) {\r\n\r\n        var center: any;\r\n        var cubeName: any = jsonData.cubeName;\r\n\r\n        var data: any = {\r\n            cubeName: cubeName,\r\n            cubeRoot: new TransformNode(cubeName + \"_ROOT\")\r\n        };\r\n        console.log(data)\r\n        data.roomName = jsonData.roomName;\r\n        var pos: any = new BABYLON.Vector3(jsonData.centerPosition.x, jsonData.centerPosition.y, jsonData.centerPosition.z);\r\n        data.cubeRoot.setPivotPoint(new Vector3(pos.x, pos.y, pos.z));\r\n        // center = new MeshBuilder.CreateBox(\"CubeBox_\", { size: boxSize }, scene);\r\n        center = this.handler.createBox(pos, \"Center_\" + cubeName);\r\n        center.setParent(data.cubeRoot);\r\n        center.position.set(pos.x, pos.y, pos.z);\r\n        center.tag = \"center\";\r\n        data.centerPosition = { \"x\": pos.x, \"y\": pos.y, \"z\": pos.z };\r\n        data.cubePosition = center.position;\r\n        data.cubeRotation = center.rotation;\r\n        data.center = center;\r\n        center.renderingGroupId = 2;\r\n\r\n        var cubeCornerPoints: any = [];\r\n        var cubeCornerPointsBoxes = [];\r\n        for (let index = 0; index < jsonData.cubeCornerPoints.length; index++) {\r\n            var box: any = center.clone(\"CubeCornerBox_\" + cubeName);\r\n            console.log(box);\r\n            box.tag = \"cubeCornerBox__\";\r\n            box.setParent(data.cubeRoot);\r\n            box.position.set(jsonData.cubeCornerPoints[index].x, jsonData.cubeCornerPoints[index].y, jsonData.cubeCornerPoints[index].z);\r\n            cubeCornerPoints.push(box.position);\r\n            // cubeCornerPointsBoxes[index].material = materialGround;\r\n            box.rotation.y = box.rotation.y + 180;\r\n            box.index = index;\r\n            box.cubeName = data.cubeName;\r\n            box.renderingGroupId = 2;\r\n            box.isPickable = false;\r\n            box.computeWorldMatrix(true)\r\n            cubeCornerPointsBoxes.push(box);\r\n        }\r\n\r\n        var cubeCenterPointsBoxes: any = [];\r\n        var cubeCenterPoints: any = [];\r\n        for (let index = 0; index < jsonData.cubeCenterPoints.length; index++) {\r\n\r\n            var textureGround = new DynamicTexture(\"dynamic texture\", { width: 512, height: 256 }, this.scene, false);\r\n            textureGround.getContext();\r\n\r\n            var materialGround = new StandardMaterial(\"Mat\", this.scene);\r\n            materialGround.diffuseTexture = textureGround;\r\n            materialGround.backFaceCulling = false;\r\n            materialGround.specularColor = new Color3(0, 0, 0);\r\n\r\n            //Add text to dynamic texture\r\n            var font = \"bold 200px monospace\";\r\n            textureGround.drawText(index.toString(), 180, 190, font, \"Red\", \"pink\", true, true);\r\n\r\n\r\n            // var box: any = center.clone(\"CubeCornerBox_\" + cubeName);\r\n            // var box: any =   this.handler.createBox(pos, \"CubeCornerBox_\" + cubeName);\r\n            console.log(box)\r\n            var box: any = this.handler.createBox(jsonData.cubeCenterPoints[index], \"Center_\" + cubeName);\r\n            // box.position = jsonData.cubeCenterPoints[index];\r\n            box.setParent(data.cubeRoot);\r\n\r\n\r\n            // console.log(box.position);\r\n            box.tag = \"cubeCornerBox\";\r\n            box.cubeName = data.cubeName;\r\n            box.roomName = data.roomName;\r\n\r\n            if (index == 1)\r\n                box.control = \"bottom\";\r\n            else if (index == 0)\r\n                box.control = \"top\";\r\n            else if (index > 1)\r\n                box.control = \"middle\";\r\n\r\n            box.material = materialGround;\r\n            box.index = index;\r\n            box.renderingGroupId = 3;\r\n\r\n            box.computeWorldMatrix(true)\r\n            cubeCenterPointsBoxes.push(box);\r\n            cubeCenterPointsBoxes[index].actionManager = new ActionManager(this.scene);\r\n            cubeCenterPoints.push(box.position);\r\n\r\n            var lastMsg = \"\";\r\n            cubeCenterPointsBoxes[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                // console.log(\"On pointer over\");\r\n                if (DH_Constants.modeCube_edit_Cube) {\r\n                    lastMsg = this.cursor[0].textContent;\r\n                    this.appManager.DHCursor.updateMsg(\"Click to Select\");\r\n                }\r\n            }));\r\n            cubeCenterPointsBoxes[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                // console.log(\"On pointer exit\");\r\n\r\n                if (DH_Constants.modeCube_edit_Cube) {\r\n                    this.appManager.DHCursor.updateMsg(lastMsg)\r\n                }\r\n            }));\r\n            cubeCenterPointsBoxes[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n                // console.log(\">>>>>>>>>\");\r\n                // console.log(cubeCenterPointsBoxes[index]);\r\n                if (DH_Constants.modeCube_edit_Cube) {\r\n                    DH_Constants.modeCube_updatingCubeCenter = false;\r\n                    const pick = this.scene.pick(this.scene.pointerX, this.scene.pointerY);\r\n                    this.appManager.gizmoHandler.attachOnMesh(cubeCenterPointsBoxes[index]);\r\n                    console.log(this.appManager.gizmoHandler.gizmoManager)\r\n                    this.appManager.gizmoHandler.gizmoManager.positionGizmoEnabled = true;\r\n                    this.appManager.gizmoHandler.gizmoManager.rotationGizmoEnabled = false;\r\n                    this.appManager.gizmoHandler.gizmoManager.scaleGizmoEnabled = false;\r\n                    this.updateController(cubeCenterPointsBoxes[index]);\r\n                }\r\n\r\n                // }\r\n            }));\r\n            cubeCenterPointsBoxes[index].isVisible = true;\r\n        }\r\n\r\n        data.cubeCenterPoints = cubeCenterPoints;\r\n        data.cubeCenterPointsBoxes = cubeCenterPointsBoxes;\r\n        data.cubeCornerPoints = cubeCornerPoints;\r\n        data.cubeCornerPointsUV = cubeCornerPoints;\r\n        data.cubeCornerPointsBoxes = cubeCornerPointsBoxes;\r\n\r\n        data.cube = [];\r\n        for (let index = 0; index < jsonData.cube.length; index++) {\r\n            const cubeData = jsonData.cube[index];\r\n            data.cube.push(this.createCubePlaneFromJson(cubeData, data));\r\n        }\r\n        // this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[data.name] = data;\r\n        console.log(this.appManager.roomManager.RoomData[jsonData.roomName]);\r\n        console.log(data.cubeName)\r\n        this.appManager.roomManager.RoomData[jsonData.roomName].cubeGroup[data.cubeName] = data;\r\n        center.actionManager = new ActionManager(this.scene);\r\n\r\n        center.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n            // console.log(\">>>>>>>>>\");\r\n            // if (edit_Cube) {\r\n            //     updatingCubeCenter = true;\r\n            //     selectedCube = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[center.cubeName];\r\n            //     // const pick = scene.pick(scene.pointerX, scene.pointerY);\r\n            //     gizmoManager.attachToMesh(data.center);\r\n            //     gizmoManager.positionGizmoEnabled = true;\r\n            //     gizmoManager.rotationGizmoEnabled = true;\r\n            //     gizmoManager.scaleGizmoEnabled = false;\r\n            //     gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 1;\r\n\r\n            //     gizmoManager.gizmos.rotationGizmo.xGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.rotationGizmo.yGizmo.scaleRatio = 1;\r\n            //     gizmoManager.gizmos.rotationGizmo.zGizmo.scaleRatio = 1;\r\n            // }\r\n            //updateCubePoints(cubeCenterPointsBoxes[index]);\r\n\r\n        }));\r\n\r\n\r\n        data.cubeRoot.setParent(this.appManager.roomManager.RoomData[jsonData.roomName].parentGroup);\r\n        this.disableAllCubeButton();\r\n\r\n        if (DH_Constants.modeCube) {\r\n            if (this.createNewButton != null)\r\n                this.createNewButton.style.display = 'block';\r\n            if (this.editCubeToggle != null)\r\n                this.editCubeToggle.style.display = 'block';\r\n        }\r\n        DH_Constants.modeCube_CreateNewCube = false;\r\n        this.editCubeToggle.checked = false;\r\n        DH_Constants.modeCube_edit_Cube = true;\r\n        DH_Constants.modeCube_updatingCubeCenter = false;\r\n        DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n        this.appManager.DHCursor.updateMsg(\"Select points to edit Cube\");\r\n\r\n    }\r\n    private createCubePlaneFromJson(jsonData: any, data: any) {\r\n\r\n        var faceData: any = {};\r\n        var _uvs = jsonData.vertexData.uvs;\r\n        var newPlane: any = new Mesh(\"cubewall_\" + jsonData.name, this.scene);\r\n        newPlane.tag = \"cubewall\";\r\n\r\n        var newPlanepositions: any = [];\r\n        Object.keys(jsonData.vertexData.positions).forEach(element => {\r\n            // console.log(element);\r\n            newPlanepositions.push(jsonData.vertexData.positions[element]);\r\n            //\r\n        });\r\n\r\n        var indicesSeq = jsonData.vertexData.indices;\r\n        var newPlanenormals = [];\r\n        if (jsonData.vertexData.hasOwnProperty(\"normals\"))\r\n            newPlanenormals = jsonData.vertexData.normals;\r\n        var vertexData = new BABYLON.VertexData();\r\n        BABYLON.VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n        vertexData.positions = newPlanepositions;\r\n        vertexData.indices = indicesSeq;\r\n        if (jsonData.vertexData.hasOwnProperty(\"normals\"))\r\n            vertexData.normals = newPlanenormals;\r\n        vertexData.uvs = _uvs;\r\n        vertexData.applyToMesh(newPlane);\r\n        newPlane.material = this.appManager.roomManager.RoomData[data.roomName].material;\r\n        newPlane.cubeName = data.cubeName;\r\n        newPlane.roomName = data.roomName;\r\n        newPlane.faceName = jsonData.name;\r\n        newPlane.name = jsonData.name;\r\n        newPlane.renderingGroupId = 1;\r\n        faceData.faceName = jsonData.name;\r\n        faceData.roomName = data.roomName;\r\n        faceData.cubeName = data.cubeName;\r\n        faceData.vertexData = vertexData;\r\n        faceData.plane = newPlane;\r\n        newPlane.setParent(data.cubeRoot);\r\n        newPlane.isPickable = false;\r\n\r\n        return faceData;\r\n\r\n    }\r\n\r\n    private createCubePlane(face: string, p0: any, p1: any, p2: any, p3: any, normals: any, data: any) {\r\n\r\n        var faceData: any = {};\r\n        var vertex = [];\r\n        vertex.push(p0);\r\n        vertex.push(p1);\r\n        var topPoints = this.handler.getPoints(p2, p1);\r\n        var bottomPoints = this.handler.getPoints(p3, p0);\r\n        for (var i = 0; i < DH_Constants.divPoint - 1; i++) {\r\n            vertex.push(topPoints[i])\r\n            vertex.push(bottomPoints[i])\r\n        }\r\n        vertex.push(p2);\r\n        vertex.push(p3);\r\n        var _uvs: any = [];\r\n\r\n\r\n        vertex.forEach(element => {\r\n            var coordinates = Vector3.Project(\r\n                element,\r\n                Matrix.Identity(),\r\n                this.scene.getTransformMatrix(),\r\n                this.camera.viewport.toGlobal(\r\n                    this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n                    this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n                ));\r\n\r\n            var uvCoordinates = this.handler.getUvPoint(coordinates);\r\n            _uvs.push(uvCoordinates.x);\r\n            _uvs.push(uvCoordinates.y);\r\n\r\n        });\r\n        var newPlane: any = new Mesh(\"cubewall_\" + face, this.scene);\r\n        newPlane.material = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].material;\r\n        newPlane.tag = \"cubewall\";\r\n        var newPlanepositions = this.handler.getPosition(vertex);\r\n        //for 10\r\n        var flag = true;\r\n        var index = 0;\r\n        var indicesSeq = [];\r\n        for (var i = 0; i < DH_Constants.divPoint; i++) {\r\n            if (flag) {\r\n                indicesSeq.push(index++);\r\n                indicesSeq.push(index++);\r\n                indicesSeq.push(++index);\r\n                indicesSeq.push(index - 2);\r\n                indicesSeq.push(index - 1);\r\n                indicesSeq.push(index);\r\n                flag = !flag;\r\n            } else {\r\n                indicesSeq.push(index--);\r\n                indicesSeq.push(index);\r\n                index += 3;\r\n                indicesSeq.push(index);\r\n                indicesSeq.push(index - 3);\r\n                indicesSeq.push(index - 1);\r\n                indicesSeq.push(index);\r\n            }\r\n        }\r\n        var newPlanenormals: any = [];\r\n        var vertexData = new VertexData();\r\n        VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n        vertexData.positions = newPlanepositions;\r\n        if (!normals)\r\n            vertexData.normals = newPlanenormals;\r\n        vertexData.indices = indicesSeq;\r\n        vertexData.uvs = _uvs;\r\n        vertexData.applyToMesh(newPlane);\r\n\r\n        newPlane.cubeName = data.cubeName;\r\n        newPlane.roomName = data.roomName;\r\n        newPlane.faceName = face;\r\n        newPlane.name = face;\r\n\r\n\r\n        newPlane.renderingGroupId = 1;\r\n        faceData.faceName = face;\r\n        faceData.roomName = data.roomName;\r\n        faceData.cubeName = data.cubeName;\r\n        faceData.vertexData = vertexData;\r\n        faceData.plane = newPlane;\r\n\r\n        newPlane.setParent(data.cubeRoot);\r\n        newPlane.isPickable = false;\r\n\r\n        return faceData;\r\n\r\n    }\r\n\r\n    private updateController(selectedBox: any) {\r\n        // updatingCube=true;\r\n        // return;\r\n        var greater = false;\r\n        console.log(selectedBox.cubeName)\r\n        // console.log(DH_Constants.currentRoomName)\r\n\r\n        // console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup)\r\n        if (selectedBox.index == 2) {\r\n            greater =\r\n                this.updateCubeGizmo(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[2].position,\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[3].position)\r\n        } else if (selectedBox.index == 3) {\r\n            greater =\r\n                this.updateCubeGizmo(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[3].position,\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[2].position)\r\n        } else if (selectedBox.index == 4) {\r\n            greater =\r\n                this.updateCubeGizmo(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[4].position,\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[5].position)\r\n        } else if (selectedBox.index == 5) {\r\n            greater =\r\n                this.updateCubeGizmo(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[5].position,\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCenterPointsBoxes[4].position)\r\n        }\r\n        else if (selectedBox.index == 0 || selectedBox.index == 1) {\r\n            // lastObj = selectedBox;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 0.0;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 0;\r\n        }\r\n        // selectedCube = selectedBox;\r\n        selectedBox.greater = greater;\r\n    }\r\n    private updateCubeGizmo(var1: any, var2: any) {\r\n\r\n        var xDif = (var1.x - var2.x);\r\n        var yDif = (var1.y - var2.y);\r\n        var zDif = (var1.z - var2.z);\r\n        if (xDif < 0)\r\n            xDif = -xDif;\r\n        if (yDif < 0)\r\n            yDif = -yDif;\r\n        if (zDif < 0)\r\n            zDif = -zDif;\r\n\r\n        var greater = false;\r\n\r\n        if (xDif >= yDif && xDif >= zDif) {\r\n            //largest = \"X\";\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 1;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 0.0;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 0.0;\r\n            if (var1.x > var2.x)\r\n                greater = true;\r\n            // return greater;\r\n        }\r\n        else if (yDif >= xDif && yDif >= zDif) {\r\n            //  largest = \"Y\";\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 0.0;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1.0;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 0;\r\n            if (var1.y > var2.y)\r\n                greater = true;\r\n            // return greater;\r\n        }\r\n        else {\r\n            // largest = \"Z\";\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 0.0;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 0.0;\r\n            this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 1;\r\n            if (var1.z > var2.z)\r\n                greater = true;\r\n            // return greater;\r\n        }\r\n        this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 1;\r\n        this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1;\r\n        this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 1;\r\n        return greater;\r\n\r\n    }\r\n\r\n\r\n    ondragCubePoints(selectedCube: any, dragEvent: any, dir: any) {\r\n        //    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubePosition =this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position;\r\n\r\n        console.log(selectedCube.roomName)\r\n        console.log(selectedCube.cubeName)\r\n\r\n        console.log(this.appManager.roomManager)\r\n        console.log(this.appManager.roomManager.RoomData[selectedCube.roomName])\r\n\r\n        var dif = 0;\r\n\r\n        if (selectedCube.tag === \"cubeCornerBox\") {\r\n            // selectedCube =this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName];\r\n            console.log(selectedCube);\r\n            console.log(dragEvent);\r\n            console.log(dir);\r\n            if (selectedCube.index == 2 && dir == \"x\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.x > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[2].x = selectedCube.position.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.x < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[2].x = selectedCube.position.x;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].x = selectedCube.position.x;\r\n\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].x = selectedCube.position.x;\r\n                        }\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x - dif;\r\n                }\r\n            }\r\n            else if (selectedCube.index == 2 && dir == \"z\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.z > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[2].z = selectedCube.position.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].z = selectedCube.position.z;\r\n\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].z = selectedCube.position.z;\r\n\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.z = selectedCube.position.z;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = ce.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.z < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[2].z = selectedCube.position.z;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].z = selectedCube.position.z;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.z = selectedCube.position.z;\r\n\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z =RoomData[CurrentRoomName].CubeData[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z-selectedCube.position.z;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z =RoomData[CurrentRoomName].CubeData[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z-selectedCube.position.z;\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n\r\n\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z - dif;\r\n                }\r\n            }\r\n            // 3\r\n            else if (selectedCube.index == 3 && dir == \"x\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.x > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[3].x = selectedCube.position.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.x < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[3].x = selectedCube.position.x;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x - dif;\r\n                }\r\n            }\r\n            else if (selectedCube.index == 3 && dir == \"z\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.z > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[3].z = selectedCube.position.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].z = selectedCube.position.z;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.z = selectedCube.position.z;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.z < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[3].z = selectedCube.position.z;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].z = selectedCube.position.z;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.z = selectedCube.position.z;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z - dif;\r\n                }\r\n            }\r\n            //4 & 5\r\n            else if (selectedCube.index == 4 && dir == \"x\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.x > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[4].x = selectedCube.position.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = ce.x;\r\n\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z= ce.z;   \r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.x < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[4].x = selectedCube.position.x;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = ce.x;\r\n\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z= ce.z;   \r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x - dif;\r\n                }\r\n            }\r\n            else if (selectedCube.index == 4 && dir == \"z\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.z > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[4].z = selectedCube.position.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].z = selectedCube.position.z;\r\n                        }\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.z = selectedCube.position.z;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = ce.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x= ce.x;   \r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.z < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[4].z = selectedCube.position.z;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].z = selectedCube.position.z;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.z = selectedCube.position.z;\r\n\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = ce.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x= ce.x;   \r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z - dif;\r\n                }\r\n            }\r\n            // 5\r\n            else if (selectedCube.index == 5 && dir == \"x\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.x > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[5].x = selectedCube.position.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.x = selectedCube.position.x;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = ce.x;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z= ce.z;   \r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.x < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[5].x = selectedCube.position.x;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].x = selectedCube.position.x;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].x = selectedCube.position.x;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].x = selectedCube.position.x;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.x = selectedCube.position.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.x = selectedCube.position.x;\r\n\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position)\r\n                        // console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.x = ce.x;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.x = ce.x;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.x = ce.x;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z= ce.z;   \r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x = ce.x;\r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.x = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.x - dif;\r\n                }\r\n            }\r\n            else if (selectedCube.index == 5 && dir == \"z\") {\r\n                if (selectedCube.greater) {\r\n                    if (selectedCube.position.z > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z + dif) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[5].z = selectedCube.position.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].z = selectedCube.position.z;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.z = selectedCube.position.z;\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x= ce.x;   \r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z + dif;\r\n                }\r\n                else {\r\n                    if (selectedCube.position.z < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z - dif) {\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[5].z = selectedCube.position.z;\r\n\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].z = selectedCube.position.z;\r\n                        if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].z = selectedCube.position.z;\r\n                            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].z = selectedCube.position.z;\r\n                        }\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.z = selectedCube.position.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.z = selectedCube.position.z;\r\n\r\n\r\n                        var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position)\r\n                        //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                        console.log(ce);\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.z = ce.z;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.z = ce.z;\r\n\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z = ce.z;\r\n                        //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x= ce.x;   \r\n                    }\r\n                    else\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.z = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.z - dif;\r\n                }\r\n            }\r\n            else if (selectedCube.index == 0 && dir == \"y\") {\r\n                // console.log(selectedCube.position.y)\r\n                // console.log(this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.y + dif)\r\n\r\n                if (selectedCube.position.y > this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.y + dif) {\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[0].y = selectedCube.position.y;\r\n\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[2].y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[3].y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[6].y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[7].y = selectedCube.position.y;\r\n                    if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[2].y = selectedCube.position.y;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[3].y = selectedCube.position.y;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[6].y = selectedCube.position.y;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[7].y = selectedCube.position.y;\r\n                    }\r\n\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[2].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[3].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[6].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[7].position.y = selectedCube.position.y;\r\n\r\n                    var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position)\r\n                    //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                    console.log(ce);\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.y = ce.y;\r\n\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.y = ce.y;\r\n                    //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x= ce.x;   \r\n                }\r\n                else\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.y = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.y + dif;\r\n            }\r\n            else if (selectedCube.index == 1 && dir == \"y\") {\r\n                if (selectedCube.position.y < this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.y - dif) {\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints[1].y = selectedCube.position.y;\r\n\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[0].y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[1].y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[4].y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints[5].y = selectedCube.position.y;\r\n                    if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[0].y = selectedCube.position.y;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[1].y = selectedCube.position.y;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[4].y = selectedCube.position.y;\r\n                        this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsUV[5].y = selectedCube.position.y;\r\n                    }\r\n\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[0].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[1].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[4].position.y = selectedCube.position.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes[5].position.y = selectedCube.position.y;\r\n\r\n                    var ce = Vector3.Center(selectedCube.position, this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position)\r\n                    //   var ce=    (selectedCube.position +this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position) / 2;\r\n                    console.log(ce);\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[4].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[5].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[2].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[3].position.y = ce.y;\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.y = ce.y;\r\n\r\n                }\r\n                else\r\n                    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[1].position.y = this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes[0].position.y - dif;\r\n            }\r\n            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeRoot.setPivotPoint(new Vector3(\r\n                this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x,\r\n                this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.y,\r\n                this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z));\r\n            // if (updatingCubeWalls) {\r\n            this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].centerPosition =\r\n            {\r\n                \"x\": this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.x,\r\n                \"y\": this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.y,\r\n                \"z\": this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position.z\r\n            };\r\n            // }\r\n            //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].centerPosition = \r\n            //    this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].center.position;\r\n        }\r\n        else {\r\n\r\n\r\n            console.log(dir);\r\n            console.log(dragEvent);\r\n            //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPointsBoxes.forEach(cubeCenterPointsBoxes => {\r\n            //     if (dir == \"x\")\r\n            //         cubeCenterPointsBoxes.position.x += dragEvent.dragDistance;\r\n            //     if (dir == \"y\")\r\n            //         cubeCenterPointsBoxes.position.y += dragEvent.dragDistance;\r\n            //     if (dir == \"z\")\r\n            //         cubeCenterPointsBoxes.position.z += dragEvent.dragDistance;\r\n            // });\r\n\r\n            //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPointsBoxes.forEach(cubeCornerPointsBoxes => {\r\n            //     if (dir == \"x\")\r\n            //         cubeCornerPointsBoxes.position.x += dragEvent.dragDistance;\r\n            //     if (dir == \"y\")\r\n            //         cubeCornerPointsBoxes.position.y += dragEvent.dragDistance;\r\n            //     if (dir == \"z\")\r\n            //         cubeCornerPointsBoxes.position.z += dragEvent.dragDistance;\r\n            // });\r\n\r\n            //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCenterPoints.forEach(cubeCenterPoints => {\r\n\r\n            //     if (dir == \"x\")\r\n            //         cubeCenterPoints.x += dragEvent.dragDistance;\r\n            //     if (dir == \"y\")\r\n            //         cubeCenterPoints.y += dragEvent.dragDistance;\r\n            //     if (dir == \"z\")\r\n            //         cubeCenterPoints.z += dragEvent.dragDistance;\r\n            // });\r\n\r\n            //this.appManager.roomManager.RoomData[selectedCube.roomName].cubeGroup[selectedCube.cubeName].cubeCornerPoints.forEach(cubeCornerPoints => {\r\n\r\n            //     if (dir == \"x\")\r\n            //         cubeCornerPoints.x += dragEvent.dragDistance;\r\n            //     if (dir == \"y\")\r\n            //         cubeCornerPoints.y += dragEvent.dragDistance;\r\n            //     if (dir == \"z\")\r\n            //         cubeCornerPoints.z += dragEvent.dragDistance;\r\n            // });\r\n\r\n        }\r\n    }\r\n\r\n\r\n    updateCube(selectedBox: any) {\r\n        console.log(\"updateCube\")\r\n        this.updateCubePlane(0, selectedBox.cubeName, this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[0], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[2], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[3], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[1], false);\r\n        this.updateCubePlane(1, selectedBox.cubeName, this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[1], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[3], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[7], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[5], false);\r\n        this.updateCubePlane(2, selectedBox.cubeName, this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[5], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[7], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[6], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[4], false);\r\n        this.updateCubePlane(3, selectedBox.cubeName, this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[4], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[6], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[2], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[0], false);\r\n        this.updateCubePlane(4, selectedBox.cubeName, this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[3], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[7], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[6], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[2], true);\r\n        this.updateCubePlane(5, selectedBox.cubeName, this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[1], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[5], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[4], this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[selectedBox.cubeName].cubeCornerPoints[0], true);\r\n\r\n    }\r\n\r\n    private updateCubePlane(Index: any, cubeName: any, p0: any, p1: any, p2: any, p3: any, normals: any) {\r\n        try {\r\n\r\n            var vertex = [];\r\n            vertex.push(p0);\r\n            vertex.push(p1);\r\n            var topPoints = this.handler.getPoints(p2, p1);\r\n            var bottomPoints = this.handler.getPoints(p3, p0);\r\n            for (var i = 0; i < DH_Constants.divPoint - 1; i++) {\r\n                vertex.push(topPoints[i])\r\n                vertex.push(bottomPoints[i])\r\n            }\r\n            vertex.push(p2);\r\n            vertex.push(p3);\r\n            var _uvs: any = [];\r\n            // var DH_Constants.modeCube_edit_CubeWallUVPosition = true;\r\n            if (DH_Constants.modeCube_edit_CubeWallUVPosition) {\r\n                vertex.forEach(element => {\r\n                    var coordinates = Vector3.Project(\r\n                        element,\r\n                        Matrix.Identity(),\r\n                        this.scene.getTransformMatrix(),\r\n                        this.camera.viewport.toGlobal(\r\n                            this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n                            this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n                        ));\r\n\r\n                    var uvCoordinates = this.handler.getUvPoint(coordinates);\r\n                    _uvs.push(uvCoordinates.x);\r\n                    _uvs.push(uvCoordinates.y);\r\n\r\n                });\r\n            }\r\n\r\n            var newPlanepositions = this.handler.getPosition(vertex);\r\n\r\n            //for 10\r\n            var flag = true;\r\n            var index = 0;\r\n            var indicesSeq = [];\r\n            for (var i = 0; i < DH_Constants.divPoint; i++) {\r\n                if (flag) {\r\n                    indicesSeq.push(index++);\r\n                    indicesSeq.push(index++);\r\n                    indicesSeq.push(++index);\r\n                    indicesSeq.push(index - 2);\r\n                    indicesSeq.push(index - 1);\r\n                    indicesSeq.push(index);\r\n                    flag = !flag;\r\n                } else {\r\n                    indicesSeq.push(index--);\r\n                    indicesSeq.push(index);\r\n                    index += 3;\r\n                    indicesSeq.push(index);\r\n                    indicesSeq.push(index - 3);\r\n                    indicesSeq.push(index - 1);\r\n                    indicesSeq.push(index);\r\n                }\r\n            }\r\n            var newPlanenormals: any = [];\r\n            var newPlanevertexData = new BABYLON.VertexData();\r\n            BABYLON.VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n            // BABYLON.VertexData._ComputeSides(BABYLON.Mesh.FRONTSIDE, newPlanepositions, indicesSeq, newPlanenormals, _uvs);\r\n            //Assign positions, indices and normals to vertexData\r\n            // console.log(newPlanepositions)\r\n            newPlanevertexData.positions = newPlanepositions;\r\n            newPlanevertexData.indices = indicesSeq;\r\n            if (!normals)\r\n                newPlanevertexData.normals = newPlanenormals;\r\n            if (DH_Constants.modeCube_edit_CubeWallUVPosition)\r\n                newPlanevertexData.uvs = _uvs;\r\n            newPlanevertexData.applyToMesh(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].cube[Index].plane);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].cube[Index].vertexData = newPlanevertexData;\r\n            // updating = false;\r\n\r\n\r\n            // let newPlaneMin = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].cube[Index].plane.getBoundingInfo().boundingBox.minimum;\r\n            // let newPlaneMax = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[cubeName].cube[Index].plane.getBoundingInfo().boundingBox.maximum;\r\n            // if (Index != 0) {\r\n            //     newMin = Vector3.Minimize(newMin, newPlaneMin);\r\n            //     newMax = Vector3.Maximize(newMax, newPlaneMax);\r\n            // }\r\n            // else {\r\n            //     newMin = newPlaneMin;\r\n            //     newMax = newPlaneMax;\r\n            // }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}","import { Scene, ArcRotateCamera } from \"@babylonjs/core\";\r\nimport { AppManager } from \"../ts/AppManager\";\r\nimport { Handler } from \"../ts/Handler\";\r\n\r\nexport class EditRoom {\r\n    private appManager: AppManager;\r\n    private handler: Handler;\r\n    private scene: Scene;\r\n    private camera: ArcRotateCamera;\r\n\r\n    private editRoomPosButton: any;\r\n    private editRoomElementPosButton: any;\r\n    private editRoomDoneButton: any;\r\n    private buttons: any = [];\r\n    // private cursor: any;\r\n\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n        this.scene = appManager.sceneManager.getScene();\r\n        this.camera = this.appManager.sceneManager.getCamera();\r\n\r\n        this.handler = this.appManager.handler.getHandler();\r\n\r\n        this.editRoomPosButton = document.getElementById('EditRoomPosition');\r\n        this.buttons.push(this.editRoomPosButton);\r\n        this.editRoomElementPosButton = document.getElementById('EditRoomElementPosition');\r\n        this.buttons.push(this.editRoomElementPosButton);\r\n\r\n        this.editRoomDoneButton = document.getElementById('DoneRoomEdit');\r\n        this.buttons.push(this.editRoomDoneButton);\r\n        // this.cursor = this.appManager.DHCursor.getCursor();\r\n    }\r\n    private disableAllButton() {\r\n\r\n        this.buttons.forEach((element: any) => {\r\n            element.style.display = 'none';\r\n        });\r\n\r\n    }\r\n\r\n    EditRoomPosition() {\r\n        this.disableAllButton();\r\n        if (this.editRoomElementPosButton != null)\r\n            this.editRoomElementPosButton.style.display = 'block';\r\n        if (this.editRoomDoneButton != null)\r\n            this.editRoomDoneButton.style.display = 'block';\r\n    }\r\n\r\n    EditRoomElementPosition() {\r\n        this.disableAllButton();\r\n        if (this.editRoomPosButton != null)\r\n            this.editRoomPosButton.style.display = 'block';\r\n        if (this.editRoomDoneButton != null)\r\n            this.editRoomDoneButton.style.display = 'block';\r\n    }\r\n    DoneRoomEdit(){\r\n        this.disableAllButton();\r\n    }\r\n\r\n\r\n}","import { AppManager } from \"../ts/AppManager\";\r\nimport * as $ from \"jquery\";\r\nimport { DH_Constants } from \"./DH_Constants\";\r\n\r\n\r\nexport class JsonManager {\r\n\r\n\r\n    appManager: AppManager;\r\n    constructor(appManager: AppManager) {\r\n\r\n        this.appManager = appManager;\r\n        this.getLocalJson();\r\n\r\n    }\r\n\r\n    jsonData: any = {\r\n        \"Rooms\": {\r\n            \"ProjectID_R0010286_20170913092820.JPG\": {\r\n                \"url\": \"assets/inhouse/flat2/R0010286_20170913092820.JPG\"\r\n            },\r\n            \"ProjectID_R0010287_20170913092842.JPG\": {\r\n                \"url\": \"assets/inhouse/flat2/R0010287_20170913092842.JPG\"\r\n            }\r\n        }\r\n    }\r\n\r\n    readJson(folderPath: any) {\r\n\r\n        // var http = new XMLHttpRequest();\r\n        // http.open('HEAD', folderPath+\"Room.json\", false);\r\n        // http.send();\r\n        // console.log(http);\r\n        // return http.status != 404;\r\n        // return;\r\n        // var heightCalculate = false;\r\n\r\n        $.get(folderPath + \"Room.json\")\r\n            .done((data) => {\r\n                console.log(data);\r\n                this.processData(data);\r\n\r\n            }).fail(() => {\r\n                console.log(\"response\");\r\n            })\r\n\r\n    }\r\n\r\n    getLocalJson()\r\n    {\r\n        console.log(\"* GET LOCAL SETTING *\");\r\n        let names = ['Room.json'];\r\n        let requests = names.map(name => fetch(`${'assets'}/${name}`));\r\n\r\n        Promise.all(requests)\r\n        .then(resp => Promise.all(resp.map(r => r.json()) ))\r\n        .then(result => {\r\n            console.log(\"Json DONE\");\r\n            console.log(result[0]);\r\n\r\n            this.appManager.roomManager.initRoomData(result[0])\r\n           \r\n        });\r\n    }\r\n    loadedJson: any;\r\n\r\n\r\n\r\n    processData(json: any) {\r\n        // if (!calculateHeight) {\r\n\r\n            // wallHeight = json.RoomHeightData.wallHeight\r\n            // topY = json.RoomHeightData.topY\r\n            // bottomY = json.RoomHeightData.bottomY\r\n\r\n        //     buttonHeight.isVisible = false;\r\n        //     buttonNextPlane.isVisible = true;\r\n        //     textBlock.text = \"START CREATING WALLS DOUBLE CLICK ON CORNER ONE BY ONE\";\r\n        //     textBlock.fontSize = \"25px\";\r\n        //     // getHeight(element2.cornersPos[1],element2.cornersPos[0])\r\n        //     calculateHeight = true;\r\n        // }\r\n        // var i = 0;\r\n        // Object.keys(json.Rooms).forEach(element => {\r\n        //     // console.log(json[element]);\r\n        //     console.log(element);\r\n        //     // console.log(json[element].WallData);\r\n        //     changeRoom(i++, json.Rooms[element].ParentTransform, true);\r\n        //     if (!json.Rooms[element].hasOwnProperty(\"CubeData\"))\r\n        //         json.Rooms[element].CubeData = [];\r\n        //     console.log(json.Rooms[element]);\r\n        //     json.Rooms[element].WallData.forEach(element2 => {\r\n        //         // console.log(element2);\r\n        //         createPlaneFromJson(element2, element);\r\n        //     });\r\n\r\n        //     Object.keys(json.Rooms[element].CubeData).forEach(cubeName => {\r\n        //         console.log(\"cubeName :\", cubeName);\r\n        //         console.log(json.Rooms[element].CubeData[cubeName]);\r\n        //         // Object.value(json.Rooms[element].CubeData[cubeName])\r\n        //         //  createCubeFromJson(json.Rooms[element].CubeData[cubeName]);\r\n        //     });\r\n\r\n        //     // console.log(json[element].WallData.length);\r\n        // });\r\n        // loadedJson = json;\r\n        // changeRoom(0, null, true);\r\n        // enableAll3DRooms();\r\n        // disableAll3DRooms();\r\n    }\r\n\r\n\r\n    exportTojson() {\r\n\r\n        // var gridRotation = new BABYLON.Quaternion(0, 0, 0, 0);\r\n        // if (gridground)\r\n        //     gridRotation = gridground.rotationQuaternion\r\n\r\n        this.jsonData[\"RoomHeightData\"] = {};\r\n        this.jsonData[\"RoomHeightData\"] = {\r\n            \"wallHeight\": DH_Constants.wallHeight,\r\n            \"topY\": DH_Constants.topY,\r\n            \"bottomY\": DH_Constants.bottomY\r\n        }\r\n        var RoomNames = Object.keys(this.jsonData.Rooms)\r\n\r\n        RoomNames.forEach(element => {\r\n            if (this.appManager.roomManager.RoomData.hasOwnProperty(element)) {\r\n                var data: any = {};\r\n                console.log(this.appManager.roomManager.RoomData[element]);\r\n                if (this.appManager.roomManager.RoomData[element].parentGroup != undefined) {\r\n                    data.parentGroupTransform = {\r\n                        \"position\": {\r\n                            \"x\": this.appManager.roomManager.RoomData[element].parentGroup.position.x,\r\n                            \"y\": this.appManager.roomManager.RoomData[element].parentGroup.position.y,\r\n                            \"z\": this.appManager.roomManager.RoomData[element].parentGroup.position.z,\r\n                        },\r\n                        \"rotation\": {\r\n                            \"x\": this.appManager.roomManager.RoomData[element].parentGroup.rotation.x,\r\n                            \"y\": this.appManager.roomManager.RoomData[element].parentGroup.rotation.y,\r\n                            \"z\": this.appManager.roomManager.RoomData[element].parentGroup.rotation.z,\r\n                        },\r\n                        \"scaling\": {\r\n                            \"x\": this.appManager.roomManager.RoomData[element].parentGroup.scaling.x,\r\n                            \"y\": this.appManager.roomManager.RoomData[element].parentGroup.scaling.y,\r\n                            \"z\": this.appManager.roomManager.RoomData[element].parentGroup.scaling.z,\r\n                        }\r\n                    }\r\n                }\r\n                else data.ParentTransform = {};\r\n\r\n                data.wallGroup = {};\r\n                var wallGroups = Object.keys(this.appManager.roomManager.RoomData[element].wallGroup);\r\n                if (this.appManager.roomManager.RoomData[element].wallGroup) {\r\n\r\n                    for (var v = 0; v < wallGroups.length; v++) {\r\n\r\n                        var s_WallGroup = wallGroups[v];\r\n                        data.wallGroup[s_WallGroup] = {};\r\n                        if (this.appManager.roomManager.RoomData[element].wallGroup.hasOwnProperty(s_WallGroup) &&\r\n                         this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].hasOwnProperty(\"WallsData\")) {\r\n                            data.wallGroup[s_WallGroup][\"WallsData\"] = {}\r\n                            var wallNames = Object.keys(this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData);\r\n                            console.log(this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData);\r\n\r\n                            for (let v2 = 0; v2 < wallNames.length; v2++) {\r\n                                var s_WallName = wallNames[v2];\r\n                                var _walldata: any = {};\r\n                                _walldata.cornersPos = [];\r\n                                _walldata.wallName=this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].wallName;\r\n                                _walldata.roomName=this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].roomName;\r\n                                _walldata.wallGroupName=this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].wallGroupName;\r\n                                _walldata.vertexData=this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].vertexData;\r\n                                console.log(s_WallName);\r\n                                console.log(this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName]);\r\n\r\n                                if (this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].hasOwnProperty(\"cornersPos\")) {\r\n                                    for (let index = 0; index < this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].cornersPos.length; index++) {\r\n                                        var obj = {\r\n                                            \"x\": this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].cornersPos[index].x,\r\n                                            \"y\": this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].cornersPos[index].y,\r\n                                            \"z\": this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].cornersPos[index].z\r\n                                        };\r\n                                        _walldata.cornersPos.push(obj)\r\n                                    }\r\n                                }\r\n                                // _walldata.uvPointsPos = this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].uvPointsPos;\r\n                                _walldata.uvPointsPos = [];\r\n                                if (this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].hasOwnProperty(\"uvPointsPos\")) {\r\n                                    for (let index = 0; index < this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].uvPointsPos.length; index++) {\r\n                                        var obj = {\r\n                                            \"x\": this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].uvPointsPos[index].x,\r\n                                            \"y\": this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].uvPointsPos[index].y,\r\n                                            \"z\": this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].uvPointsPos[index].z\r\n                                        };\r\n                                        _walldata.uvPointsPos.push(obj)\r\n                                    }\r\n                                }\r\n                                if (this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].hasOwnProperty(\"name\")) {\r\n\r\n                                    _walldata.name = this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].name;\r\n                                    _walldata.vertexData = this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].vertexData;\r\n                                    if (this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].isVisible != undefined)\r\n                                        _walldata.isVisible = this.appManager.roomManager.RoomData[element].wallGroup[s_WallGroup].WallsData[s_WallName].isVisible;\r\n                                    else\r\n                                        _walldata.isVisible = true;\r\n                                }\r\n                                data.wallGroup[s_WallGroup].WallsData[s_WallName] = _walldata;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                data.cubeGroup = {};\r\n                Object.keys(this.appManager.roomManager.RoomData[element].cubeGroup).forEach(cubeName => {\r\n                    console.log(this.appManager.roomManager.RoomData[element].cubeGroup[cubeName]);\r\n                    var _CubeData: any = {};\r\n                    _CubeData.cubeName = cubeName;\r\n                    _CubeData.roomName=element;\r\n                    _CubeData.centerPosition = {\r\n                        \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].centerPosition.x,\r\n                        \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].centerPosition.y,\r\n                        \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].centerPosition.z\r\n                    };\r\n                    _CubeData.cubePosition = {\r\n                        \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubePosition.x,\r\n                        \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubePosition.y,\r\n                        \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubePosition.z\r\n                    };\r\n                    _CubeData.cubeRotation = {\r\n                        \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeRotation.x,\r\n                        \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeRotation.y,\r\n                        \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeRotation.z\r\n                    };\r\n                    _CubeData.cubeScaling = {\r\n                        \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].center.scaling.x,\r\n                        \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].center.scaling.y,\r\n                        \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].center.scaling.z\r\n                    };\r\n                    // _CubeData.cubeCenterPoints=this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCenterPoints;\r\n                    _CubeData.cubeCenterPoints = [];\r\n                    for (let index = 0; index < this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCenterPointsBoxes.length; index++) {\r\n                        var obj = {\r\n                            \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCenterPointsBoxes[index].position.x,\r\n                            \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCenterPointsBoxes[index].position.y,\r\n                            \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCenterPointsBoxes[index].position.z\r\n                        };\r\n                        _CubeData.cubeCenterPoints.push(obj)\r\n                    }\r\n                    // _CubeData.cubeCornerPoints=this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPoints;\r\n                    _CubeData.cubeCornerPoints = [];\r\n                    for (let index = 0; index < this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsBoxes.length; index++) {\r\n                        var obj = {\r\n                            \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsBoxes[index].position.x,\r\n                            \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsBoxes[index].position.y,\r\n                            \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsBoxes[index].position.z\r\n                        };\r\n                        _CubeData.cubeCornerPoints.push(obj)\r\n                    }\r\n                    // _CubeData.cubeCornerPointsUV=this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsUV;\r\n                    _CubeData.cubeCornerPointsUV = [];\r\n                    for (let index = 0; index < this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsUV.length; index++) {\r\n                        var obj = {\r\n                            \"x\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsUV[index].x,\r\n                            \"y\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsUV[index].y,\r\n                            \"z\": this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cubeCornerPointsUV[index].z\r\n                        };\r\n                        _CubeData.cubeCornerPointsUV.push(obj)\r\n                    }\r\n                    _CubeData.cube = [];\r\n                    for (let index = 0; index < this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cube.length; index++) {\r\n                        const cubeelement = this.appManager.roomManager.RoomData[element].cubeGroup[cubeName].cube[index];\r\n                        var _faceData: any = {};\r\n                        _faceData.faceName = cubeelement.faceName;\r\n                        _faceData.roomName = cubeelement.roomName;\r\n                        _faceData.cubeName = cubeelement.cubeName;\r\n                        _faceData.vertexData = cubeelement.vertexData;\r\n                        _CubeData.cube.push(_faceData)\r\n                    }\r\n                    console.log(_CubeData);\r\n                    console.log(cubeName);\r\n                    //  _CubeData.toString().replace(\"_x\",\"x\");\r\n                    //  _CubeData.toString().replace(\"_y\",\"y\");\r\n                    //  _CubeData.toString().replace(\"_z\",\"z\");\r\n                    console.log(_CubeData);\r\n                    data.cubeGroup[cubeName] = _CubeData;\r\n                    console.log(data.cubeGroup[cubeName]);\r\n                });\r\n                this.jsonData.Rooms[element].data = data;\r\n            }\r\n        });\r\n        console.log(this.jsonData);\r\n         this.saveJSON(this.jsonData, \"Room.json\")\r\n    }\r\n\r\n    saveJSON(myJson:any, fileName:any) {\r\n        console.log(myJson);\r\n        var sJson = JSON.stringify(myJson);\r\n        console.log(sJson);\r\n        var element = document.createElement('a');\r\n        element.setAttribute('href', \"data:text/json;charset=UTF-8,\" + encodeURIComponent(sJson));\r\n        element.setAttribute('download', fileName);\r\n        element.style.display = 'none';\r\n        document.body.appendChild(element);\r\n        element.click(); // simulate click\r\n        document.body.removeChild(element);\r\n    }\r\n\r\n\r\n}","\r\nimport { AssetsManager, ImageAssetTask, Mesh, MeshBuilder, Scene, TextureAssetTask, TransformNode, Vector3 } from \"@babylonjs/core\";\r\nimport * as JQ from \"jquery\";\r\nimport { AppManager } from \"../ts/AppManager\";\r\nimport { DH_Constants } from \"./DH_Constants\";\r\nexport class RoomManager {\r\n\r\n    appManager: AppManager;\r\n    RoomData: any = {};\r\n    room_Images: any = [];\r\n    // assetsManager: AssetsManager;\r\n    scene: Scene;\r\n    imageTask: ImageAssetTask;\r\n    textureTask: TextureAssetTask;\r\n    // folderPath: any = \"assets/DevelopmentPanorama/\";\r\n\r\n    // DummyJson: any = {\r\n    //     \"Rooms\": {\r\n    //         \"ProjectID_2.jpg\": {\r\n    //             \"url\": \"assets/DevelopmentPanorama/2.jpg\"\r\n    //         },\r\n    //         \"ProjectID_3.jpg\": {\r\n    //             \"url\": \"assets/DevelopmentPanorama/3.jpg\"\r\n    //         },\r\n    //         \"ProjectID_4.jpg\": {\r\n    //             \"url\": \"assets/DevelopmentPanorama/4.jpg\"\r\n    //         },\r\n    //         \"ProjectID_5.jpg\": {\r\n    //             \"url\": \"assets/DevelopmentPanorama/5.jpg\"\r\n    //         }\r\n    //     }\r\n    // }\r\n    // DummyJson: any = {\r\n    //     \"Rooms\": {\r\n    //         \"ProjectID_R0010037.JPG\": {\r\n    //             \"url\": \"assets/DevelopmentPanorama/5.jpg\"\r\n    //         },\r\n    //         \"ProjectID_R0010038.JPG\": {\r\n    //             \"url\": \"assets/DevelopmentPanorama/4.jpg\"\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n    roomMaterials: any = [];\r\n    /**\r\n    * Selected Room Name: Its a Image Name\r\n    */\r\n    CurrentRoomName: any;\r\n\r\n    constructor(appManager: AppManager) {\r\n\r\n        this.appManager = appManager;\r\n        this.scene = this.appManager.sceneManager.getScene();\r\n        this.room_Images = [];\r\n        this.roomMaterials = [];\r\n        // this.initRooms();\r\n    }\r\n\r\n\r\n\r\n    // initRooms() {\r\n    //     // this.getImages();\r\n    //     this.loadJson(this.appManager.jsonManager.jsonData )\r\n    // }\r\n\r\n    setupAssetMnager() {\r\n        // this.assetsManager = new AssetsManager(this.scene);\r\n        // // var imageTask = assetsManager.addImageTask(\"image task\", \"img.jpg\");\r\n        // this.imageTask.onSuccess = (task) => {\r\n        //     console.log(task.image.width);\r\n        //     console.log(task);\r\n        // }\r\n        // this.textureTask.onSuccess = (task) => {\r\n        //     console.log(task.texture);\r\n        //     console.log(task);\r\n        // }\r\n        // this.assetsManager.onTaskErrorObservable.add((task) => {\r\n        //     console.log('task failed', task.errorObject.message, task.errorObject.exception);\r\n        // });\r\n        // this.assetsManager.onTaskSuccessObservable.add(function (task) {\r\n        //     console.log('task successful', task)\r\n        // });\r\n    }\r\n\r\n\r\n    initRoomData(data: any) {\r\n        console.log(\"data\")\r\n        console.log(data)\r\n\r\n        var firstElement = \"\";\r\n        var accordionpanelChangeRoom: any = document.getElementById(\"accordionpanelChangeRoom\");\r\n        var accordionpanelEnableRoom: any = document.getElementById(\"accordionpanelEnableRoom\");\r\n        // var accordionpanelModes: any = document.getElementById(\"accordionpanelModes\");\r\n        if (data.hasOwnProperty(\"RoomHeightData\")) {\r\n            DH_Constants.wallHeight = data[\"RoomHeightData\"][\"wallHeight\"];\r\n            DH_Constants.topY = data[\"RoomHeightData\"][\"topY\"];\r\n            DH_Constants.bottomY = data[\"RoomHeightData\"][\"bottomY\"];\r\n        }\r\n\r\n        // Object.keys(data.Rooms).forEach(element => {\r\n        var keys = Object.keys(data.Rooms)\r\n\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const RoomName: any = keys[i];\r\n            // console.log(data.Rooms[element].url);\r\n            var material = this.appManager.materialManager.getMaterial(data.Rooms[RoomName].url);\r\n            this.createRoomObject(RoomName, material);\r\n            var div: any = document.createElement(\"input\");\r\n            div.setAttribute(\"class\", \"accordionbutton\");\r\n            div.setAttribute(\"value\", \"Room_\" + RoomName);\r\n            div.setAttribute(\"type\", \"button\");\r\n\r\n            // const val = element;\r\n            div.addEventListener(\"click\", (div2: any) => {\r\n                this.changeRoom(RoomName);\r\n            }, true);\r\n\r\n            accordionpanelChangeRoom.appendChild(div);\r\n\r\n            var element2 = document.createElement(\"input\");\r\n            element2.setAttribute(\"class\", \"accordionbutton\");\r\n            element2.setAttribute(\"value\", \"Room_\" + RoomName);\r\n            element2.setAttribute(\"type\", \"button\");\r\n            // element2.onclick = function () { enableRooms(val) }\r\n            accordionpanelEnableRoom.appendChild(element2);\r\n\r\n\r\n            if (i == 0) {\r\n                console.log(\"First Image Loaded \", Object.keys(data.Rooms).length);\r\n                firstElement = RoomName;\r\n            }\r\n            else if (i == Object.keys(data.Rooms).length - 1) {\r\n                console.log(\"Last Image Loaded\");\r\n                //set Default Room\r\n                console.log(this.RoomData);\r\n                this.changeRoom(firstElement);\r\n                console.log(accordionpanelChangeRoom);\r\n                console.log(accordionpanelEnableRoom);\r\n            }\r\n            if (Object.keys(data.Rooms).length == 1) {\r\n                console.log(\"Last Image Loaded\");\r\n                //set Default Room\r\n                console.log(this.RoomData);\r\n                this.changeRoom(firstElement);\r\n                console.log(accordionpanelChangeRoom);\r\n                console.log(accordionpanelEnableRoom);\r\n            }\r\n\r\n            if (data.Rooms[RoomName].hasOwnProperty(\"data\")) {\r\n                // console.log(RoomName)\r\n                // console.log(data.Rooms[RoomName].data)\r\n                var RoomData = data.Rooms[RoomName].data;\r\n                // console.log(this.appManager.roomManager.RoomData[RoomName]);\r\n                Object.keys(RoomData.wallGroup).forEach(wallGroupName => {\r\n\r\n                    this.appManager.roomManager.RoomData[RoomName].wallGroup[wallGroupName] =\r\n                        this.appManager.roomManager.createWallGroup(wallGroupName, RoomName);\r\n\r\n                    Object.keys(RoomData.wallGroup[wallGroupName].WallsData).forEach(wallName => {\r\n\r\n                        console.log(wallName);\r\n                        this.appManager.wallGeometry.createPlaneFromJson(RoomData.wallGroup[wallGroupName].WallsData[wallName], RoomName, wallGroupName);\r\n\r\n                    });\r\n                });\r\n\r\n                Object.keys(RoomData.cubeGroup).forEach(cubeGroupName => {\r\n\r\n                    console.log(cubeGroupName);\r\n                    this.appManager.cubeGeometry.createCubeFromJson(RoomData.cubeGroup[cubeGroupName]);\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    createRoomObject(element: any, material: any) {\r\n        // DH_Constants.modePlane_editFloorUV = true;\r\n        this.RoomData[element] = {};\r\n        this.RoomData[element].CurrentRoomName = element;\r\n        this.RoomData[element].wallGroup = {};\r\n        this.RoomData[element].floorGroup = {};\r\n        this.RoomData[element].cubeGroup = {};\r\n        // this.RoomData[element].Floor = null;\r\n        // this.RoomData[element].Roof = null;\r\n        // this.RoomData[element].Doors = null;\r\n\r\n        this.RoomData[element].material = material;\r\n        this.RoomData[element].parentGroup = new TransformNode(element + \"_parentGroup\");\r\n\r\n        this.RoomData[element].parentGroup.setEnabled(false);\r\n\r\n        // this.RoomData[element].parentSphere= MeshBuilder.CreateSphere(\"sphere\", { diameter: (DH_Constants.radius/10) }, this.scene); //default this.sphere\r\n        // this.RoomData[element].parentSphere.renderingGroupId = 3;\r\n        // this.RoomData[element].parentGroup=this.RoomData[element].parentSphere;\r\n        // this.RoomData[element].parentSphere.isVisible=false;\r\n        // this.RoomData[element].wallGroup = new TransformNode(element + \"_wallGroup\");\r\n        // this.RoomData[element].cornerGroup = new TransformNode(element + \"_cornerGroup\");\r\n\r\n        // this.RoomData[element].wallGroup.parent = this.RoomData[element].parentGroup;\r\n        // this.RoomData[element].cornerGroup.parent = this.RoomData[element].parentGroup;\r\n    }\r\n\r\n\r\n    createWallGroup(wallGroupName: any, RoomName: any) {\r\n\r\n        var wallGroupData: any = {\r\n        }\r\n        wallGroupData.WallsNode = new TransformNode(wallGroupName + \"_WallsNode\");\r\n        wallGroupData.CornersNode = new TransformNode(wallGroupName + \"_cornersNode\");\r\n\r\n        wallGroupData.WallsData = {};\r\n        wallGroupData.WallsNode.parent = this.RoomData[RoomName].parentGroup;\r\n        wallGroupData.CornersNode.parent = this.RoomData[RoomName].parentGroup;\r\n        return wallGroupData;\r\n    }\r\n    changeRoom(RoomName: any, options?: any) {\r\n\r\n        if (DH_Constants.modePlane)\r\n            this.appManager.modeManger.toggleWallMode();\r\n        if (DH_Constants.modeCube)\r\n            this.appManager.modeManger.toggleCubeMode();\r\n        console.log(RoomName)\r\n        console.log(this.RoomData[RoomName].material);\r\n\r\n        if (DH_Constants.currentRoomName) {\r\n            // console.log(this.RoomData[DH_Constants.currentRoomName].parentGroup)\r\n            // console.log(DH_Constants.currentRoomName);\r\n            // console.log(this.RoomData);\r\n            // this.RoomData[DH_Constants.currentRoomName].parentGroup.scaling.set(0, 0, 0);\r\n            this.RoomData[DH_Constants.currentRoomName].parentGroup.setEnabled(false);\r\n\r\n            // this.RoomData[DH_Constants.currentRoomName].parentGroup.isVisible=false;\r\n        }\r\n        DH_Constants.currentRoomName = RoomName;\r\n        DH_Constants.currentWallGroupName = null;\r\n        this.appManager.sphereManager.changeRoomMaterial(this.RoomData[RoomName].material);\r\n        this.RoomData[DH_Constants.currentRoomName].parentGroup.setEnabled(true);\r\n    }\r\n\r\n\r\n\r\n}","import { ActionManager, ArcRotateCamera, ExecuteCodeAction, float, Matrix, Mesh, PointerDragBehavior, PolygonMeshBuilder, Scene, Vector2, Vector3, VertexData } from \"@babylonjs/core\";\r\nimport { GridMaterial } from \"babylonjs-materials\";\r\n\r\n// import { GridMaterial } from \"@babylonjs/materials/grid\";\r\n// var earcut = require('earcut')\r\n\r\n\r\nimport { AnySoaRecord } from \"dns\";\r\nimport { type } from \"os\";\r\nimport { BoxGeometry } from \"three\";\r\nimport { setTimeout } from \"timers\";\r\nimport { AppManager } from \"../ts/AppManager\";\r\nimport { Handler } from \"../ts/Handler\";\r\nimport { DH_Constants } from \"./DH_Constants\";\r\n// import { GridMaterial } from \"@babylonjs/materials/grid\";\r\n\r\ndeclare var VP: any;\r\ndeclare var window: any;\r\n\r\nexport class WallGeometry {\r\n    private appManager: AppManager;\r\n    private handler: Handler;\r\n    private scene: Scene;\r\n    private camera: ArcRotateCamera;\r\n\r\n\r\n    private floorBoxes: any = [];\r\n    private ceilingBoxes: any = [];\r\n\r\n    private floorLines: any;\r\n\r\n    private allWallCorners: any = [];\r\n    private allWallCenterCorners: any = [];\r\n\r\n    private mousePointer3dBottom: Mesh;\r\n\r\n    private cursor: any;\r\n\r\n    private createdFloorPoints = false;\r\n\r\n    private CreateWallButton: any;\r\n    private CreateWallButtonDone: any;\r\n    private EditWallButton: any;\r\n    private EditWallDoneButton: any;\r\n    private CreateWallButtonMergeWithFirstPoint: any;\r\n    private MergeWallsButton: any;\r\n    private EditFromTopButton: any;\r\n    private EditFromTopDoneButton: any;\r\n    private FloorDoneButton: any;\r\n\r\n    private transformMatrix: any;\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n        this.scene = appManager.sceneManager.getScene();\r\n        this.camera = this.appManager.sceneManager.getCamera();\r\n\r\n        this.handler = this.appManager.handler.getHandler();\r\n        this.cursor = this.appManager.DHCursor.getCursor();\r\n\r\n\r\n        this.CreateWallButton = document.getElementById('CreateWall');\r\n        this.CreateWallButtonDone = document.getElementById('CreateWallDone');\r\n        this.CreateWallButtonMergeWithFirstPoint = document.getElementById('MergeWithFirstCorner');\r\n        this.EditWallButton = document.getElementById('EditWall');\r\n        this.EditWallDoneButton = document.getElementById('EditWallDone');\r\n        this.MergeWallsButton = document.getElementById('MergeAllWalls');\r\n        this.EditFromTopButton = document.getElementById('EditFromTop');\r\n        this.EditFromTopDoneButton = document.getElementById('EditFromTopDone');\r\n        this.FloorDoneButton = document.getElementById('FloorDone');\r\n        this.transformMatrix = this.scene.getTransformMatrix()\r\n\r\n\r\n\r\n    }\r\n\r\n    private disableAllWallButton() {\r\n        if (this.CreateWallButton != null)\r\n            this.CreateWallButton.style.display = 'none';\r\n\r\n        if (this.CreateWallButtonDone != null)\r\n            this.CreateWallButtonDone.style.display = 'none';\r\n\r\n        if (this.CreateWallButtonMergeWithFirstPoint != null)\r\n            this.CreateWallButtonMergeWithFirstPoint.style.display = 'none';\r\n\r\n        if (this.EditWallButton != null)\r\n            this.EditWallButton.style.display = 'none';\r\n\r\n        if (this.EditWallDoneButton != null)\r\n            this.EditWallDoneButton.style.display = 'none';\r\n\r\n        if (this.MergeWallsButton != null)\r\n            this.MergeWallsButton.style.display = 'none';\r\n\r\n        if (this.EditFromTopButton != null)\r\n            this.EditFromTopButton.style.display = 'none';\r\n        if (this.EditFromTopDoneButton != null)\r\n            this.EditFromTopDoneButton.style.display = 'none';\r\n        if (this.FloorDoneButton != null)\r\n            this.FloorDoneButton.style.display = 'none';\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Reset to default condition of wall mode\r\n     * where user needs to select options of create edit and merge\r\n     */\r\n    enableWallOptionsUi() {\r\n\r\n        this.disableAllWallButton();\r\n\r\n        if (DH_Constants.modePlane) {\r\n            var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup);\r\n\r\n            if (this.CreateWallButton != null && wallKeys.length == 0)\r\n                this.CreateWallButton.style.display = 'block';\r\n            if (this.EditWallButton != null && wallKeys.length > 0)\r\n                this.EditWallButton.style.display = 'block';\r\n        }\r\n\r\n        DH_Constants.modePlane_createCorners = false;\r\n        DH_Constants.modePlane_editWallUV = false;\r\n        DH_Constants.modePlane_editFromTop = false;\r\n    }\r\n\r\n    disableAll() {\r\n        console.log(\"disableAll\");\r\n        var wallGroupList: any = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup);\r\n        for (let index = 0; index < wallGroupList.length; index++) {\r\n            const GroupName = wallGroupList[index];\r\n        console.log(\"disableAll \",GroupName);\r\n\r\n            // console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[GroupName].cubeRoot);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[GroupName].WallsNode.setEnabled(false);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[GroupName].CornersNode.setEnabled(false);\r\n        }\r\n    }\r\n    enableAll() {\r\n        console.log(\"enableAll\");\r\n\r\n        var wallGroupList: any = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup);\r\n        for (let index = 0; index < wallGroupList.length; index++) {\r\n            const GroupName = wallGroupList[index];\r\n        console.log(\"enableAll \",GroupName);\r\n\r\n            // console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].cubeGroup[GroupName].cubeRoot);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[GroupName].WallsNode.setEnabled(true);\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[GroupName].CornersNode.setEnabled(true);\r\n        }\r\n    }\r\n    public update() {\r\n        // console.log(\"update\")\r\n\r\n    }\r\n\r\n    /**\r\n     * In wall Edit Mode enable all walls for selection\r\n     */\r\n    public editSelectedWallDone() {\r\n        this.disableAllWallButton();\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            var wallname = wallKeys[index];\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners.forEach((element: any) => {\r\n                element.isVisible = false;\r\n            });\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].centers.forEach((element: any) => {\r\n                element.isVisible = false;\r\n            });\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.isVisible = true;\r\n        }\r\n        if (this.MergeWallsButton != null)\r\n            this.MergeWallsButton.style.display = 'block';\r\n\r\n    }\r\n\r\n\r\n    public enableCornerCreation() {\r\n        DH_Constants.modePlane_createCorners = !DH_Constants.modePlane_createCorners;\r\n        if (!DH_Constants.modePlane) {\r\n            DH_Constants.modePlane_createCorners = false;\r\n            alert(\"Enable Wall Mode First\");\r\n        }\r\n\r\n        // console.log()\r\n        if (DH_Constants.modePlane_createCorners) {\r\n            this.appManager.DHCursor.updateMsg(\"Double Click on any corner to start\");\r\n            this.disableAllWallButton();\r\n\r\n\r\n            if (this.CreateWallButtonDone != null)\r\n                this.CreateWallButtonDone.style.display = 'block';\r\n\r\n            if (this.CreateWallButtonMergeWithFirstPoint != null)\r\n                this.CreateWallButtonMergeWithFirstPoint.style.display = 'block';\r\n\r\n\r\n        }\r\n\r\n    }\r\n    public disableCornerCreation() {\r\n        DH_Constants.modePlane_createCorners = false;\r\n    }\r\n\r\n    createWallFinished() {\r\n        this.endFloorPointCreation(false);\r\n    }\r\n    createWallMergeWithFirstCorner() {\r\n        this.endFloorPointCreation(true);\r\n\r\n    }\r\n\r\n\r\n\r\n    public enableWallEdit(wallGroupName?: any) {\r\n        DH_Constants.modePlane_createCorners = false;\r\n\r\n        this.disableAllWallButton();\r\n        this.appManager.cameraManager.resetCamera();\r\n        this.appManager.sphereManager.toggleSphere(true);\r\n\r\n        DH_Constants.modePlane_editWallUV = !DH_Constants.modePlane_editWallUV;\r\n        if (!DH_Constants.modePlane) {\r\n            DH_Constants.modePlane_editWallUV = false;\r\n            alert(\"Enable Wall Mode First\");\r\n        }\r\n        console.log(DH_Constants.modePlane_editWallUV)\r\n        console.log(DH_Constants.modePlane)\r\n\r\n\r\n        if (DH_Constants.modePlane_editWallUV)\r\n            this.appManager.DHCursor.updateMsg(\"Click and hold on wall to edit\");\r\n\r\n        if (wallGroupName)\r\n            DH_Constants.currentWallGroupName = wallGroupName;\r\n        else {\r\n            var Wg = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup)\r\n            if (Wg.length > 0)\r\n                DH_Constants.currentWallGroupName = Wg[0];\r\n        }\r\n\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            const wallname = wallKeys[index];\r\n\r\n\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.actionManager = new ActionManager(this.scene);\r\n\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnLongPressTrigger, () => {\r\n                // console.log(wallMesh);\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.isVisible = false;\r\n\r\n                setTimeout(() => {\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.isVisible = true;\r\n                }, 500);\r\n\r\n                // console.log(data.wallMesh.name);\r\n                this.selectWall(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh);\r\n            }));\r\n        }\r\n\r\n\r\n    }\r\n    public disableWallEdit() {\r\n        DH_Constants.modePlane_editWallUV = false;\r\n    }\r\n\r\n    public updatePointer(pos: Vector3) {\r\n\r\n        // if (!DH_Constants.modePlane_createCorners) {\r\n        //     this.disablePointer();\r\n        //     return;\r\n        // }\r\n        if (this.mousePointer3dBottom == undefined) {\r\n            this.mousePointer3dBottom = this.handler.createBox(pos, \"mousePointer3d\");\r\n        } else {\r\n            this.mousePointer3dBottom.position.set(pos.x, pos.y, pos.z);\r\n        }\r\n    }\r\n    public disablePointer() {\r\n        // console.log(this.mousePointer3dBottom)\r\n        if (this.mousePointer3dBottom)\r\n            this.mousePointer3dBottom.isVisible = false;\r\n\r\n    }\r\n    public getWallGeometryInstance(): WallGeometry {\r\n        return this;\r\n    }\r\n\r\n    // actionManagers: any = [];\r\n    addFloorPoint(pos: Vector3) {\r\n\r\n        this.floorBoxes.push(this.handler.createBox(pos, \"FloorBox_\" + this.floorBoxes.length));\r\n        if (this.floorBoxes.length == 1) {\r\n            this.floorBoxes[this.floorBoxes.length - 1].actionManager = new ActionManager(this.scene);\r\n            var lastMsg = \"\";\r\n            var done = false;\r\n\r\n            var am = this.floorBoxes[this.floorBoxes.length - 1].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n                done = true;\r\n                console.log(this.floorBoxes[0].actionManager);\r\n\r\n\r\n                if (!this.createdFloorPoints)\r\n                    this.endFloorPointCreation(true);\r\n                lastMsg = \"Select the options From Below\";\r\n                this.appManager.DHCursor.updateMsg(lastMsg)\r\n            }));\r\n            // this.actionManagers.push(am);\r\n\r\n\r\n            // this.floorBoxes[this.floorBoxes.length - 1].actionManager.ac\r\n            var am2 = this.floorBoxes[this.floorBoxes.length - 1].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                console.log(\"On pointer over\");\r\n                if (DH_Constants.modePlane_createCorners && !done) {\r\n                    lastMsg = this.cursor[0].textContent;\r\n                    this.appManager.DHCursor.updateMsg(\"Click to Merge with First Corner\")\r\n                }\r\n            }));\r\n            // this.actionManagers.push(am2);\r\n\r\n\r\n            var am3 = this.floorBoxes[this.floorBoxes.length - 1].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                console.log(\"On pointer exit\");\r\n\r\n                if (DH_Constants.modePlane_createCorners && !done) {\r\n                    this.appManager.DHCursor.updateMsg(lastMsg)\r\n                }\r\n            }));\r\n\r\n            // this.actionManagers.push(am3);\r\n\r\n        }\r\n\r\n        // this.ceilingBoxes.push(this.floorBoxes[this.floorBoxes.length - 1].clone(\"CeilingBox_\" + this.ceilingBoxes.length));\r\n\r\n        this.updateFloorLines();\r\n    }\r\n    private updateFloorLines(linePoints?: any) {\r\n        if (this.floorBoxes.length > 0) {\r\n            if (!linePoints) {\r\n                linePoints = []\r\n                this.floorBoxes.forEach((box: any) => {\r\n                    linePoints.push(box.position)\r\n                });\r\n            }\r\n            if (this.floorLines) {\r\n                this.floorLines.dispose();\r\n            }\r\n            this.floorLines = this.handler.createLine(linePoints, \"FloorLine\");\r\n            this.floorLines.renderingGroupId = 1;\r\n            this.floorLines.isPickable = false;\r\n        }\r\n    }\r\n\r\n    private endFloorPointCreation(mergeWithFirst: boolean) {\r\n        var linePoints: any = [];\r\n        var linePointsFloor: any = [];\r\n        var linePointsCeiling: any = [];\r\n        this.disableCornerCreation();\r\n        if (this.floorBoxes[0].actionManager)\r\n            this.floorBoxes[0].actionManager = null;\r\n        for (let index = 0; index < this.floorBoxes.length; index++) {\r\n            const box = this.floorBoxes[index];\r\n            box.position.y = this.floorBoxes[0].position.y;\r\n\r\n            this.ceilingBoxes.push(box.clone(\"CeilingBox_\" + this.ceilingBoxes.length));\r\n            this.ceilingBoxes[index].position.y += DH_Constants.wallYDiffernce;\r\n            linePoints.push(box.position);\r\n            if (index == this.floorBoxes.length - 1) {\r\n                console.log(\"last Point Updated\")\r\n                if (mergeWithFirst)\r\n                    linePoints.push(this.floorBoxes[0].position);\r\n                this.updateFloorLines(null);\r\n            }\r\n            box.isVisible = false;\r\n            this.ceilingBoxes[index].isVisible = false;\r\n\r\n        }\r\n        this.createdFloorPoints = true;\r\n\r\n        var totalWallGroups = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup).length;\r\n        var wallGroupName = \"WallGroup_\" + totalWallGroups + 1;\r\n        DH_Constants.currentWallGroupName = wallGroupName;\r\n\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName] =\r\n            this.appManager.roomManager.createWallGroup(wallGroupName, DH_Constants.currentRoomName)\r\n\r\n        console.log(this.appManager.roomManager.RoomData)\r\n\r\n\r\n        for (let index = 0; index < this.floorBoxes.length; index++) {\r\n            if (index != this.floorBoxes.length - 1) {\r\n                // var points = [];\r\n                var cornerPos = [];\r\n                // points.push(this.floorBoxes[index])\r\n                // points.push(this.ceilingBoxes[index])\r\n                // points.push(this.ceilingBoxes[index + 1])\r\n                // points.push(this.floorBoxes[index + 1])\r\n\r\n                cornerPos.push(this.floorBoxes[index].position);\r\n                cornerPos.push(this.ceilingBoxes[index].position);\r\n                cornerPos.push(this.ceilingBoxes[index + 1].position);\r\n                cornerPos.push(this.floorBoxes[index + 1].position);\r\n                linePointsFloor.push(this.floorBoxes[index].position);\r\n                linePointsCeiling.push(this.ceilingBoxes[index].position);\r\n                this.createWall(cornerPos, wallGroupName);\r\n            }\r\n            else {\r\n                // var points = [];\r\n                if (mergeWithFirst) {\r\n                    var cornerPos = [];\r\n                    // points.push(this.floorBoxes[index])\r\n                    // points.push(this.ceilingBoxes[index])\r\n                    // points.push(this.ceilingBoxes[0])\r\n                    // points.push(this.floorBoxes[0])\r\n\r\n                    cornerPos.push(this.floorBoxes[index].position);\r\n                    cornerPos.push(this.ceilingBoxes[index].position);\r\n                    cornerPos.push(this.ceilingBoxes[0].position);\r\n                    cornerPos.push(this.floorBoxes[0].position);\r\n\r\n                    linePointsFloor.push(this.floorBoxes[index].position);\r\n                    linePointsCeiling.push(this.ceilingBoxes[index].position);\r\n                    linePointsFloor.push(this.floorBoxes[0].position);\r\n                    linePointsCeiling.push(this.ceilingBoxes[0].position);\r\n                    this.createWall(cornerPos, wallGroupName);\r\n                }\r\n\r\n                for (let index = 0; index < this.floorBoxes.length; index++) {\r\n                    this.floorBoxes[index].isVisible = false;\r\n                    this.ceilingBoxes[index].dispose();\r\n                    this.floorLines.dispose();\r\n                    this.floorBoxes = [];\r\n                    this.ceilingBoxes = [];\r\n                }\r\n                this.enableWallOptionsUi();\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n        console.log(linePointsFloor)\r\n        console.log(linePointsCeiling)\r\n        // var lin1: any = this.handler.createLineTube(linePointsFloor, \"BottomLine\", 5);\r\n        // var lin2: any = this.handler.createLineTube(linePointsCeiling, \"TopLine\", 5);\r\n        // lin1.renderingGroupId = 3;\r\n        // lin2.renderingGroupId = 3;\r\n        // this.appManager.gizmoHandler.attachOnMesh(lin1);\r\n\r\n\r\n\r\n        // lin1.actionManager = new ActionManager(this.scene);\r\n        // lin1.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n        //     console.log(lin1)\r\n        //     // this.appManager.gizmoHandler.attachOnMesh(lin1);\r\n        //     lin1.addBehavior(pointerDragBehavior);\r\n        // }));\r\n\r\n        // lin2.actionManager = new ActionManager(this.scene);\r\n        // lin2.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickDownTrigger, () => {\r\n        //     console.log(lin2)\r\n\r\n        // //    this.appManager.gizmoHandler.attachOnMesh(lin2);\r\n\r\n        // }));\r\n\r\n\r\n        // var pointerDragBehavior = new PointerDragBehavior();\r\n\r\n        // // Use drag plane in world space\r\n        // pointerDragBehavior.useObjectOrientationForDragging = false;\r\n\r\n        // pointerDragBehavior.dragDeltaRatio = 1;\r\n\r\n        // // Listen to drag events\r\n        // pointerDragBehavior.onDragStartObservable.add((event) => {\r\n        //     console.log(\"dragStart\");\r\n        //     console.log(event);\r\n        // })\r\n        // pointerDragBehavior.onDragObservable.add((event) => {\r\n        //     console.log(\"drag\");\r\n        //     console.log(lin2.position.y);\r\n        //     lin2.position.y += 50 * event.delta.y;\r\n\r\n        // })\r\n        // pointerDragBehavior.onDragEndObservable.add((event: any) => {\r\n        //     console.log(\"dragEnd\");\r\n        //     console.log(event);\r\n\r\n        // })\r\n\r\n        // // // If handling drag events manually is desired, set move attached to false\r\n        // pointerDragBehavior.moveAttached = true;\r\n\r\n        // lin2.addBehavior(pointerDragBehavior);\r\n\r\n\r\n    }\r\n\r\n\r\n    private divPoint: any = 200;\r\n    private doOnce: boolean = false;\r\n    private grid: any;\r\n    createWall(cornerPos: any, wallGroupName: any) {\r\n        var corners: any = [];\r\n        var centers: any = [];\r\n        var centersPos: any = [];\r\n        console.log(Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsData));\r\n        var wallName: any = \"Wall_\" + Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsData).length;\r\n\r\n        console.log(wallName)\r\n        // var left_cp = this.getCenterPoint(cornerPos[0], cornerPos[1], \"CenterBox_Left\", \"CenterBox\");\r\n        // var right_cp = this.getCenterPoint(cornerPos[2], cornerPos[3], \"CenterBox_Right\", \"CenterBox\");\r\n        // var top_cp = this.getCenterPoint(cornerPos[1], cornerPos[2], \"CenterBox_Top\", \"CenterBox\");\r\n        // var bottom_cp = this.getCenterPoint(cornerPos[0], cornerPos[3], \"CenterBox_Bottom\", \"CenterBox\");\r\n        // centers.push(left_cp[0]);\r\n        // centers.push(right_cp[0]);\r\n        // centers.push(top_cp[0]);\r\n        // centers.push(bottom_cp[0]);\r\n\r\n        // centersPos.push(left_cp[1]);\r\n        // centersPos.push(right_cp[1]);\r\n        // centersPos.push(top_cp[1]);\r\n        // centersPos.push(bottom_cp[1]);\r\n\r\n        for (let index = 0; index < centers.length; index++) {\r\n            centers[index].wallName = wallName;\r\n            centers[index].roomName = DH_Constants.currentRoomName;\r\n            centers[index].wallGroupName = wallGroupName;\r\n            centers[index].isVisible = false;\r\n            this.allWallCenterCorners.push(centers[index]);\r\n\r\n            centers[index].actionManager = new ActionManager(this.scene);\r\n            centers[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                this.appManager.DHCursor.updateMsg(\"Click to change width of wall\")\r\n\r\n            }));\r\n\r\n            centers[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                this.appManager.DHCursor.updateMsg(\"Select points to Edit Wall\")\r\n            }));\r\n            centers[index].parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].CornersNode\r\n            // centers[index].parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].CornersNode;\r\n\r\n            // centers[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnLongPressTrigger, () => {\r\n            //     this.appManager.DHCursor.updateMsg(\"\")\r\n            //     this.appManager.gizmoHandler.gizmoManager.positionGizmoEnabled = true;\r\n            //     this.appManager.gizmoHandler.gizmoManager.rotationGizmoEnabled = false;\r\n            //     this.appManager.gizmoHandler.gizmoManager.scaleGizmoEnabled = false;\r\n            //     if (this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo) {\r\n            //         if (centers[index].name == \"CenterBox_Left\" || centers[index].name == \"CenterBox_Right\") {\r\n            //             this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 1.0;\r\n            //             this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 0.0;\r\n            //             this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 1.0;\r\n            //         }\r\n            //         else if (centers[index].name == \"CenterBox_Top\" || centers[index].name == \"CenterBox_Bottom\") {\r\n            //             this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 0.0;\r\n            //             this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1.0;\r\n            //             this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 0.0;\r\n            //         }\r\n            //     }\r\n            //     this.appManager.gizmoHandler.attachOnMesh(centers[index]);\r\n            // }));\r\n        }\r\n\r\n\r\n        for (let index = 0; index < cornerPos.length; index++) {\r\n            corners.push(this.mousePointer3dBottom.clone(\"CornerBox_\" + index + \"_\" + wallName));\r\n            this.allWallCorners.push(corners[index]);\r\n            corners[index].position.set(cornerPos[index].x, cornerPos[index].y, cornerPos[index].z);\r\n            corners[index].renderingGroupId = 3;\r\n            corners[index].isVisible = false;\r\n            corners[index].tag = \"CornerBox\";\r\n            corners[index].wallName = wallName;\r\n            corners[index].roomName = DH_Constants.currentRoomName;\r\n            corners[index].wallGroupName = wallGroupName;\r\n            corners[index].actionManager = new ActionManager(this.scene);\r\n\r\n            corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                if (DH_Constants.modePlane_editWallUV)\r\n                    this.appManager.DHCursor.updateMsg(\"Drag to update Image of wall\")\r\n                else if (DH_Constants.modePlane_editFromTop)\r\n                    this.appManager.DHCursor.updateMsg(\"Select and Hold to Edit\")\r\n\r\n            }));\r\n\r\n            corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                this.appManager.DHCursor.updateMsg(\"Select points to Edit Wall\")\r\n\r\n            }));\r\n            corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnLongPressTrigger, () => {\r\n                if (DH_Constants.modePlane_editFromTop) {\r\n                    this.appManager.DHCursor.updateMsg(\"Drag Position\");\r\n                    this.appManager.gizmoHandler.attachOnMesh(corners[index]);\r\n                    this.appManager.gizmoHandler.enablePositionGizmoOnly(2.0, 0.0, 2.0)\r\n                    this.disableAllWallButton();\r\n\r\n                }\r\n\r\n            }));\r\n\r\n            corners[index].parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].CornersNode;\r\n\r\n        }\r\n\r\n\r\n\r\n        // return;\r\n        var vertex = [];\r\n        var data = {\r\n            cornersPos: [] = cornerPos,\r\n            corners: [] = corners,\r\n            centers: [] = centers,\r\n            uvPointsPos: [] = cornerPos,\r\n            centersPos: [] = centersPos,\r\n            wallName: wallName,\r\n            roomName : DH_Constants.currentRoomName,\r\n            wallGroupName : wallGroupName,\r\n            wallMesh: corners[0],\r\n            vertexData: {}\r\n        };\r\n        vertex.push(cornerPos[0]);\r\n        vertex.push(cornerPos[1]);\r\n        var topPoints = this.getPoints(cornerPos[2], cornerPos[1]);\r\n        var bottomPoints = this.getPoints(cornerPos[3], cornerPos[0]);\r\n        for (var i = 0; i < this.divPoint - 1; i++) {\r\n            vertex.push(topPoints[i])\r\n            vertex.push(bottomPoints[i])\r\n        }\r\n        vertex.push(cornerPos[2]);\r\n        vertex.push(cornerPos[3]);\r\n        var _uvs: any = [];\r\n        vertex.forEach(element => {\r\n            // console.log(element);\r\n            var coordinates = Vector3.Project(element,\r\n                Matrix.Identity(),\r\n                this.scene.getTransformMatrix(),\r\n                this.camera.viewport.toGlobal(\r\n                    this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n                    this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n                ));\r\n            var uvCoordinates = this.getUvPoint(coordinates);\r\n            // console.log(uvCoordinates,_uvs);\r\n            if (uvCoordinates != null) {\r\n                _uvs.push(uvCoordinates.x);\r\n                _uvs.push(uvCoordinates.y);\r\n\r\n            } else {\r\n                console.log(uvCoordinates);\r\n                _uvs.push(_uvs[_uvs.length - 2])\r\n                _uvs.push(_uvs[_uvs.length - 1])\r\n\r\n            }\r\n        });\r\n        // console.log(_uvs);\r\n        // console.log(data);\r\n\r\n        var wallMesh: any = new Mesh(wallName, this.scene);\r\n        wallMesh.renderingGroupId = 2;\r\n        var newPlanepositions = this.getPosition(vertex);\r\n        var flag = true;\r\n        var index = 0;\r\n        var indicesSeq = [];\r\n        for (var i = 0; i < this.divPoint; i++) {\r\n            if (flag) {\r\n                indicesSeq.push(index++);\r\n                indicesSeq.push(index++);\r\n                indicesSeq.push(++index);\r\n                indicesSeq.push(index - 2);\r\n                indicesSeq.push(index - 1);\r\n                indicesSeq.push(index);\r\n                flag = !flag;\r\n            } else {\r\n                indicesSeq.push(index--);\r\n                indicesSeq.push(index);\r\n                index += 3;\r\n                indicesSeq.push(index);\r\n                indicesSeq.push(index - 3);\r\n                indicesSeq.push(index - 1);\r\n                indicesSeq.push(index);\r\n            }\r\n        }\r\n        var newPlanenormals: any = [];\r\n        var newPlanevertexData: any = new VertexData();\r\n        VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n\r\n        //Assign positions, indices and normals to vertexData\r\n        newPlanevertexData.positions = newPlanepositions;\r\n        newPlanevertexData.indices = indicesSeq;\r\n        newPlanevertexData.normals = newPlanenormals;\r\n        newPlanevertexData.uvs = _uvs;\r\n\r\n        newPlanevertexData.applyToMesh(wallMesh);\r\n        wallMesh.material = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].material;\r\n        // console.log(wallMesh);\r\n        // console.log(data);\r\n        // console.log(newPlanevertexData);\r\n        // data.wallName = wallMesh.name;\r\n        data.wallMesh = wallMesh;\r\n        data.vertexData = newPlanevertexData;\r\n\r\n        wallMesh.wallName = wallName;\r\n        wallMesh.roomName = DH_Constants.currentRoomName;\r\n        wallMesh.wallGroupName = wallGroupName;\r\n  \r\n        wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsNode;\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsData[wallName] = data;\r\n\r\n\r\n    }\r\n    createPlaneFromJson(wallData: any, _roomName: any, wallGroupName: any) {\r\n\r\n        console.log(\"wallData\");\r\n        console.log(wallData);\r\n        var corners: any = [];\r\n        var centers: any = [];\r\n        var centersPos: any = [];\r\n\r\n        // console.log(\"this.mousePointer3dBottom \",this.mousePointer3dBottom);\r\n        // console.log(\"wallData.cornerPos \",wallData.cornersPos);\r\n        // console.log(\"wallData.cornerPos.length \",wallData.cornersPos.length);\r\n        if (!this.mousePointer3dBottom && wallData.cornersPos && wallData.cornersPos.length > 0)\r\n            this.mousePointer3dBottom = this.handler.createBox(wallData.cornersPos[0], \"mousePointer3d\");\r\n\r\n        this.disablePointer();\r\n        var data: any = {\r\n            cornersPos: [] = [],\r\n            corners: [] = corners,\r\n            centers: [] = centers,\r\n            uvPointsPos: [] = [],\r\n            centersPos: [] = centersPos,\r\n            wallName:\"\",\r\n            roomName : \"\",\r\n            wallGroupName : \"\",\r\n            wallMesh: this.mousePointer3dBottom,\r\n            vertexData: null,\r\n            isVisible: null\r\n        };\r\n        data.cornersPos = wallData.cornersPos;\r\n        data.uvPointsPos = wallData.uvPointsPos;\r\n        data.vertexData = wallData.vertexData;\r\n        data.isVisible = wallData.isVisible;\r\n        data.wallName = wallData.wallName;\r\n        data.roomName = _roomName;\r\n        data.wallGroupName = wallData.wallGroupName;\r\n        if (data.hasOwnProperty(\"cornersPos\") && data.cornersPos) {\r\n            for (let index = 0; index < data.cornersPos.length; index++) {\r\n                corners.push(this.mousePointer3dBottom.clone(\"CornerBox_\" + index + \"_\" + data.wallName));\r\n                this.allWallCorners.push(corners[index]);\r\n                corners[index].position.set(data.cornersPos[index].x, data.cornersPos[index].y, data.cornersPos[index].z);\r\n                corners[index].renderingGroupId = 3;\r\n                corners[index].isVisible = false;\r\n                corners[index].tag = \"CornerBox\";\r\n                corners[index].wallName = data.wallName;\r\n                corners[index].roomName = _roomName;\r\n                corners[index].wallGroupName = wallGroupName;\r\n                corners[index].actionManager = new ActionManager(this.scene);\r\n\r\n                corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                    if (DH_Constants.modePlane_editWallUV)\r\n                        this.appManager.DHCursor.updateMsg(\"Drag to update Image of wall\")\r\n                    else if (DH_Constants.modePlane_editFromTop)\r\n                        this.appManager.DHCursor.updateMsg(\"Select and Hold to Edit\")\r\n\r\n                }));\r\n                corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                    this.appManager.DHCursor.updateMsg(\"Select points to Edit Wall\")\r\n\r\n                }));\r\n                corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnLongPressTrigger, () => {\r\n                    if (DH_Constants.modePlane_editFromTop) {\r\n                        this.appManager.DHCursor.updateMsg(\"Drag Position\");\r\n                        this.appManager.gizmoHandler.attachOnMesh(corners[index]);\r\n                        this.appManager.gizmoHandler.enablePositionGizmoOnly(2.0, 0.0, 2.0)\r\n                        this.disableAllWallButton();\r\n                    }\r\n                }));\r\n                // corners[index].isVisible=true;\r\n                corners[index].parent = this.appManager.roomManager.RoomData[_roomName].wallGroup[wallGroupName].CornersNode;\r\n            }\r\n        }\r\n\r\n        data.corners = corners;\r\n        data.uvPointsPos = wallData.uvPointsPos;\r\n        var wallMesh: any = new Mesh(data.wallName, this.scene);\r\n\r\n        wallMesh.renderingGroupId = 2;\r\n        var newPlanepositions: any = [];\r\n        var newPlanenormals: any = [];\r\n        var indicesSeq: any = [];\r\n        var _uvs: any = [];\r\n        if (data.hasOwnProperty(\"vertexData\") && data.vertexData) {\r\n\r\n            Object.keys(wallData.vertexData.positions).forEach(element => {\r\n                newPlanepositions.push(wallData.vertexData.positions[element]);\r\n            });\r\n\r\n\r\n            indicesSeq = wallData.vertexData.indices;\r\n            _uvs = wallData.vertexData.uvs;\r\n        }\r\n\r\n        var newPlanevertexData: any = new VertexData();\r\n        VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n\r\n        //Assign positions, indices and normals to vertexData\r\n        newPlanevertexData.positions = newPlanepositions;\r\n        newPlanevertexData.indices = indicesSeq;\r\n        newPlanevertexData.normals = newPlanenormals;\r\n        newPlanevertexData.uvs = _uvs;\r\n\r\n        newPlanevertexData.applyToMesh(wallMesh);\r\n        wallMesh.material = this.appManager.roomManager.RoomData[_roomName].material;\r\n        console.log(wallMesh);\r\n        console.log(data);\r\n        console.log(newPlanevertexData);\r\n        // data.wallName = wallMesh.name;\r\n      \r\n\r\n        data.wallMesh = wallMesh;\r\n        data.vertexData = newPlanevertexData;\r\n\r\n        wallMesh.wallName = data.wallName;\r\n        wallMesh.roomName = _roomName;\r\n        wallMesh.wallGroupName = wallGroupName;\r\n        // wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].meshGroup;\r\n        wallMesh.parent = this.appManager.roomManager.RoomData[_roomName].wallGroup[wallGroupName].WallsNode;\r\n        this.appManager.roomManager.RoomData[_roomName].wallGroup[wallGroupName].WallsData[data.wallName] = data;\r\n\r\n        console.log(this.appManager.roomManager.RoomData[_roomName].parentGroup);\r\n    }\r\n    private getPoints(_box2: any, _box1: any) {\r\n        var vct_ = this.minus(_box2, _box1);\r\n        // console.log(vct_)\r\n        var arr_vct = [];\r\n        for (var i = 1; i < this.divPoint; i++) {\r\n            var tempvct = new Vector3(0, 0, 0);\r\n            tempvct.x = _box1.x + ((vct_.x * i) / this.divPoint)\r\n            tempvct.y = _box1.y + ((vct_.y * i) / this.divPoint)\r\n            tempvct.z = _box1.z + ((vct_.z * i) / this.divPoint)\r\n            arr_vct.push(tempvct);\r\n        }\r\n        return arr_vct;\r\n    }\r\n    private minus(last: any, mesh: any) {\r\n\r\n        var direction = new Vector3(last.x - mesh.x, last.y - mesh.y, last.z - mesh.z);\r\n        return direction;\r\n    }\r\n    private getUvPoint(point: any) {\r\n        var pickinfo: any = this.scene.pick(point.x, point.y, (mesh) => {\r\n            return mesh === this.appManager.sphereManager.getSphere();\r\n        });\r\n        // console.log(point)\r\n        // console.log(pickinfo.getTextureCoordinates())\r\n        return pickinfo.getTextureCoordinates();\r\n    }\r\n    getPosition(vertices: any, twod?: any) {\r\n        var refVertices = [...vertices];\r\n        var verticeslocal = new Float32Array(vertices.length * 3);\r\n\r\n        var verticeslocaltwod: any = new Float32Array(vertices.length * 2);\r\n\r\n        for (let i = 1; i <= vertices.length; i++) {\r\n            verticeslocal[i * 3 - 3] = refVertices[i - 1].x;\r\n            verticeslocal[i * 3 - 2] = refVertices[i - 1].y;\r\n            verticeslocal[i * 3 - 1] = refVertices[i - 1].z;\r\n\r\n            if (twod) {\r\n                verticeslocaltwod[i * 3 - 3] = refVertices[i - 1].x;\r\n                verticeslocaltwod[i * 3 - 2] = refVertices[i - 1].z;\r\n                console.log(refVertices[i - 1])\r\n            }\r\n\r\n            // var x,y,z;\r\n            // x=parseFloat(refVertices[i - 1].x).toFixed(2);\r\n            // y=parseFloat(refVertices[i - 1].y).toFixed(2);\r\n            // z=parseFloat(refVertices[i - 1].z).toFixed(2);\r\n            // // console.log(x,y,z);\r\n            // verticeslocal[i * 3 - 3] = x;\r\n            // verticeslocal[i * 3 - 2] = y;\r\n            // verticeslocal[i * 3 - 1] =z;\r\n        }\r\n        // console.log(verticeslocal);\r\n\r\n        var pp: any = [];\r\n        if (twod) {\r\n            for (let i = 0; i < verticeslocaltwod.length; i++) {\r\n                // if (verticeslocaltwod[i] != NaN)\r\n                var val: any = parseInt(verticeslocaltwod[i])\r\n                // val = parseFloat(val.toFixed(2));\r\n\r\n                pp.push(val);\r\n                // else pp.push(verticeslocaltwod[i - 1])\r\n            }\r\n        }\r\n        // console.log(verticeslocaltwod);\r\n        // console.log(pp);\r\n        if (!twod)\r\n            return verticeslocal;\r\n        else\r\n            return [verticeslocal, pp]\r\n    }\r\n\r\n\r\n    updateWall(obj: any, updateUv: boolean, objType: string) {\r\n\r\n        console.log(obj)\r\n        console.log(updateUv)\r\n        console.log(objType)\r\n        if (objType === \"wall\")\r\n            var data: any = this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName];\r\n        else if (objType === \"floor\")\r\n            var data: any = this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName];\r\n\r\n        var ver = [];\r\n        ver.push(data.corners[0].position);\r\n        ver.push(data.corners[1].position);\r\n        var topPoints = this.getPoints(data.corners[2].position, data.corners[1].position);\r\n        var bottomPoints = this.getPoints(data.corners[3].position, data.corners[0].position);\r\n        for (var i = 0; i < this.divPoint - 1; i++) {\r\n            ver.push(topPoints[i])\r\n            ver.push(bottomPoints[i])\r\n        }\r\n        ver.push(data.corners[2].position);\r\n        ver.push(data.corners[3].position);\r\n\r\n        if (updateUv) {\r\n            var _uvs: any = [];\r\n            ver.forEach(element => {\r\n                var coordinates = Vector3.Project(element,\r\n                    Matrix.Identity(),\r\n                    this.scene.getTransformMatrix(),\r\n                    this.camera.viewport.toGlobal(\r\n                        this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n                        this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n                    ));\r\n                var uvCoordinates = this.getUvPoint(coordinates);\r\n                // console.log(uvCoordinates,_uvs);\r\n                if (uvCoordinates != null) {\r\n                    _uvs.push(uvCoordinates.x);\r\n                    _uvs.push(uvCoordinates.y);\r\n\r\n                } else {\r\n                    console.log(uvCoordinates);\r\n                    _uvs.push(_uvs[_uvs.length - 2])\r\n                    _uvs.push(_uvs[_uvs.length - 1])\r\n\r\n                }\r\n            });\r\n            if (objType == \"wall\") {\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos = [];\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[0].position);\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[1].position);\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[2].position);\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[3].position);\r\n            }\r\n            else if (objType == \"floor\") {\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos = [];\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[0].position);\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[1].position);\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[2].position);\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].uvPointsPos.push(data.corners[3].position);\r\n            }\r\n        }\r\n        if (objType == \"wall\") {\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos = [];\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[0].position);\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[1].position);\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[2].position);\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[3].position);\r\n            var newPlanepositions = this.getPosition(ver);\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].vertexData.positions = newPlanepositions;\r\n            if (updateUv)\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].vertexData.uvs = _uvs;\r\n\r\n            this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].vertexData.applyToMesh(\r\n                this.appManager.roomManager.RoomData[obj.roomName].wallGroup[obj.wallGroupName].WallsData[obj.wallName].wallMesh);\r\n        }\r\n        else if (objType == \"floor\") {\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos = [];\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[0].position);\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[1].position);\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[2].position);\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].cornersPos.push(data.corners[3].position);\r\n            var newPlanepositions = this.getPosition(ver);\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].vertexData.positions = newPlanepositions;\r\n            if (updateUv)\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].vertexData.uvs = _uvs;\r\n\r\n            this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].vertexData.applyToMesh(\r\n                this.appManager.roomManager.RoomData[obj.roomName].floorGroup[obj.wallGroupName].WallsData[obj.wallName].wallMesh);\r\n        }\r\n\r\n\r\n\r\n        // this.updateAllWallUv(obj);\r\n\r\n    }\r\n\r\n\r\n    selectWall(wall: any) {\r\n\r\n        this.disableAllWallButton();\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            var wallname = wallKeys[index];\r\n            this.appManager.roomManager.RoomData[wall.roomName].wallGroup[wall.wallGroupName].WallsData[wallname].corners.forEach((element: any) => {\r\n                element.isVisible = false;\r\n            });\r\n            this.appManager.roomManager.RoomData[wall.roomName].wallGroup[wall.wallGroupName].WallsData[wallname].centers.forEach((element: any) => {\r\n                element.isVisible = false;\r\n            });\r\n            this.appManager.roomManager.RoomData[wall.roomName].wallGroup[wall.wallGroupName].WallsData[wallname].wallMesh.isVisible = false;\r\n        }\r\n\r\n        if (this.EditWallDoneButton != null)\r\n            this.EditWallDoneButton.style.display = 'block';\r\n\r\n        console.log(wall)\r\n        console.log(this.appManager.roomManager.RoomData)\r\n        console.log(this.appManager.roomManager.RoomData[wall.roomName]);\r\n        console.log(this.appManager.roomManager.RoomData[wall.roomName].wallGroup);\r\n        console.log(this.appManager.roomManager.RoomData[wall.roomName].wallGroup[wall.wallGroupName]);\r\n\r\n\r\n        // this.appManager.roomManager.RoomData[wall.roomName].WallData[wall.wallName] = data;\r\n        this.appManager.roomManager.RoomData[wall.roomName].wallGroup[wall.wallGroupName].WallsData[wall.wallName].corners.forEach((element: any) => {\r\n            element.isVisible = true;\r\n            // console.log(element.tag)\r\n        });\r\n        this.appManager.roomManager.RoomData[wall.roomName].wallGroup[wall.wallGroupName].WallsData[wall.wallName].centers.forEach((element: any) => {\r\n            element.isVisible = true;\r\n            // console.log(element.tag)\r\n        });\r\n    }\r\n\r\n    getCenterPoint(_box2: any, _box1: any, boxName: string, tagName: string) {\r\n        var direction = this.minus(_box2, _box1);\r\n        var tempvct: Vector3 = new Vector3(0, 0, 0);\r\n        tempvct.x = _box1.x + direction.x / 2;\r\n        tempvct.y = _box1.y + direction.y / 2;\r\n        tempvct.z = _box1.z + direction.z / 2;\r\n        var centerBox: any = this.mousePointer3dBottom.clone(boxName);\r\n        centerBox.name = boxName;\r\n        centerBox.tag = tagName;\r\n        centerBox.position.set(tempvct.x, tempvct.y, tempvct.z);\r\n        centerBox.renderingGroupId = 3;\r\n        centerBox.isVisible = false;\r\n        return [centerBox, tempvct];\r\n    }\r\n\r\n    updateAllWallUv() {\r\n\r\n        try {\r\n\r\n\r\n            var roomKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup);\r\n            var firstRoom = false;\r\n            if (roomKeys.length > 0 && roomKeys[0] == DH_Constants.currentWallGroupName) {\r\n                firstRoom = true;\r\n            }\r\n\r\n\r\n            var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n            // console.log(\"updateAllWallUv\", obj)\r\n            // var firstWall:any;\r\n            for (let index = 0; index < wallKeys.length; index++) {\r\n                const wallname = wallKeys[index];\r\n                // console.log(wallKeys[index-1]);\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.actionManager.actions.\r\n                    forEach((action: any) => {\r\n                        // console.log(action);\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].\r\n                            wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].wallMesh.actionManager.unregisterAction(action);\r\n                    });\r\n\r\n\r\n                // }\r\n                if (index === 0) {\r\n\r\n                    if (firstRoom) {\r\n                        this.calculateHeight(\r\n                            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[1].position,\r\n                            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[0].position)\r\n                    }\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[3].position.y =\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[0].position.y\r\n\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[2].position.y =\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[1].position.y\r\n                }\r\n                //     firstWall = wallname;\r\n                // var data = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname];\r\n\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[0].position.y =\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[0].position.y\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[1].position.y =\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[1].position.y\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[2].position.y =\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[2].position.y\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[3].position.y =\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[3].position.y;\r\n\r\n                if (index !== 0) {\r\n\r\n                    // console.log(wallKeys[index - 1])\r\n                    // console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]])\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[0].position.set(\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[3].position.x,\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[3].position.y,\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[3].position.z\r\n                    );\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[1].position.set(\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[2].position.x,\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[2].position.y,\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[2].position.z\r\n                    );\r\n\r\n                }\r\n\r\n                this.updateWall(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners[0], \r\n                    false, \"wall\");\r\n\r\n                if (index === wallKeys.length - 1) {\r\n                    this.enableWallOptionsUi();\r\n                    if (this.EditFromTopButton != null)\r\n                        this.EditFromTopButton.style.display = 'block';\r\n                }\r\n\r\n\r\n                // this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].corners.forEach((element: any) => {\r\n                //     element.isVisible = false;\r\n                // });\r\n                // this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallname].centers.forEach((element: any) => {\r\n                //     element.isVisible = false;\r\n                // });\r\n            }\r\n\r\n            // Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData).forEach((wallName: any) => {\r\n            //     console.log(wallName);\r\n            //     var data = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallName];\r\n            // });\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    AdjustWallFromTop() {\r\n        this.disableAllWallButton();\r\n        this.appManager.cameraManager.setVerticalCamera();\r\n        this.appManager.sphereManager.toggleSphere(false);\r\n        DH_Constants.updatefov = false;\r\n        DH_Constants.modePlane_editFromTop = true;\r\n\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n        if (!this.grid)\r\n            this.grid = this.handler.createGrid(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[0].position.y);\r\n        if (this.grid)\r\n            this.grid.isVisible = true;\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            // const wallname = wallKeys[index];\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].isVisible = true;\r\n\r\n        }\r\n\r\n        if (this.EditFromTopDoneButton != null)\r\n            this.EditFromTopDoneButton.style.display = 'block';\r\n\r\n    }\r\n    updatePointWallFromTop(mesh: any) {\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n        console.log(mesh);\r\n        // var SelectedWall;\r\n        // var ConnectedWall;\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            console.log(\"4\");\r\n\r\n            if (mesh.wallName === wallKeys[index]) {\r\n                console.log(\"5\");\r\n\r\n                //updating Selected mesh Position\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[1].position.x =\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].position.x;\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[1].position.z =\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].position.z\r\n                if (index === 0) {\r\n                    console.log(\"F UPDATE WALL\", index, \"  \", wallKeys.length - 1)\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[wallKeys.length - 1]].corners[2].position =\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[1].position;\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[wallKeys.length - 1]].corners[3].position =\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].position\r\n                }\r\n                else {\r\n                    console.log(\"O UPDATE WALL\", index, \"  \", index - 1, \"  \", wallKeys[index - 1])\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[2].position =\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[1].position;\r\n                    this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[3].position =\r\n                        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].position\r\n                }\r\n\r\n\r\n                this.updateWall(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0],\r\n                     false, \"wall\");\r\n                if (index == 0)\r\n                    this.updateWall(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[wallKeys.length - 1]].corners[0], \r\n                        false, \"wall\");\r\n                else\r\n                    this.updateWall(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index - 1]].corners[0], \r\n                        false, \"wall\");\r\n\r\n                break;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    AdjustWallFromTopDone() {\r\n\r\n        this.disableAllWallButton();\r\n        this.appManager.cameraManager.resetCamera();\r\n        this.appManager.sphereManager.toggleSphere(true);\r\n        DH_Constants.updatefov = true;\r\n        DH_Constants.modePlane_editFromTop = false;\r\n        // this.createFloor()\r\n        this.enableWallOptionsUi();\r\n        if (this.EditFromTopButton != null)\r\n            this.EditFromTopButton.style.display = 'block';\r\n\r\n        if (this.grid)\r\n            this.grid.isVisible = false;\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            // const wallname = wallKeys[index];\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].isVisible = false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    public createFloorFromEarcut() {\r\n\r\n        var floorName: any = \"Floor_\" + DH_Constants.currentWallGroupName;\r\n\r\n        console.log(floorName)\r\n\r\n\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName] =\r\n            this.appManager.roomManager.createWallGroup(floorName, DH_Constants.currentRoomName)\r\n\r\n        var floorPoints = [];\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData);\r\n        var _uvs: any = [];\r\n        var vertex: any = []\r\n        // console.log(mesh);\r\n        // var SelectedWall;\r\n        // var ConnectedWall;\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            // console.log(\"4\");\r\n\r\n            // if(index==0)\r\n            console.log(wallKeys[index]);\r\n\r\n            floorPoints.push(this.mousePointer3dBottom.clone(\"floorPoints_\" + index));\r\n            // floorPoints[index].position.y += DH_Constants.wallYDiffernce;\r\n            floorPoints[index].isVisible = true;\r\n            floorPoints[index].position.set(\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].x,\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].y,\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].z\r\n            );\r\n            vertex.push(\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0]\r\n            );\r\n\r\n            _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[0])\r\n            _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[1])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[3])\r\n        }\r\n        console.log(floorPoints);\r\n        // return;\r\n        // var vertex: any = floorPoints;\r\n        var data = {\r\n            // cornersPos: [] = cornerPos,\r\n\r\n            // uvPointsPos: [] = cornerPos,\r\n\r\n            name: floorName,\r\n            floorMesh: this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[0],\r\n            vertexData: {}\r\n        };\r\n\r\n        // return;\r\n        // vertex.push(cornerPos[0]);\r\n        // vertex.push(cornerPos[1]);\r\n        // var topPoints = this.getPoints(cornerPos[2], cornerPos[1]);\r\n        // var bottomPoints = this.getPoints(cornerPos[3], cornerPos[0]);\r\n        // for (var i = 0; i < this.divPoint - 1; i++) {\r\n        //     vertex.push(topPoints[i])\r\n        //     vertex.push(bottomPoints[i])\r\n        // }\r\n        // vertex.push(cornerPos[2]);\r\n        // vertex.push(cornerPos[3]);\r\n\r\n        // vertex.forEach((element: any) => {\r\n        //     console.log(element);\r\n        //     var coordinates = Vector3.Project(element,\r\n        //         Matrix.Identity(),\r\n        //         this.transformMatrix,\r\n        //         this.camera.viewport.toGlobal(\r\n        //             this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n        //             this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n        //         ));\r\n        //     var uvCoordinates = this.getUvPoint(coordinates);\r\n        //     // console.log(uvCoordinates,_uvs);\r\n        //     if (uvCoordinates != null) {\r\n        //         _uvs.push(uvCoordinates.x);\r\n        //         _uvs.push(uvCoordinates.y);\r\n\r\n        //     } else {\r\n        //         console.log(uvCoordinates);\r\n        //         _uvs.push(_uvs[_uvs.length - 2])\r\n        //         _uvs.push(_uvs[_uvs.length - 1])\r\n\r\n        //     }\r\n        // });\r\n        console.log(_uvs);\r\n        // console.log(data);\r\n\r\n        var wallMesh: any = new Mesh(floorName, this.scene);\r\n\r\n        wallMesh.renderingGroupId = 2;\r\n        var newPlanepositions = this.getPosition(vertex);\r\n        var newPlanepositions2 = this.getPosition(vertex, true);\r\n        var flag = true;\r\n        var index = 0;\r\n        var indicesSeq: any = [];\r\n        console.log(vertex)\r\n        indicesSeq = VP.earcut_(newPlanepositions, newPlanepositions2, 2);\r\n\r\n        var newPlanenormals: any = [];\r\n        var newPlanevertexData: any = new VertexData();\r\n        VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n\r\n        //Assign positions, indices and normals to vertexData\r\n        newPlanevertexData.positions = newPlanepositions;\r\n        newPlanevertexData.indices = indicesSeq;\r\n        // newPlanevertexData.normals = newPlanenormals;\r\n        newPlanevertexData.uvs = _uvs;\r\n\r\n        newPlanevertexData.applyToMesh(wallMesh);\r\n        wallMesh.material = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].material;\r\n        console.log(wallMesh);\r\n        console.log(data);\r\n        console.log(newPlanevertexData);\r\n        // data.name = wallMesh.name;\r\n        // data.wallMesh = wallMesh;\r\n        // data.wallMesh.name = wallName;\r\n        // data.wallMesh.roomName = DH_Constants.currentRoomName;\r\n        // data.wallMesh.wallGroupName = wallGroupName;\r\n        data.vertexData = newPlanevertexData;\r\n        // wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].meshGroup;\r\n        wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName].WallsNode;\r\n\r\n\r\n        // this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsData[wallName] = data;\r\n        this.doOnce = true;\r\n\r\n\r\n    }\r\n\r\n    public createFloorFromEarcut2() {\r\n\r\n        var floorName: any = \"Floor_\" + DH_Constants.currentWallGroupName;\r\n\r\n        console.log(floorName)\r\n\r\n\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName] =\r\n            this.appManager.roomManager.createWallGroup(floorName, DH_Constants.currentRoomName)\r\n\r\n        var floorPoints = [];\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData);\r\n        var _uvs: any = [];\r\n        var vertex: any = []\r\n        var vertex_2d: any = []\r\n        // console.log(mesh);\r\n        // var SelectedWall;\r\n        // var ConnectedWall;\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            // console.log(\"4\");\r\n\r\n            // if(index==0)\r\n            console.log(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]]);\r\n\r\n            floorPoints.push(this.mousePointer3dBottom.clone(\"floorPoints_\" + index));\r\n            // floorPoints[index].position.y += DH_Constants.wallYDiffernce;\r\n            floorPoints[index].isVisible = true;\r\n            floorPoints[index].position.set(\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].x,\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].y,\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].z\r\n            );\r\n\r\n            var vector = new Vector2(\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].x,\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0].z\r\n            );\r\n\r\n            vertex_2d.push(vector);\r\n            vertex.push(\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0]\r\n            );\r\n\r\n            // _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[0])\r\n            // _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[1])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[3])\r\n        }\r\n        console.log(floorPoints);\r\n        // return;\r\n        // var vertex: any = floorPoints;\r\n        var data = {\r\n            // cornersPos: [] = cornerPos,\r\n\r\n            // uvPointsPos: [] = cornerPos,\r\n\r\n            name: floorName,\r\n            floorMesh: this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[0],\r\n            vertexData: {}\r\n        };\r\n\r\n\r\n        const poly_tri2 = new PolygonMeshBuilder(\"polytri2\", vertex_2d);\r\n        const polygon2 = poly_tri2.build();\r\n        return;\r\n        // vertex.push(cornerPos[0]);\r\n        // vertex.push(cornerPos[1]);\r\n        // var topPoints = this.getPoints(cornerPos[2], cornerPos[1]);\r\n        // var bottomPoints = this.getPoints(cornerPos[3], cornerPos[0]);\r\n        // for (var i = 0; i < this.divPoint - 1; i++) {\r\n        //     vertex.push(topPoints[i])\r\n        //     vertex.push(bottomPoints[i])\r\n        // }\r\n        // vertex.push(cornerPos[2]);\r\n        // vertex.push(cornerPos[3]);\r\n\r\n        // vertex.forEach((element: any) => {\r\n        //     console.log(element);\r\n        //     var coordinates = Vector3.Project(element,\r\n        //         Matrix.Identity(),\r\n        //         this.transformMatrix,\r\n        //         this.camera.viewport.toGlobal(\r\n        //             this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n        //             this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n        //         ));\r\n        //     var uvCoordinates = this.getUvPoint(coordinates);\r\n        //     // console.log(uvCoordinates,_uvs);\r\n        //     if (uvCoordinates != null) {\r\n        //         _uvs.push(uvCoordinates.x);\r\n        //         _uvs.push(uvCoordinates.y);\r\n\r\n        //     } else {\r\n        //         console.log(uvCoordinates);\r\n        //         _uvs.push(_uvs[_uvs.length - 2])\r\n        //         _uvs.push(_uvs[_uvs.length - 1])\r\n\r\n        //     }\r\n        // });\r\n        // console.log(_uvs);\r\n        // console.log(data);\r\n        /*\r\n                var wallMesh: any = new Mesh(floorName, this.scene);\r\n        \r\n                wallMesh.renderingGroupId = 2;\r\n                var newPlanepositions = this.getPosition(vertex);\r\n                var newPlanepositions2 = this.getPosition(vertex, true);\r\n                var flag = true;\r\n                var index = 0;\r\n                var indicesSeq: any = [];\r\n                console.log(vertex)\r\n                indicesSeq = VP.earcut_(newPlanepositions, newPlanepositions2, 2);\r\n        \r\n                var newPlanenormals: any = [];\r\n                var newPlanevertexData: any = new VertexData();\r\n                VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n        \r\n                //Assign positions, indices and normals to vertexData\r\n                newPlanevertexData.positions = newPlanepositions;\r\n                // newPlanevertexData.indices = indicesSeq;\r\n                // newPlanevertexData.normals = newPlanenormals;\r\n                // newPlanevertexData.uvs = _uvs;\r\n        \r\n                newPlanevertexData.applyToMesh(wallMesh);\r\n                wallMesh.material = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].material;\r\n                console.log(wallMesh);\r\n                console.log(data);\r\n                console.log(newPlanevertexData);\r\n                // data.name = wallMesh.name;\r\n                // data.wallMesh = wallMesh;\r\n                // data.wallMesh.name = wallName;\r\n                // data.wallMesh.roomName = DH_Constants.currentRoomName;\r\n                // data.wallMesh.wallGroupName = wallGroupName;\r\n                data.vertexData = newPlanevertexData;\r\n                // wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].meshGroup;\r\n                wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName].WallsNode;\r\n        \r\n        \r\n                // this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsData[wallName] = data;\r\n                this.doOnce = true;\r\n        \r\n        */\r\n    }\r\n\r\n    public createFloorFromPoints() {\r\n\r\n        if (this.FloorDoneButton != null)\r\n            this.FloorDoneButton.style.display = 'block';\r\n        var floorName: any = \"Floor_\" + DH_Constants.currentWallGroupName;\r\n\r\n        console.log(floorName)\r\n\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName] =\r\n            this.appManager.roomManager.createWallGroup(floorName, DH_Constants.currentRoomName)\r\n\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData);\r\n\r\n        // console.log(mesh);\r\n        // var SelectedWall;\r\n        // var ConnectedWall;\r\n        // var floorPoints = [];\r\n        var UVfloorPoints = [];\r\n        var cornerPos: any = [];\r\n        var _uvs = [];\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n\r\n\r\n            // if(index==0)\r\n            console.log(wallKeys[index]);\r\n            if (index < 4) {\r\n                console.log(index);\r\n\r\n\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].wallMesh.isVisible = false;\r\n\r\n                UVfloorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0]);\r\n                cornerPos.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].cornersPos[0]);\r\n                _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[0])\r\n                _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[1])\r\n                if (index == 3)\r\n                    this.createFloorWall(cornerPos, UVfloorPoints, _uvs, floorName);\r\n            }\r\n            // vertex.push(\r\n            //     this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0]\r\n            // );\r\n\r\n            // _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[0])\r\n            // _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[1])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[3])\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    private createFloorWall(cornerPos: any, UVfloorPoints: any, _uvs: any, wallGroupName: any) {\r\n        console.log(\"cornerPos \", cornerPos);\r\n        console.log(\"UVfloorPoints \", UVfloorPoints);\r\n        console.log(\"_uvs \", _uvs);\r\n        console.log(\"wallGroupName \", wallGroupName);\r\n\r\n        var corners: any = [];\r\n        var centers: any = [];\r\n        var centersPos: any = [];\r\n        // console.log(Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[wallGroupName].WallsData));\r\n        var wallName: any = wallGroupName + \"1\";\r\n\r\n        for (let index = 0; index < cornerPos.length; index++) {\r\n            corners.push(this.mousePointer3dBottom.clone(\"CornerBox_\" + index + \"_\" + wallName));\r\n            this.allWallCorners.push(corners[index]);\r\n            corners[index].position.set(cornerPos[index].x, cornerPos[index].y, cornerPos[index].z);\r\n            corners[index].renderingGroupId = 3;\r\n            corners[index].isVisible = true;\r\n            corners[index].tag = \"CornerBox\";\r\n            corners[index].wallName = wallName;\r\n            corners[index].roomName = DH_Constants.currentRoomName;\r\n            corners[index].wallGroupName = wallGroupName;\r\n            corners[index].actionManager = new ActionManager(this.scene);\r\n\r\n            corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOverTrigger, () => {\r\n                //  if (DH_Constants.modePlane_editWallUV)\r\n                this.appManager.DHCursor.updateMsg(\"Drag to update Image of wall\")\r\n                //  else if (DH_Constants.modePlane_editFromTop)\r\n                this.appManager.DHCursor.updateMsg(\"Select and Hold to Edit\")\r\n\r\n            }));\r\n\r\n            corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPointerOutTrigger, () => {\r\n                this.appManager.DHCursor.updateMsg(\"Select points to Edit Wall\")\r\n\r\n            }));\r\n            corners[index].actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnLongPressTrigger, () => {\r\n                // if (DH_Constants.modePlane_editFromTop) {\r\n                //     this.appManager.DHCursor.updateMsg(\"Drag Position\");\r\n                //     this.appManager.gizmoHandler.attachOnMesh(corners[index]);\r\n                //     this.appManager.gizmoHandler.enablePositionGizmoOnly(2.0, 0.0, 2.0)\r\n                //     this.disableAllWallButton();\r\n\r\n                // }\r\n\r\n            }));\r\n            // con\r\n            corners[index].parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[wallGroupName].CornersNode;\r\n\r\n        }\r\n\r\n\r\n\r\n        // return;\r\n        var vertex = [];\r\n        var data = {\r\n            cornersPos: [] = cornerPos,\r\n            corners: [] = corners,\r\n            centers: [] = centers,\r\n            uvPointsPos: [] = cornerPos,\r\n            centersPos: [] = centersPos,\r\n            name: wallName,\r\n            wallMesh: corners[0],\r\n            vertexData: {}\r\n        };\r\n        vertex.push(cornerPos[0]);\r\n        vertex.push(cornerPos[1]);\r\n        var topPoints = this.getPoints(cornerPos[2], cornerPos[1]);\r\n        var bottomPoints = this.getPoints(cornerPos[3], cornerPos[0]);\r\n        for (var i = 0; i < this.divPoint - 1; i++) {\r\n            vertex.push(topPoints[i])\r\n            vertex.push(bottomPoints[i])\r\n        }\r\n        vertex.push(cornerPos[2]);\r\n        vertex.push(cornerPos[3]);\r\n        var _uvs: any = [];\r\n        UVfloorPoints.forEach((element: any) => {\r\n            // console.log(element);\r\n            var coordinates = Vector3.Project(element,\r\n                Matrix.Identity(),\r\n                this.scene.getTransformMatrix(),\r\n                this.camera.viewport.toGlobal(\r\n                    this.appManager.sceneManager.getEngine().getRenderWidth(),\r\n                    this.appManager.sceneManager.getEngine().getRenderHeight(),\r\n                ));\r\n            var uvCoordinates = this.getUvPoint(coordinates);\r\n            // console.log(uvCoordinates,_uvs);\r\n            if (uvCoordinates != null) {\r\n                _uvs.push(uvCoordinates.x);\r\n                _uvs.push(uvCoordinates.y);\r\n\r\n            } else {\r\n                console.log(uvCoordinates);\r\n                _uvs.push(_uvs[_uvs.length - 2])\r\n                _uvs.push(_uvs[_uvs.length - 1])\r\n\r\n            }\r\n        });\r\n        // console.log(_uvs);\r\n        // console.log(data);\r\n\r\n        var wallMesh: any = new Mesh(wallName, this.scene);\r\n\r\n        wallMesh.renderingGroupId = 2;\r\n        var newPlanepositions = this.getPosition(vertex);\r\n        var flag = true;\r\n        var index = 0;\r\n        var indicesSeq = [];\r\n        for (var i = 0; i < this.divPoint; i++) {\r\n            if (flag) {\r\n                indicesSeq.push(index++);\r\n                indicesSeq.push(index++);\r\n                indicesSeq.push(++index);\r\n                indicesSeq.push(index - 2);\r\n                indicesSeq.push(index - 1);\r\n                indicesSeq.push(index);\r\n                flag = !flag;\r\n            } else {\r\n                indicesSeq.push(index--);\r\n                indicesSeq.push(index);\r\n                index += 3;\r\n                indicesSeq.push(index);\r\n                indicesSeq.push(index - 3);\r\n                indicesSeq.push(index - 1);\r\n                indicesSeq.push(index);\r\n            }\r\n        }\r\n        var newPlanenormals: any = [];\r\n        var newPlanevertexData: any = new VertexData();\r\n        VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n\r\n        //Assign positions, indices and normals to vertexData\r\n        newPlanevertexData.positions = newPlanepositions;\r\n        newPlanevertexData.indices = indicesSeq;\r\n        // newPlanevertexData.normals = newPlanenormals;\r\n        newPlanevertexData.uvs = _uvs;\r\n\r\n        newPlanevertexData.applyToMesh(wallMesh);\r\n        wallMesh.material = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].material;\r\n        console.log(wallMesh);\r\n        console.log(data);\r\n        console.log(newPlanevertexData);\r\n        // data.name = wallMesh.name;\r\n        data.wallMesh = wallMesh;\r\n        data.wallMesh.name = wallName;\r\n        data.wallMesh.roomName = DH_Constants.currentRoomName;\r\n        data.wallMesh.wallGroupName = wallGroupName;\r\n        data.vertexData = newPlanevertexData;\r\n        // wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].meshGroup;\r\n        wallMesh.parent = this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[wallGroupName].WallData;\r\n\r\n\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[wallGroupName].WallsData[wallName] = data;\r\n        // this.doOnce = true;\r\n\r\n        // data.wallMesh.actionManager = new ActionManager(this.scene);\r\n        // data.wallMesh.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnLongPressTrigger, () => {\r\n        //     // console.log(wallMesh);\r\n        //     data.wallMesh.isVisible = false;\r\n\r\n        //     setTimeout(() => {\r\n        //         wallMesh.isVisible = true;\r\n        //     }, 500);\r\n\r\n        //     // console.log(data.wallMesh.name);\r\n        //     this.selectWall(data.wallMesh);\r\n        // }));\r\n    }\r\n    createFloorPlane() {\r\n        var floorName: any = \"Floor_\" + DH_Constants.currentWallGroupName;\r\n\r\n        console.log(floorName)\r\n\r\n        this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName] =\r\n            this.appManager.roomManager.createWallGroup(floorName, DH_Constants.currentRoomName)\r\n\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData);\r\n\r\n        // console.log(mesh);\r\n        // var SelectedWall;\r\n        // var ConnectedWall;\r\n        // var floorPoints = [];\r\n        var UVfloorPoints = [];\r\n        var cornerPos: any = [];\r\n        var _uvs = [];\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n\r\n\r\n            // if(index==0)\r\n            console.log(wallKeys[index]);\r\n            if (index < 4) {\r\n                console.log(index);\r\n\r\n                this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].wallMesh.isVisible = false;\r\n\r\n                UVfloorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0]);\r\n                cornerPos.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].cornersPos[0]);\r\n                _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[0])\r\n                _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[1])\r\n                if (index == 3) {\r\n                    this.createFloorWall(cornerPos, UVfloorPoints, _uvs, floorName);\r\n                    // var newPlane: any = new Mesh(\"wall_\" + Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].floorGroup[floorName].WallsData).length, this.scene);\r\n                    // newPlane.tag = \"wall\";\r\n                    // console.log(vertex);\r\n                    // var newPlanepositions = getPosition(vertex);\r\n\r\n                    // console.log(newPlanepositions)\r\n                    // //for 10\r\n                    // var flag = true;\r\n                    // var index = 0;\r\n                    // var indicesSeq = [];\r\n                    // for (var i = 0; i < divPoint; i++) {\r\n                    //     if (flag) {\r\n                    //         indicesSeq.push(index++);\r\n                    //         indicesSeq.push(index++);\r\n                    //         indicesSeq.push(++index);\r\n                    //         indicesSeq.push(index - 2);\r\n                    //         indicesSeq.push(index - 1);\r\n                    //         indicesSeq.push(index);\r\n                    //         flag = !flag;\r\n                    //     } else {\r\n                    //         indicesSeq.push(index--);\r\n                    //         indicesSeq.push(index);\r\n                    //         index += 3;\r\n                    //         indicesSeq.push(index);\r\n                    //         indicesSeq.push(index - 3);\r\n                    //         indicesSeq.push(index - 1);\r\n                    //         indicesSeq.push(index);\r\n                    //     }\r\n                    // }\r\n\r\n                    // console.log(indicesSeq)\r\n                    // var newPlanenormals = [];\r\n                    // var newPlanevertexData = new BABYLON.VertexData();\r\n                    // BABYLON.VertexData.ComputeNormals(newPlanepositions, indicesSeq, newPlanenormals);\r\n\r\n                    // //Assign positions, indices and normals to vertexData\r\n                    // newPlanevertexData.positions = newPlanepositions;\r\n                    // newPlanevertexData.indices = indicesSeq;\r\n                    // newPlanevertexData.normals = newPlanenormals;\r\n                    // newPlanevertexData.uvs = _uvs;\r\n\r\n                    // newPlanevertexData.applyToMesh(newPlane);\r\n                    // newPlane.material = RoomData[CurrentRoomName].material;\r\n                    // console.log(newPlane);\r\n\r\n                    // data.name = \"wall_\" + Object.keys(RoomData[CurrentRoomName].WallData).length;\r\n                    // data.wall = newPlane;\r\n                    // data.vertexData = newPlanevertexData;\r\n\r\n                    // newPlane.isPickable = false;\r\n                    // RoomData[CurrentRoomName].WallData.push(data)\r\n                    // // updateLastWallUV = true;\r\n\r\n                    // buttonNextPlane.visibility = true;\r\n                }\r\n            }\r\n            // vertex.push(\r\n            //     this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].uvPointsPos[0]\r\n            // );\r\n\r\n            // _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[0])\r\n            // _uvs.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].vertexData.uvs[1])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0])\r\n            // floorPoints.push(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[3])\r\n        }\r\n\r\n\r\n    }\r\n\r\n    FloorDone() {\r\n        this.disableAllWallButton();\r\n\r\n        DH_Constants.modePlane = false;\r\n        DH_Constants.modePlane_createCorners = false;\r\n        DH_Constants.modePlane_editFromTop = false;\r\n        DH_Constants.modePlane_editWallUV = false;\r\n        DH_Constants.modePlane_editFloorUV = false;\r\n    }\r\n\r\n    getPosition2(vertices: any, twod: any) {\r\n        var refVertices = [...vertices];\r\n        var verticeslocal = new Float32Array(vertices.length * 3);\r\n\r\n        var verticeslocaltwod: any = new Float32Array(vertices.length * 2);\r\n\r\n        for (let i = 1; i <= vertices.length; i++) {\r\n            verticeslocal[i * 3 - 3] = refVertices[i - 1].x;\r\n            verticeslocal[i * 3 - 2] = refVertices[i - 1].y;\r\n            verticeslocal[i * 3 - 1] = refVertices[i - 1].z;\r\n\r\n            if (twod) {\r\n                verticeslocaltwod[i * 3 - 3] = refVertices[i - 1].x;\r\n                verticeslocaltwod[i * 3 - 2] = refVertices[i - 1].z;\r\n            }\r\n\r\n            // var x,y,z;\r\n            // x=parseFloat(refVertices[i - 1].x).toFixed(2);\r\n            // y=parseFloat(refVertices[i - 1].y).toFixed(2);\r\n            // z=parseFloat(refVertices[i - 1].z).toFixed(2);\r\n            // // console.log(x,y,z);\r\n            // verticeslocal[i * 3 - 3] = x;\r\n            // verticeslocal[i * 3 - 2] = y;\r\n            // verticeslocal[i * 3 - 1] =z;\r\n        }\r\n        // console.log(verticeslocal);\r\n\r\n        var pp = [];\r\n        for (let i = 1; i <= verticeslocaltwod.length; i++) {\r\n            pp.push(parseFloat(parseFloat(verticeslocaltwod[i]).toFixed(2)));\r\n        }\r\n        // console.log(pp);\r\n        if (!twod)\r\n            return verticeslocal;\r\n        else\r\n            return [verticeslocal, pp]\r\n    }\r\n\r\n\r\n    enableEditRoom() {\r\n        this.disableAllWallButton();\r\n        this.appManager.cameraManager.setVerticalCamera();\r\n        this.appManager.sphereManager.toggleSphere(false);\r\n        DH_Constants.updatefov = false;\r\n        DH_Constants.modePlane_editFromTop = true;\r\n\r\n        var wallKeys = Object.keys(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData)\r\n        if (!this.grid)\r\n            this.grid = this.handler.createGrid(this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[0]].corners[0].position.y);\r\n        if (this.grid)\r\n            this.grid.isVisible = true;\r\n        for (let index = 0; index < wallKeys.length; index++) {\r\n            // const wallname = wallKeys[index];\r\n            this.appManager.roomManager.RoomData[DH_Constants.currentRoomName].wallGroup[DH_Constants.currentWallGroupName].WallsData[wallKeys[index]].corners[0].isVisible = true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    calculateHeight(top: any, down: any) {\r\n        DH_Constants.wallHeight = Vector3.Distance(top, down);\r\n        DH_Constants.bottomY = down.y;\r\n        DH_Constants.topY = top.y;\r\n\r\n    }\r\n\r\n\r\n\r\n}","import { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\r\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { AppManager } from \"../ts/AppManager\";\r\n// import * as $ from \"jquery\";\r\n\r\n\r\nexport class CameraManager {\r\n\r\n\r\n    private appManager: AppManager;\r\n    private camera: ArcRotateCamera;\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n        this.camera = this.appManager.sceneManager.getCamera();\r\n        this.resetCamera();\r\n    }\r\n\r\n    addCameraListener() {\r\n\r\n    }\r\n\r\n    setVerticalCamera() {\r\n        this.camera.lowerBetaLimit = this.camera.upperBetaLimit = this.camera.beta = 0.01;\r\n        this.camera.panningSensibility = 100;\r\n        this.camera.upperRadiusLimit = 20000;\r\n        this.camera.maxZ = 30000;\r\n        // this.camera.panningInertia=0.8;\r\n        this.camera.wheelDeltaPercentage = 0.1;\r\n    }\r\n    resetCamera() {\r\n        this.camera.setTarget(Vector3.Zero());\r\n        this.camera.setPosition(new Vector3(0, 0, 0.1));\r\n        this.camera.minZ = 0;\r\n        this.camera.panningSensibility = 0; // Panning\r\n        //  updatefov = false;\r\n        this.camera.upperRadiusLimit = 20000;\r\n        this.camera.maxZ = 30000;\r\n        this.camera.lowerRadiusLimit = -100;\r\n        this.camera.lowerBetaLimit = 0.01;\r\n        this.camera.upperBetaLimit = 3.13;\r\n        this.camera.fov = 0.8;\r\n        this.camera.panningSensibility = 0;\r\n        this.camera.inertia = 0.7;\r\n        this.camera.lowerRadiusLimit = this.camera.upperRadiusLimit = this.camera.radius = 1;\r\n        this.camera.lowerBetaLimit = this.camera.upperBetaLimit = this.camera.beta = 1.56;\r\n        DH_Constants.updatefov = true;\r\n    }\r\n\r\n    freeCamera() {\r\n         DH_Constants.updatefov = false;\r\n        this.camera.upperRadiusLimit = 20000;\r\n        this.camera.maxZ = 30000;\r\n        this.camera.lowerRadiusLimit = -100\r\n        this.camera.lowerBetaLimit = 0.01;\r\n        this.camera.upperBetaLimit = 3.13;\r\n        // sphere.visibility=0;\r\n        this.camera.fov = 0.8;\r\n        this.camera.panningSensibility = 100;\r\n    }\r\n\r\n    dollhouseCamera(){\r\n        DH_Constants.updatefov = false;\r\n\r\n        this.camera.lowerRadiusLimit = -100\r\n    \r\n        // sphere.isVisible = false;\r\n        this.camera.fov = 0.8;\r\n        this.camera.panningSensibility = 100;\r\n    \r\n        this.camera.lowerBetaLimit = 0.01;\r\n        this.camera.upperBetaLimit = 3.13;\r\n    \r\n        this.camera.panningSensibility = 100;\r\n        this.camera.upperRadiusLimit = 20000;\r\n        this.camera.maxZ = 30000;\r\n        // camera.panningInertia=0.8;\r\n        this.camera.wheelDeltaPercentage = 0.1;\r\n    }\r\n\r\n\r\n\r\n\r\n}","import { AppManager } from \"./AppManager\";\r\n\r\nexport class DH_Cursor{\r\n\r\n    private cursor:any;\r\n\r\n    constructor(appManager: AppManager) {\r\n        this.cursor = document.getElementsByClassName(\"cursorBox\");\r\n    }\r\n\r\n    public getCursor(): DH_Cursor {\r\n        return this.cursor;\r\n    }\r\n    public updateMsg(msg:string){\r\n        this.cursor[0].textContent = msg;\r\n    }\r\n\r\n}","import { Mesh, Scene } from \"@babylonjs/core\";\r\nimport { ArcRotateCamera } from \"@babylonjs/core/Cameras/arcRotateCamera\";\r\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector\";\r\nimport { contains } from \"jquery\";\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { WallGeometry } from \"../Room/WallGeometry\";\r\nimport { AppManager } from \"./AppManager\";\r\nimport { Handler } from \"./Handler\";\r\nimport { Linear, TimelineMax, TweenMax } from \"gsap\";\r\n\r\n\r\nexport class EventManager {\r\n    private appManager: AppManager;\r\n    private camera: ArcRotateCamera;\r\n    private scene: Scene;\r\n    private sphere: Mesh;\r\n    private handler: Handler;\r\n    private wallGeometry: WallGeometry;\r\n\r\n    private cursor: any;\r\n\r\n    constructor(appManager: AppManager) {\r\n\r\n\r\n        this.appManager = appManager;\r\n        this.camera = this.appManager.sceneManager.getCamera();\r\n        this.scene = this.appManager.sceneManager.getScene();\r\n        this.sphere = this.appManager.sphereManager.getSphere();\r\n        console.log(this.appManager.handler)\r\n        this.handler = this.appManager.handler.getHandler();\r\n        this.wallGeometry = this.appManager.wallGeometry.getWallGeometryInstance();\r\n\r\n        this.appManager.sceneManager.getCanvas().addEventListener(\"dblclick\", () => this.onDoubleClick());\r\n        this.appManager.sceneManager.getCanvas().addEventListener('wheel', (event) => this.onDocumentMouseWheel(event));\r\n        // document.addEventListener('keypress', logKey);\r\n        document.addEventListener(\"keydown\", (event) => this.onKeyDown(event));\r\n\r\n        this.mouseControls();\r\n\r\n        this.cursor = this.appManager.DHCursor.getCursor();\r\n\r\n\r\n    }\r\n\r\n    onKeyDown(event: any) {\r\n\r\n        // console.log(event);\r\n        if (event.key == \"2\")\r\n            this.appManager.cameraManager.freeCamera();\r\n        if (event.key == \"1\")\r\n            this.appManager.cameraManager.resetCamera();\r\n        if (event.key == \"3\")\r\n            this.appManager.cameraManager.setVerticalCamera();\r\n        if (event.key == \"4\")\r\n            this.appManager.cameraManager.dollhouseCamera();\r\n\r\n        if (event.key == \"s\")\r\n            this.appManager.sphereManager.toggleSphere();\r\n        if (event.key == \"c\") {\r\n            console.log(this.appManager)\r\n            console.log(\"DH_Constants.modePlane :\", DH_Constants.modePlane)\r\n            console.log(\"DH_Constants.modePlane_createCorners :\", DH_Constants.modePlane_createCorners)\r\n            console.log(\"DH_Constants.modePlane_editFloorUV :\", DH_Constants.modePlane_editFloorUV)\r\n            console.log(\"DH_Constants.modePlane_editFromTop :\", DH_Constants.modePlane_editFromTop)\r\n            console.log(\"DH_Constants.modePlane_editWallUV :\", DH_Constants.modePlane_editWallUV)\r\n\r\n            console.log(\"DH_Constants.modeCube :\", DH_Constants.modeCube)\r\n            console.log(\"DH_Constants.modeCube_CreateNewCube :\", DH_Constants.modeCube_CreateNewCube)\r\n            console.log(\"DH_Constants.modeCube_updatingCubeCenter :\", DH_Constants.modeCube_updatingCubeCenter)\r\n            console.log(\"DH_Constants.modeCube_edit_Cube :\", DH_Constants.modeCube_edit_Cube)\r\n            console.log(\"DH_Constants.modeCube_edit_CubeWallUVPosition :\", DH_Constants.modeCube_edit_CubeWallUVPosition)\r\n            console.log(DH_Constants.currentRoomName);\r\n            console.log(DH_Constants.currentWallGroupName);\r\n            // console.log(\"DH_Constants.modeCube_updatingCubeWalls :\",DH_Constants.modeCube_edit_CubeWallCornerPosition)\r\n            if (this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo) {\r\n                this.appManager.gizmoHandler.gizmoManager.gizmos.positionGizmo.yGizmo._scaleRatio = 0;\r\n                alert(\">>\");\r\n            }\r\n            \r\n            // this.appManager.wallGeometry.createFloorFromPoints();\r\n        }\r\n        // console.log(DH_Constants.modePlane)\r\n\r\n        // if (DH_Constants.modePlane) {\r\n\r\n        console.log(event.key)\r\n        // if (event.key == \"w\")\r\n        //     this.wallGeometry.enableCornerCreation()\r\n\r\n        if (event.key == \"e\")\r\n            this.wallGeometry.createFloorFromEarcut()\r\n\r\n        if (event.key == \"f\")\r\n            this.appManager.jsonManager.exportTojson()\r\n        // }\r\n\r\n\r\n\r\n    }\r\n    private slectedObj: any;\r\n    mouseControls() {\r\n        this.scene.onPointerDown = (evt, pickResult) => {\r\n            // console.log(pickResult);\r\n            if (pickResult.hit) {\r\n                this.slectedObj = pickResult.pickedMesh;\r\n            }\r\n\r\n        };\r\n        this.scene.onPointerMove = (evt, pickResult) => {\r\n\r\n            if (this.cursor)\r\n                this.moveCursor(evt);\r\n\r\n            var pickinfo: any = this.scene.pick(this.scene.pointerX, this.scene.pointerY, (mesh) => {\r\n                return mesh === this.sphere;\r\n            });\r\n            if (!pickinfo.hit)\r\n                return;\r\n\r\n            if (this.wallGeometry && DH_Constants.modePlane) {\r\n                if (DH_Constants.modePlane_createCorners)\r\n                    this.wallGeometry.updatePointer(pickinfo.pickedPoint);\r\n                else\r\n                    this.wallGeometry.disablePointer();\r\n\r\n                if (DH_Constants.modePlane_editWallUV && this.slectedObj && this.slectedObj.hasOwnProperty(\"tag\") && this.slectedObj.tag == \"CornerBox\") {\r\n                    // console.log(this.slectedObj);\r\n                    this.slectedObj.position = pickinfo.pickedPoint;\r\n                    this.wallGeometry.updateWall(this.slectedObj, true, \"wall\");\r\n                } else if (DH_Constants.modePlane_editFloorUV && this.slectedObj && this.slectedObj.hasOwnProperty(\"tag\") && this.slectedObj.tag == \"CornerBox\") {\r\n                    // console.log(this.slectedObj);\r\n                    this.slectedObj.position = pickinfo.pickedPoint;\r\n                    this.wallGeometry.updateWall(this.slectedObj, true, \"floor\");\r\n                }\r\n            }\r\n            else\r\n                this.wallGeometry.disablePointer();\r\n\r\n\r\n        };\r\n        this.scene.onPointerUp = (evt, pickResult) => {\r\n            if (this.slectedObj) {\r\n\r\n                console.log(this.wallGeometry);\r\n                console.log(DH_Constants.modePlane);\r\n                console.log(DH_Constants.modePlane_editWallUV);\r\n                console.log(this.slectedObj);\r\n\r\n                if (this.wallGeometry && DH_Constants.modePlane) {\r\n\r\n\r\n                    if (DH_Constants.modePlane_editWallUV && this.slectedObj && this.slectedObj.hasOwnProperty(\"tag\") && this.slectedObj.tag == \"CornerBox\") {\r\n\r\n                        //   this.wallGeometry.updateAllWallUv(this.slectedObj);\r\n\r\n                    }\r\n                }\r\n                this.slectedObj = null;\r\n            }\r\n        };\r\n    }\r\n    onDoubleClick() {\r\n\r\n\r\n        var pickinfo: any = this.scene.pick(this.scene.pointerX, this.scene.pointerY, (mesh: any) => {\r\n            //  if(mesh.isPickable)\r\n            return mesh;\r\n            // else \r\n            //  return null ;\r\n        });\r\n        if (pickinfo.pickedMesh != null && pickinfo && pickinfo.hit) {\r\n\r\n            console.log(pickinfo.pickedMesh);\r\n            console.log(\"DH_Constants.modePlane \", DH_Constants.modePlane);\r\n            console.log(\"DH_Constants.modePlane_createCorners \", DH_Constants.modePlane_createCorners);\r\n            // console.log(pickinfo.pickedMesh);\r\n\r\n            if (DH_Constants.modePlane && DH_Constants.modePlane_createCorners)\r\n                this.wallGeometry.addFloorPoint(pickinfo.pickedPoint);\r\n            else if (DH_Constants.modeCube && DH_Constants.modeCube_CreateNewCube)\r\n                this.appManager.cubeGeometry.createCube(pickinfo.pickedPoint);\r\n\r\n\r\n        }\r\n        if (pickinfo.pickedMesh != null) {\r\n\r\n            // if (pickinfo.pickedMesh != null && pickinfo.pickedMesh.tag == \"wall\" && !createWall) {\r\n\r\n            // RoomData[CurrentRoomName].wall\r\n\r\n\r\n            // selectedBox.position=pickinfo.pickedPoint;\r\n            // updateUV(selectedBox.name,pickinfo.getTextureCoordinates().x,pickinfo.getTextureCoordinates().y);\r\n            // path[0] = box0.position;\r\n            // path[1] = box1.position;\r\n            // path[2] = box2.position;\r\n            // path[3] = box3.position;\r\n            // path[4] = box0.position;\r\n            // displayLine = BABYLON.MeshBuilder.CreateLines(\"\", {points: path, instance: displayLine})\r\n            // let box0 = new BABYLON.MeshBuilder.CreateBox(\"point0\",{size:15},this.scene);\r\n        }\r\n\r\n\r\n        // if (refmousePointer != undefined && wallMousePointer)\r\n        //     refmousePointer.scaling.set(1, 1, 1);\r\n    }\r\n    onDocumentMouseWheel(event: any) {\r\n\r\n        // if(updating)\r\n        // return;\r\n        if (DH_Constants.updatefov) {\r\n            var fovMAX = 2.8;\r\n            var fovMIN = 0.5;\r\n\r\n            this.camera.fov -= event.wheelDeltaY / 2 * 0.005;\r\n            this.camera.fov = Math.max(Math.min(this.camera.fov, fovMAX), fovMIN);\r\n        }\r\n        else\r\n            this.camera.fov = 0.8;\r\n    }\r\n\r\n    moveCursor(e: any) {\r\n\r\n        TweenMax.to(this.cursor[0], 0.3, {\r\n            left: e.clientX,\r\n            top: e.clientY\r\n        });\r\n    }\r\n}","import { float, Scene } from \"@babylonjs/core\";\r\nimport { GizmoManager, PositionGizmo } from \"@babylonjs/core/Gizmos\";\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { AppManager } from \"./AppManager\";\r\n\r\nexport class GizmoHandler {\r\n    private appManager: AppManager;\r\n    private scene: Scene;\r\n    gizmoManager: GizmoManager;\r\n\r\n    mesh: any;\r\n\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n        this.scene = appManager.sceneManager.getScene();\r\n        this.gizmoManager = new GizmoManager(this.scene);\r\n        this.gizmoManager.positionGizmoEnabled = true;\r\n        this.gizmoManager.rotationGizmoEnabled = true;\r\n        this.gizmoManager.scaleGizmoEnabled = true;\r\n        // this.gizmoManager.po\r\n        // this.gizmoManager.camera\r\n        // this.gizmoManager = new PositionGizmo(this.utilLayer);\r\n        // this.gizmoManager.utilLayer = this.utilLayer;\r\n\r\n        // this.gizmoManager.rotationGizmoEnabled = false;\r\n        // this.gizmoManager.scaleGizmoEnabled = true;\r\n        // this.gizmoManager.boundingBoxGizmoEnabled = false;\r\n        this.gizmoManager.usePointerToAttachGizmos = false;\r\n        this.gizmoManager.gizmos.positionGizmo.xGizmo.dragBehavior.onDragObservable.add((event) => {\r\n          \r\n            this.onMeshDraging(event, \"x\")\r\n\r\n        });\r\n        this.gizmoManager.gizmos.positionGizmo.yGizmo.dragBehavior.onDragObservable.add((event) => {\r\n            this.onMeshDraging(event, \"y\")\r\n\r\n        })\r\n        this.gizmoManager.gizmos.positionGizmo.zGizmo.dragBehavior.onDragObservable.add((event) => {\r\n            this.onMeshDraging(event, \"z\")\r\n        });\r\n\r\n\r\n        // this.gizmoManager.gizmos.positionGizmo?.xGizmo\r\n        this.gizmoManager.gizmos.positionGizmo?.xGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            console.log(\"Position gizmo's x axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"position\")\r\n        })\r\n        // this.gizmoManager.gizmos.positionGizmo.yGizmo.dragBehavior.onDragStartObservable.add((event: any) => {\r\n        //     console.log(\"Position gizmo's y axis started to be dragged\");\r\n        // })\r\n        this.gizmoManager.gizmos.positionGizmo?.yGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            //  console.log(\"Position gizmo's y axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"position\")\r\n        })\r\n        // this.gizmoManager.gizmos.positionGizmo.zGizmo.dragBehavior.onDragStartObservable.add((event: any) => {\r\n        //     console.log(\"Position gizmo's z axis started to be dragged\");\r\n        // })\r\n        this.gizmoManager.gizmos.positionGizmo?.zGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            //    console.log(\"Position gizmo's z axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"position\")\r\n        });\r\n\r\n        this.gizmoManager.gizmos.rotationGizmo?.xGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            console.log(\"Position gizmo's x axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"rotation\")\r\n        })\r\n        // this.gizmoManager.gizmos.positionGizmo.yGizmo.dragBehavior.onDragStartObservable.add((event: any) => {\r\n        //     console.log(\"Position gizmo's y axis started to be dragged\");\r\n        // })\r\n        this.gizmoManager.gizmos.rotationGizmo?.yGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            //  console.log(\"Position gizmo's y axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"rotation\")\r\n        })\r\n        // this.gizmoManager.gizmos.positionGizmo.zGizmo.dragBehavior.onDragStartObservable.add((event: any) => {\r\n        //     console.log(\"Position gizmo's z axis started to be dragged\");\r\n        // })\r\n        this.gizmoManager.gizmos.rotationGizmo?.zGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            //    console.log(\"Position gizmo's z axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"rotation\")\r\n        })\r\n\r\n        this.gizmoManager.gizmos.scaleGizmo?.xGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            console.log(\"Position gizmo's x axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"scale\")\r\n        })\r\n        // this.gizmoManager.gizmos.positionGizmo.yGizmo.dragBehavior.onDragStartObservable.add((event: any) => {\r\n        //     console.log(\"Position gizmo's y axis started to be dragged\");\r\n        // })\r\n        this.gizmoManager.gizmos.scaleGizmo?.yGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            //  console.log(\"Position gizmo's y axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"scale\")\r\n        })\r\n        // this.gizmoManager.gizmos.positionGizmo.zGizmo.dragBehavior.onDragStartObservable.add((event: any) => {\r\n        //     console.log(\"Position gizmo's z axis started to be dragged\");\r\n        // })\r\n        this.gizmoManager.gizmos.scaleGizmo?.zGizmo.dragBehavior.onDragEndObservable.add((event: any) => {\r\n            //    console.log(\"Position gizmo's z axis drag was ended\", event);\r\n            this.onMeshTransformUpdate(\"scale\")\r\n        })\r\n\r\n\r\n        // this.gizmoManager.rotationGizmoEnabled = false;\r\n        // this.gizmoManager.scaleGizmoEnabled = false;\r\n\r\n\r\n    }\r\n    /**\r\n     * attach Gizmo control to mesh\r\n     * @param {*} mesh\r\n     * @memberof GizmoTool\r\n     */\r\n    attachOnMesh(mesh: any) {\r\n        this.gizmoManager.positionGizmoEnabled = true;\r\n\r\n        this.mesh = mesh;\r\n        this.gizmoManager.attachToMesh(mesh);\r\n        console.log(this.gizmoManager)\r\n    }\r\n\r\n    attachOnNode(Camera: any) {\r\n        this.gizmoManager.attachToNode(Camera);\r\n    }\r\n    // m.attachToNode(camera2);\r\n\r\n    /**\r\n     * on gizmo update callback\r\n     * @param {*} [options]\r\n     * @memberof GizmoTool\r\n     */\r\n    onMeshTransformUpdate(options?: any) {\r\n        console.log(this.mesh.tag);\r\n\r\n        if (this.mesh != null) {\r\n\r\n            console.log(\"2\");\r\n            if (DH_Constants.modePlane && DH_Constants.modePlane_editFromTop) {\r\n                console.log(\"3\");\r\n\r\n                this.appManager.wallGeometry.updatePointWallFromTop(this.mesh);\r\n            } else if (DH_Constants.modeCube && DH_Constants.modeCube_edit_Cube) {\r\n                console.log(\"3\");\r\n\r\n                this.appManager.cubeGeometry.updateCube(this.mesh);\r\n            }else if (DH_Constants.modeCube_editRoom && DH_Constants.modePlane_editFromTop && this.mesh.tag==\"CornerBox\") {\r\n                console.log(\"3\");\r\n\r\n                this.appManager.wallGeometry.updatePointWallFromTop(this.mesh);\r\n            }else if (DH_Constants.modeCube_editRoom && DH_Constants.modeCube_edit_Cube && this.mesh.tag==\"cubeCornerBox\") {\r\n                console.log(\"3\");\r\n\r\n                this.appManager.cubeGeometry.updateCube(this.mesh);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n       /**\r\n     * on gizmo update callback\r\n     * @param {*} [options]\r\n     * @memberof GizmoTool\r\n     */\r\n    onMeshDraging(event:any,axis:any) {\r\n        // console.log(\"1\");\r\n\r\n        if (this.mesh != null) {\r\n\r\n            // console.log(\"2\");\r\n            if (DH_Constants.modePlane && DH_Constants.modePlane_editFromTop) {\r\n                // console.log(\"3\");\r\n\r\n              //  this.appManager.wallGeometry.updatePointWallFromTop(this.mesh);\r\n            } else if (DH_Constants.modeCube && DH_Constants.modeCube_edit_Cube) {\r\n                // console.log(\"3\");\r\n\r\n                this.appManager.cubeGeometry.ondragCubePoints(this.mesh,event,axis);\r\n            }else if (DH_Constants.modeCube_editRoom && DH_Constants.modeCube_edit_Cube && this.mesh.tag==\"cubeCornerBox\") {\r\n                console.log(\"3\");\r\n\r\n                this.appManager.cubeGeometry.ondragCubePoints(this.mesh,event,axis);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    enablePositionGizmoOnly(xAxisScale: float, yAxisScale: float, zAxisScale: float) {\r\n        // this.gizmoManager.gizmos.positionGizmo?.xGizmo.scaleRatio = 0.0;\r\n        this.gizmoManager.positionGizmoEnabled = true;\r\n        this.gizmoManager.rotationGizmoEnabled = false;\r\n        this.gizmoManager.scaleGizmoEnabled = false;\r\n        if (this.gizmoManager.gizmos.positionGizmo) {\r\n            this.gizmoManager.gizmos.positionGizmo.xGizmo._scaleRatio = xAxisScale;\r\n            this.gizmoManager.gizmos.positionGizmo.yGizmo._scaleRatio = yAxisScale;\r\n            this.gizmoManager.gizmos.positionGizmo.zGizmo._scaleRatio = zAxisScale;\r\n        }\r\n        this.gizmoManager.positionGizmoEnabled = true;\r\n        this.gizmoManager.rotationGizmoEnabled = false;\r\n        this.gizmoManager.scaleGizmoEnabled = false;\r\n\r\n    }\r\n\r\n    getGizmoHandler(): GizmoHandler {\r\n        return this;\r\n    }\r\n    updateCubeGizmo(var1: any, var2: any) {\r\n\r\n        if (this.gizmoManager.gizmos && this.gizmoManager.gizmos.positionGizmo) {\r\n            var xDif = (var1.x - var2.x);\r\n            var yDif = (var1.y - var2.y);\r\n            var zDif = (var1.z - var2.z);\r\n            if (xDif < 0)\r\n                xDif = -xDif;\r\n            if (yDif < 0)\r\n                yDif = -yDif;\r\n            if (zDif < 0)\r\n                zDif = -zDif;\r\n\r\n            var greater = false;\r\n\r\n            if (xDif >= yDif && xDif >= zDif) {\r\n                //largest = \"X\";\r\n\r\n                this.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 1;\r\n                this.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 0.0;\r\n                this.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 0.0;\r\n                if (var1.x > var2.x)\r\n                    greater = true;\r\n                // return greater;\r\n            }\r\n            else if (yDif >= xDif && yDif >= zDif) {\r\n                //  largest = \"Y\";\r\n                this.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 0.0;\r\n                this.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 1.0;\r\n                this.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 0;\r\n                if (var1.y > var2.y)\r\n                    greater = true;\r\n                // return greater;\r\n            }\r\n            else {\r\n                // largest = \"Z\";\r\n                this.gizmoManager.gizmos.positionGizmo.xGizmo.scaleRatio = 0.0;\r\n                this.gizmoManager.gizmos.positionGizmo.yGizmo.scaleRatio = 0.0;\r\n                this.gizmoManager.gizmos.positionGizmo.zGizmo.scaleRatio = 1;\r\n                if (var1.z > var2.z)\r\n                    greater = true;\r\n                // return greater;\r\n            }\r\n            return greater;\r\n        }\r\n    }\r\n\r\n\r\n}","import { Color3, MeshBuilder, Scene, StandardMaterial, Vector3 } from \"@babylonjs/core\";\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { AppManager } from \"./AppManager\";\r\n// import { GridMaterial } from \"babylonjs-materials\";\r\nimport { Mesh } from \"babylonjs\";\r\n// import { GridMaterial } from \"babylonjs-materials/legacy/legacy-grid\";\r\nimport { GridMaterial } from \"@babylonjs/materials/grid\";\r\n\r\n\r\nexport class Handler {\r\n    private appManager: AppManager;\r\n    private scene: any;\r\n    mosusePointer: any;\r\n\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n        this.scene = this.appManager.sceneManager.getScene();\r\n    }\r\n\r\n    enableMousePointer(active: boolean) {\r\n        if (this.mosusePointer == undefined) {\r\n            var myMaterial2 = new StandardMaterial(\"myMaterialgreen\", this.scene);\r\n            myMaterial2.diffuseColor = new Color3(0, 1, 0.25);\r\n\r\n            var myMaterial360 = new StandardMaterial(\"myMaterial360\", this.scene);\r\n            myMaterial360.diffuseColor = new Color3(0, 1, 1);\r\n            this.mosusePointer = MeshBuilder.CreateBox(\"refmousePointer\", { size: 80 }, this.scene);\r\n            var d_RefLPo = MeshBuilder.CreateBox(\"refmousePointerLine\", { width: 10, height: 5000 }, this.scene);\r\n            d_RefLPo.isPickable = false;\r\n            d_RefLPo.parent = this.mosusePointer;\r\n            this.mosusePointer.material = myMaterial2;\r\n            d_RefLPo.material = myMaterial360;\r\n            this.mosusePointer.renderingGroupId = 1;\r\n            this.mosusePointer.isPickable = false;\r\n        }\r\n\r\n        this.mosusePointer.isVisible(active);\r\n\r\n    }\r\n    public createBox(pos: Vector3, name: any, options?: any) {\r\n        console.log(options)\r\n        var _size = DH_Constants.size_ControlBox;\r\n        if (options && options.hasOwnProperty(\"size\"))\r\n            _size = options.size;\r\n        var box = MeshBuilder.CreateBox(name, { size: _size }, this.scene);\r\n        box.position.set(pos.x, pos.y, pos.z)\r\n        return box;\r\n    }\r\n\r\n\r\n    public createLine(linePoints: any, name: any) {\r\n\r\n        var line = MeshBuilder.CreateLines(name, { points: linePoints }, this.scene);\r\n        return line;\r\n    }\r\n    public createLineTube(linePoints: any, name: any, radius: any) {\r\n\r\n        var line = MeshBuilder.CreateTube(\"tube\", { path: linePoints, radius: radius }, this.scene);\r\n        return line;\r\n    }\r\n    public getHandler(): Handler {\r\n        return this;\r\n    }\r\n\r\n    public createGrid(yPosition: any) {\r\n\r\n        var gridMaterial = new GridMaterial(\"grid\", this.scene);\r\n        gridMaterial.majorUnitFrequency = 10;\r\n        gridMaterial.minorUnitVisibility = 0.3;\r\n        gridMaterial.gridRatio = 10;\r\n        gridMaterial.backFaceCulling = false;\r\n        gridMaterial.mainColor = new Color3(1, 1, 1);\r\n        gridMaterial.lineColor = new Color3(1, 1, 1);\r\n        gridMaterial.opacity = 0.8;\r\n        gridMaterial.zOffset = 1;\r\n\r\n        const grid: any = Mesh.CreateGround(\"grid\", 100000, 100000, 2, this.scene);\r\n        grid.position.set(0, 0, 0);\r\n        grid.material = gridMaterial;\r\n        grid.isPickable = false;\r\n        grid.renderingGroupId = 1;\r\n        grid.position.y = yPosition;\r\n\r\n        return grid;\r\n    }\r\n\r\n    public getPoints(_box2: any, _box1: any) {\r\n        var vct_ = this.minus(_box2, _box1);\r\n        // console.log(vct_)\r\n        var arr_vct = [];\r\n        for (var i = 1; i < DH_Constants.divPoint; i++) {\r\n            var tempvct = new Vector3(0, 0, 0);\r\n            tempvct.x = _box1.x + ((vct_.x * i) / DH_Constants.divPoint)\r\n            tempvct.y = _box1.y + ((vct_.y * i) / DH_Constants.divPoint)\r\n            tempvct.z = _box1.z + ((vct_.z * i) / DH_Constants.divPoint)\r\n            arr_vct.push(tempvct);\r\n        }\r\n        return arr_vct;\r\n    }\r\n    public minus(last: any, mesh: any) {\r\n\r\n        var direction = new Vector3(last.x - mesh.x, last.y - mesh.y, last.z - mesh.z);\r\n        return direction;\r\n    }\r\n    public getUvPoint(point: any) {\r\n        var pickinfo: any = this.scene.pick(point.x, point.y, (mesh: any) => {\r\n            return mesh === this.appManager.sphereManager.getSphere();\r\n        });\r\n        // console.log(point)\r\n        // console.log(pickinfo.getTextureCoordinates())\r\n        return pickinfo.getTextureCoordinates();\r\n    }\r\n    public getPosition(vertices: any, twod?: any) {\r\n        var refVertices = [...vertices];\r\n        var verticeslocal = new Float32Array(vertices.length * 3);\r\n\r\n        var verticeslocaltwod: any = new Float32Array(vertices.length * 2);\r\n\r\n        for (let i = 1; i <= vertices.length; i++) {\r\n            verticeslocal[i * 3 - 3] = refVertices[i - 1].x;\r\n            verticeslocal[i * 3 - 2] = refVertices[i - 1].y;\r\n            verticeslocal[i * 3 - 1] = refVertices[i - 1].z;\r\n\r\n            if (twod) {\r\n                verticeslocaltwod[i * 3 - 3] = refVertices[i - 1].x;\r\n                verticeslocaltwod[i * 3 - 2] = refVertices[i - 1].z;\r\n                console.log(refVertices[i - 1])\r\n            }\r\n\r\n            // var x,y,z;\r\n            // x=parseFloat(refVertices[i - 1].x).toFixed(2);\r\n            // y=parseFloat(refVertices[i - 1].y).toFixed(2);\r\n            // z=parseFloat(refVertices[i - 1].z).toFixed(2);\r\n            // // console.log(x,y,z);\r\n            // verticeslocal[i * 3 - 3] = x;\r\n            // verticeslocal[i * 3 - 2] = y;\r\n            // verticeslocal[i * 3 - 1] =z;\r\n        }\r\n        // console.log(verticeslocal);\r\n\r\n        var pp: any = [];\r\n        if (twod) {\r\n            for (let i = 0; i < verticeslocaltwod.length; i++) {\r\n                // if (verticeslocaltwod[i] != NaN)\r\n                var val: any = parseFloat(verticeslocaltwod[i])\r\n                val = parseFloat(val.toFixed(2));\r\n                pp.push(val);\r\n                // else pp.push(verticeslocaltwod[i - 1])\r\n            }\r\n        }\r\n        // console.log(verticeslocaltwod);\r\n        // console.log(pp);\r\n        if (!twod)\r\n            return verticeslocal;\r\n        else\r\n            return [verticeslocal, pp]\r\n    }\r\n}","import { AssetsManager, PBRMetallicRoughnessMaterial, Scene, Tools } from \"@babylonjs/core\";\r\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture\";\r\n\r\nexport class MaterialManager {\r\n    private scene: Scene;\r\n    // private assetsManager: AssetsManager;\r\n    constructor(scene: Scene) {\r\n        this.scene = scene;\r\n\r\n        // this.assetsManager = new AssetsManager(this.scene);\r\n        // this.assetsManager.onTaskSuccessObservable.add((task) => {\r\n        //     console.log('task successful', task)\r\n        // });\r\n        // this.assetsManager.onTaskErrorObservable.add((task) => {\r\n        //     console.log('task failed', task.errorObject.message, task.errorObject.exception);\r\n        //     console.log(task);\r\n        //     console.log(task.errorObject);\r\n\r\n        //     // console.log(task.errorObject);\r\n\r\n        // });\r\n\r\n    }\r\n\r\n    getMaterial(textureUrl: string) {\r\n        // console.log(textureUrl)\r\n        var pbr: any = new PBRMetallicRoughnessMaterial(\"Pbr_\" + textureUrl, this.scene);\r\n        // pbr.baseColor = new BABYLON.Color3(1.0, 0.766, 0.336);\r\n        pbr.metallic = 0; // set to 1 to only use it from the metallicRoughnessTexture\r\n        pbr.roughness = 1.0; // set to 1 to only use it from the metallicRoughnessTexture\r\n        // pbr.environmentTexture = BABYLON.CubeTexture.CreateFromPrefilteredData(\"/textures/environment.dds\", scene);\r\n        // pbr.metallicRoughnessTexture = new BABYLON.Texture(folderPath + room_Images[roomNo], scene);\r\n        console.log(textureUrl);\r\n        pbr._albedoTexture =   new Texture(textureUrl, this.scene,\r\n            undefined, undefined, undefined,\r\n            () => {\r\n                console.log(\"Load\");\r\n            },\r\n            (msg:any,err:any) => {\r\n                console.log(\"err\");\r\n                console.log(msg);\r\n                console.log(err);\r\n            }\r\n        );\r\n\r\n        // Tools.LoadFile(textureUrl,\r\n        //     (data: any,response:any) => {\r\n        //         console.log(\"ADF\")\r\n        //         console.log(data)\r\n        //         console.log(response)\r\n        //     }, undefined, undefined, undefined,\r\n        //     (exception) => {\r\n        //         console.log(\"exception\")\r\n        //         console.log(exception)\r\n\r\n        //     });\r\n        // Tools.LoadImage = (url2:any, onload, onerror, database)=> {\r\n\r\n        //     var img:any;\r\n        //     var xhr = new XMLHttpRequest();\r\n\r\n        //     //replace this with the headers you want to set\r\n        //     //xhr.setRequestHeader(\"[KEY]\", \"[VALUE]\");\r\n        //     xhr.open(\"GET\", url2);\r\n        //     xhr.responseType = \"blob\";\r\n        //     xhr.onload = ()=> {\r\n\r\n        //         img=window.URL.createObjectURL(xhr.response)\r\n        //         console.log(window.URL.createObjectURL(xhr.response))\r\n        //     //   img.src = window.URL.createObjectURL(xhr.response);\r\n        //     }\r\n        //     xhr.send();\r\n\r\n        //     return img;\r\n\r\n        // }\r\n\r\n        // // pbr.disableLighting = true\r\n        pbr.backFaceCulling = false;\r\n        // if (Tools.IsBase64(image.uri)) {\r\n        //     url = image.uri;\r\n        // }\r\n\r\n        // var textureTask = this.assetsManager.addTextureTask(\"image task\", textureUrl,false);\r\n        // textureTask.onSuccess =  (task:any)=> {\r\n        //   //  material.diffuseTexture = task.texture;\r\n        // //   pbr._albedoTexture = task;\r\n        // //   console.log(\"<<\");\r\n        // //   console.log(task);\r\n        // }\r\n        // this.assetsManager.load();\r\n\r\n        return pbr;\r\n    }\r\n}","\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { AppManager } from \"./AppManager\";\r\n\r\nexport class ModeManager {\r\n    private appManager: AppManager;\r\n\r\n\r\n\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n\r\n    }\r\n\r\n    // isWallModeEnabled = false;\r\n    toggleWallMode() {\r\n\r\n        if (DH_Constants.modeCube) {\r\n            this.toggleCubeMode();\r\n            this.appManager.cubeGeometry.disableAllCube();\r\n        }\r\n        // Constants.disableAllMode();\r\n        DH_Constants.modePlane = !DH_Constants.modePlane;\r\n        console.log(\"Wall Mode :\", DH_Constants.modePlane)\r\n        if (DH_Constants.modePlane && !DH_Constants.modePlane_createCorners && !DH_Constants.modePlane_editWallUV)\r\n            this.appManager.DHCursor.updateMsg(\"Select Options from below\");\r\n\r\n        this.appManager.wallGeometry.enableWallOptionsUi();\r\n\r\n        if (DH_Constants.modePlane)\r\n            this.appManager.wallGeometry.enableAll();\r\n        else\r\n            this.appManager.wallGeometry.disableAll();\r\n\r\n        this.appManager.cubeGeometry.disableAllCube();\r\n\r\n\r\n\r\n    }\r\n\r\n    toggleCubeMode() {\r\n\r\n        if (DH_Constants.modePlane)\r\n            this.toggleWallMode()\r\n\r\n        DH_Constants.disableAllWallMode();\r\n        this.appManager.wallGeometry.disableAll();\r\n        \r\n        DH_Constants.modeCube = !DH_Constants.modeCube;\r\n        console.log(\"Cube Mode :\", DH_Constants.modeCube)\r\n        if (DH_Constants.modeCube && !DH_Constants.modeCube_CreateNewCube)\r\n            this.appManager.DHCursor.updateMsg(\"Select Options from below\");\r\n\r\n        this.appManager.cubeGeometry.enableDefaultOptionsUI();\r\n\r\n        if (DH_Constants.modeCube)\r\n            this.appManager.cubeGeometry.enableAllCube();\r\n        else\r\n            this.appManager.cubeGeometry.disableAllCube();\r\n\r\n     \r\n\r\n\r\n    }\r\n\r\n    toggleEditRoomMode() {\r\n        if (DH_Constants.modeCube) {\r\n            this.toggleCubeMode();\r\n        }\r\n\r\n        if (DH_Constants.modePlane)\r\n            this.toggleWallMode()\r\n\r\n        DH_Constants.modeCube_editRoom = !DH_Constants.modeCube_editRoom;\r\n\r\n        if (DH_Constants.modeCube_editRoom) {\r\n            DH_Constants.modeCube_edit_CubeWallUVPosition = false;\r\n            this.appManager.cubeGeometry.enableAllCube();\r\n            this.appManager.cubeGeometry.enableEditRoom();\r\n            this.appManager.wallGeometry.enableAll();\r\n            this.appManager.wallGeometry.enableEditRoom();\r\n\r\n        }\r\n\r\n    }\r\n\r\n\r\n}","import { ArcRotateCamera, Camera } from \"@babylonjs/core\";\r\nimport { Engine } from \"@babylonjs/core/Engines/engine\";\r\nimport { Scene } from \"@babylonjs/core/scene\";\r\nimport { Vector3, Viewport } from \"@babylonjs/core/Maths/math\";\r\nimport { MaterialManager } from \"./MaterialManager\";\r\nimport { AppManager } from \"./AppManager\";\r\n\r\n\r\nexport class SceneManager {\r\n    private appManager: AppManager\r\n\r\n    constructor(appManager: AppManager) {\r\n        this.appManager = appManager;\r\n\r\n        this.setScene();\r\n        this.setCamera();\r\n        this.setEnvironment();\r\n\r\n\r\n    }\r\n    private canvas: HTMLCanvasElement;\r\n    private engine: Engine;\r\n    private scene: Scene;\r\n    private camera: ArcRotateCamera;\r\n\r\n    public getCanvas(): HTMLCanvasElement {\r\n        return this.canvas;\r\n    }\r\n    private setScene() {\r\n        this.canvas = document.getElementById(\"renderCanvas\") as HTMLCanvasElement;\r\n        this.engine = new Engine(this.canvas);\r\n        this.scene = new Scene(this.engine);\r\n\r\n        \r\n    // scene.onPointerDown = function() {\r\n    //     var ray = scene.createPickingRay(scene.pointerX, scene.pointerY, BABYLON.Matrix.Identity(), camera);\t\r\n    //     var hit = scene.pickWithRay(ray);\r\n    //     if (hit.pickedMesh && hit.pickedMesh.name === 'sphere') {\r\n    //         console.log('clicked');\r\n    //     }\r\n    // }   \r\n\r\n    // scene.onPointerMove = function() {\r\n    //     var ray = scene.createPickingRay(scene.pointerX, scene.pointerY, BABYLON.Matrix.Identity(), camera);\t\r\n    //     var hit = scene.pickWithRay(ray);\r\n    //     if (hit.pickedMesh && hit.pickedMesh.name === 'sphere') {\r\n    //         scene.defaultCursor = 'pointer';\r\n    //     } else {\r\n    //         scene.defaultCursor = \"default\";\r\n    //     }\r\n    // } \r\n    }\r\n    public getScene(): Scene {\r\n        return this.scene;\r\n    }\r\n\r\n    public getEngine(): Engine {\r\n        return this.engine;\r\n    }\r\n    private setCamera() {\r\n        this.camera = new ArcRotateCamera(\"camera1\", 0, 0, 0, new Vector3(0, 0, 0), this.scene);\r\n        this.camera.setPosition(new Vector3(0, 0, 0.1));\r\n        this.camera.attachControl(this.canvas, true);\r\n        this.camera.minZ = 0;\r\n        this.camera.inertia = 0.7;\r\n        this.camera.lowerRadiusLimit = this.camera.upperRadiusLimit = this.camera.radius = 1;\r\n        this.camera.lowerBetaLimit = this.camera.upperBetaLimit = this.camera.beta = 1.56;\r\n\r\n\r\n    }\r\n    public getCamera(): ArcRotateCamera {\r\n        return this.camera;\r\n    }\r\n    private setEnvironment() {\r\n\r\n        // this.camera.viewport = new Viewport(0, 0, 1, 1);\r\n        this.scene.activeCamera = this.camera;\r\n        this.scene.createDefaultLight();\r\n\r\n        this.engine.runRenderLoop(() => {\r\n            this.scene.render();\r\n            // console.log(\">>\")\r\n        });\r\n\r\n        window.addEventListener('resize', () => {\r\n            // console.log(\"windowresize\");\r\n            this.scene.render();\r\n\r\n        }, false);\r\n\r\n        this.camera.onViewMatrixChangedObservable.add(() => {\r\n            if (this.appManager.wallGeometry)\r\n                this.appManager.wallGeometry.update();\r\n        });\r\n    }\r\n\r\n\r\n}","import { ActionManager, ExecuteCodeAction, Material, PBRMetallicRoughnessMaterial, Scene, Texture } from \"@babylonjs/core\";\r\nimport { Geometry, Mesh, MeshBuilder } from \"@babylonjs/core/Meshes\";\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { SceneManager } from \"./SceneManager\";\r\n\r\nexport class SphereManager {\r\n\r\n    private sceneManager: SceneManager;\r\n    private scene: Scene;\r\n\r\n    private sphere: any;\r\n\r\n    constructor(sceneManager: SceneManager) {\r\n        this.sceneManager = sceneManager;\r\n        this.scene = this.sceneManager.getScene();\r\n        this.createSphere();\r\n        // this.changeRoomMaterial(this.createRoomMaterial(\"assets/DevelopmentPanorama/1.jpg\"));\r\n    }\r\n\r\n    public getSphere(): Mesh {\r\n        return this.sphere;\r\n    }\r\n\r\n\r\n    private createSphere() {\r\n        this.sphere = MeshBuilder.CreateSphere(\"sphere\", { diameter: 2 * DH_Constants.radius }, this.scene); //default this.sphere\r\n\r\n        // var this.sphere = BABYLON.MeshBuilder.CreateIcoSphere(\"icosphere\", {radius:2, subdivisions: 16,flat:false}, scene);\r\n        this.sphere.scaling.set(1, -1, 1);\r\n        this.sphere.isPickable = false;\r\n        this.sphere.isVisible = true;\r\n        this.sphere.position.set(0, 0, 0);\r\n\r\n        // this.sphere.actionManager = new ActionManager(this.scene);\r\n\r\n\r\n        // this.sphere.actionManager.registerAction(new ExecuteCodeAction(ActionManager.OnPickTrigger, (event) => {\r\n        //     console.log(\">>>>>>>>>\");\r\n        //     console.log(event);\r\n        //     // if (edit_Cube) {\r\n        //     //     updatingCubeCenter = true;\r\n        //     //     editSelectedCubeUV = false;\r\n        //     //     // const pick = scene.pick(scene.pointerX, scene.pointerY);\r\n        //     //     gizmoManager.attachToMesh(data.center);\r\n        //     //     gizmoManager.positionGizmoEnabled = true;\r\n        //     //     gizmoManager.rotationGizmoEnabled = true;\r\n        //     //     gizmoManager.scaleGizmoEnabled = true;\r\n        //     //     //updateCubePoints(cubeCenterPointsBoxes[index]);\r\n        //     // }\r\n    \r\n        // }));\r\n        // this.sphere.actionManager.registerAction(new ExecuteCodeAction({ trigger: ActionManager.OnPickDownTrigger }, // 'E' key\r\n        //  ()=> {\r\n        //    console.log(\"action!\");\r\n        // })\r\n    // );\r\n    // console.log(this.sphere.actionManager)\r\n    }\r\n\r\n     changeRoomMaterial(material: Material) {\r\n        this.sphere.material = material;\r\n    }\r\n\r\n    createRoomMaterial(url: string) {\r\n        /******Apply texture to custom mesh based on uv coordinates.****************/\r\n        // var material = new BABYLON.StandardMaterial(\"RoomName_Mat\", scene);\r\n        // material.diffuseTexture = new BABYLON.Texture(folderPath + room_Images[roomNo], scene);\r\n        // material.alpha = 1;\r\n        // material.backFaceCulling = false;\r\n        // material.specularColor = new BABYLON.Color3(0, 0, 0);\r\n\r\n\r\n        var pbr:any = new PBRMetallicRoughnessMaterial(\"pbr\", this.scene);\r\n        // pbr.baseColor = new BABYLON.Color3(1.0, 0.766, 0.336);\r\n        pbr.metallic = 0; // set to 1 to only use it from the metallicRoughnessTexture\r\n        pbr.roughness = 1.0; // set to 1 to only use it from the metallicRoughnessTexture\r\n        // pbr.environmentTexture = BABYLON.CubeTexture.CreateFromPrefilteredData(\"/textures/environment.dds\", scene);\r\n        // pbr.metallicRoughnessTexture = new BABYLON.Texture(folderPath + room_Images[roomNo], scene);\r\n        console.log(pbr);\r\n        pbr._albedoTexture = new Texture(url, this.scene);\r\n\r\n        // // pbr.disableLighting = true\r\n        pbr.backFaceCulling = false;\r\n        return pbr;\r\n    }\r\n\r\n    toggleSphere(force?:any){\r\n        // console.log(this.sphere.isVisible)\r\n        this.sphere.isVisible= !this.sphere.isVisible;\r\n        if(force)\r\n        this.sphere.isVisible= force;\r\n       \r\n    }\r\n}","\r\nimport { CubeGeometry } from \"../Room/CubeGeometry\";\r\nimport { DH_Constants } from \"../Room/DH_Constants\";\r\nimport { EditRoom } from \"../Room/EditRoom\";\r\nimport { JsonManager } from \"../Room/JsonManager\";\r\nimport { RoomManager } from \"../Room/RoomManager\";\r\nimport { WallGeometry } from \"../Room/WallGeometry\";\r\nimport { CameraManager } from \"./CameraManager\";\r\nimport { DH_Cursor } from \"./DH_Cursor\";\r\nimport { EventManager } from \"./EventManager\";\r\nimport { GizmoHandler } from \"./GizmoHandler\";\r\nimport { Handler } from \"./Handler\";\r\nimport { MaterialManager } from \"./MaterialManager\";\r\nimport { ModeManager } from \"./ModeManager\";\r\nimport { SceneManager } from \"./SceneManager\";\r\nimport { SphereManager } from \"./SphereManager\";\r\n\r\n\r\ndeclare function loadStartTriggerCallback(): any;\r\n\r\n\r\n/**\r\n * Base Class \r\n * App Handler\r\n * @export\r\n * @class AppManager\r\n */\r\nexport class AppManager {\r\n\r\n    jsonManager: JsonManager;\r\n    sceneManager: SceneManager;\r\n    sphereManager: SphereManager;\r\n    roomManager: RoomManager;\r\n    materialManager:MaterialManager;\r\n    cameraManager:CameraManager;\r\n    eventsManager:EventManager;\r\n    modeManger:ModeManager;\r\n    wallGeometry:WallGeometry;\r\n    cubeGeometry:CubeGeometry;\r\n    editRoomManager:EditRoom;\r\n    handler:Handler;\r\n    gizmoHandler:GizmoHandler;\r\n    DHCursor:DH_Cursor;\r\n\r\n    public static ConsoleEnable:true;\r\n    constructor() {\r\n\r\n        console.log(\"APP INIT\");\r\n        this.jsonManager= new JsonManager(this);\r\n        this.DHCursor= new DH_Cursor(this);\r\n        this.sceneManager = new SceneManager(this);\r\n        this.sphereManager = new SphereManager(this.sceneManager);\r\n        this.materialManager= new MaterialManager(this.sceneManager.getScene())\r\n        this.roomManager = new RoomManager(this);\r\n        this.cameraManager = new CameraManager(this);\r\n        this.handler = new Handler(this);\r\n       \r\n        this.wallGeometry = new WallGeometry(this);\r\n        this.cubeGeometry = new CubeGeometry(this);\r\n        this.editRoomManager= new EditRoom(this);\r\n        this.eventsManager = new EventManager(this);\r\n        this.modeManger = new ModeManager(this);\r\n       \r\n        this.gizmoHandler = new GizmoHandler(this);\r\n\r\n        \r\n        this.setupJsToTsCallBack();\r\n    }\r\n\r\n    /**\r\n    * JavaScript to typescript handlers\r\n    * @memberof AppManager\r\n    */\r\n    setupJsToTsCallBack() {\r\n\r\n        (<any>window).wplanMode = () => {\r\n            this.modeManger.toggleWallMode();\r\n        };\r\n\r\n        (<any>window).wplaneModeCreateWall = () => {\r\n            this.wallGeometry.enableCornerCreation()\r\n        };\r\n        (<any>window).wplaneModeCreateWallDone = () => {\r\n            this.wallGeometry.createWallFinished()\r\n        };\r\n        (<any>window).wplaneModeMergeWithFirstCorner = () => {\r\n            this.wallGeometry.createWallMergeWithFirstCorner()\r\n        };\r\n        (<any>window).wplaneModeEditWall = () => {\r\n            this.wallGeometry.enableWallEdit()\r\n        };\r\n        (<any>window).wplaneModeEditWallDone = () => {\r\n            this.wallGeometry.editSelectedWallDone()\r\n        };\r\n        (<any>window).wplaneModeMergeAllWalls = () => {\r\n            this.wallGeometry.updateAllWallUv()\r\n        };\r\n        (<any>window).wplaneModeAdjustWallsFromTop = () => {\r\n            this.wallGeometry.AdjustWallFromTop()\r\n        };\r\n        (<any>window).wplaneModeAdjustWallsFromTopDone = () => {\r\n            this.wallGeometry.AdjustWallFromTopDone()\r\n        };\r\n        (<any>window).wplaneModeFloorDone = () => {\r\n            this.wallGeometry.FloorDone()\r\n        };\r\n\r\n\r\n        (<any>window).wcubeMode = () => {\r\n            this.modeManger.toggleCubeMode();\r\n        };\r\n\r\n        (<any>window).wcubeModeCreateNewCube = () => {\r\n            this.cubeGeometry.enableNewCubeCreation();\r\n        };\r\n        (<any>window).wcubeModeEditCube = () => {\r\n            this.cubeGeometry.uiEditCube();\r\n        };\r\n\r\n        (<any>window).wcubeModeEditCubeUV = (edit:boolean) => {\r\n            this.cubeGeometry.EditCubeUV(edit);\r\n        };\r\n\r\n        (<any>window).wtoggleEditRoomMode = () => {\r\n            this.modeManger.toggleEditRoomMode();\r\n        };\r\n\r\n        (<any>window).editRoomModePosition = () => {\r\n            this.editRoomManager.EditRoomPosition();\r\n        };\r\n        (<any>window).editRoomModeElementPosition = () => {\r\n            this.editRoomManager.EditRoomElementPosition();\r\n\r\n        };\r\n        (<any>window).wEditRoomDone = () => {\r\n            this.editRoomManager.DoneRoomEdit();\r\n\r\n        };\r\n\r\n\r\n        (<any>window).wDefaultCamera = () => {\r\n            this.cameraManager.resetCamera();\r\n        };\r\n\r\n        (<any>window).wFreeCamera = () => {\r\n            this.cameraManager.freeCamera();\r\n        };\r\n\r\n\r\n        (<any>window).wTopCamera = () => {\r\n            this.cameraManager.setVerticalCamera();\r\n        };\r\n\r\n\r\n        \r\n/*\r\n        (<any>window).wautoRotate = (val: boolean) => {\r\n            this.sceneManager.autoRotate = val;\r\n        };\r\n\r\n        (<any>window).wenableEditSpotMode = (val: boolean,mode:string) => {\r\n            if(mode===\"mode_hotspot\"|| mode===\"mode_textstpot\" || mode===\"mode_mediaspot\" )\r\n            this.sceneManager.spotManager.enableMode(val,mode);\r\n            else\r\n            console.error(\"Error Wrong mode passed\");\r\n          \r\n        };\r\n\r\n        (<any>window).wsaveHotSpot = (event:any,mode:any,actionImageName:any) => {\r\n         \r\n            this.sceneManager.spotManager.loadandSaveSpot(event,mode,actionImageName);\r\n           // loadandSaveSpot()\r\n           // return [this.sceneManager.scene, this.sceneManager.cubeMesh, this.sceneManager.sphereMesh];\r\n        };\r\n\r\n        (<any>window).wgetScene = () => {\r\n            return [this.sceneManager.scene, this.sceneManager.cubeMesh, this.sceneManager.sphereMesh];\r\n        };\r\n*/\r\n    }\r\n\r\n\r\n}","import React, { Component } from \"react\";\r\n\r\nimport './main.css'\r\nimport { AppManager } from \"./ts/AppManager\";\r\n\r\ndeclare var VP: any;\r\ndeclare var window: any;\r\n\r\nexport default class App extends Component {\r\n\r\n\r\n  appInit: AppManager;\r\n  constructor(props: any) {\r\n    super(props)\r\n\r\n\r\n\r\n    this.state = {\r\n\r\n    };\r\n\r\n  };\r\n\r\n\r\n  componentDidMount = () => {\r\n    setTimeout(() => {\r\n\r\n      this.appInit = new AppManager();\r\n      this.panelSet();\r\n    }, 2000);\r\n  };\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return <div id=\"scene-container\">\r\n      <canvas id=\"renderCanvas\"></canvas>\r\n      <div id=\"cursor\" className=\"cursorBox\">\r\n        Select Options From Side Menu\r\n      </div>\r\n      <button id=\"CreateWall\" className=\"LeftBottom40Button\" onClick={this.planeModeCreateWall}>\r\n        Create Walls\r\n      </button>\r\n      <button id=\"CreateWallDone\" className=\"LeftBottom40Button\" onClick={this.planeModeCreateWallDone}>\r\n        Done\r\n      </button>\r\n\r\n      <button id=\"MergeWithFirstCorner\" className=\"RightBottom40Button\" onClick={this.planeModeMergeWithFirstCorner}>\r\n        Merge With First Corner\r\n      </button>\r\n\r\n\r\n      <button id=\"EditWall\" className=\"RightBottom40Button\" onClick={this.planeModeEditWall}>\r\n        Edit Wall\r\n      </button>\r\n\r\n      <button id=\"EditWallDone\" className=\"BottomCenterButtom\" onClick={this.planeModeEditWallDone}>\r\n        Edit Wall Done\r\n      </button>\r\n\r\n      <button id=\"MergeAllWalls\" className=\"BottomCenterButtom\" onClick={this.planeModeMergeAllWalls}>\r\n        Merge All Walls\r\n      </button>\r\n\r\n      <button id=\"EditFromTop\" className=\"BottomCenterButtom\" onClick={this.planeModeAdjustWallsFromTop}>\r\n        Adjust Walls\r\n      </button>\r\n\r\n      <button id=\"EditFromTopDone\" className=\"BottomCenterButtom\" onClick={this.planeModeAdjustWallsFromTopDone}>\r\n        Adjust Walls done\r\n      </button>\r\n\r\n\r\n      <button id=\"FloorDone\" className=\"BottomCenterButtom\" onClick={this.planeModeFloorDone}>\r\n        Floor done\r\n      </button>\r\n\r\n      <button id=\"NewCube\" className=\"LeftBottom40Button\" onClick={this.cubeModeCreateNewCube}>\r\n        New Cube\r\n      </button>\r\n      <button id=\"EditCube\" className=\"RightBottom40Button\" onClick={this.cubeModeEditCube}>\r\n        Edit Cube\r\n      </button>\r\n\r\n\r\n      <div id=\"EditCubeToggleParent\" className=\"BottomCenterButtomBgBottom15\">\r\n        Texture Update\r\n        <label className=\"switch\">\r\n          <input type=\"checkbox\" id=\"CubeEditToggle\" onClick={this.cubeModeEditCubeToggle} />\r\n          <span className=\"slider\"></span>\r\n        </label>\r\n      </div>\r\n\r\n      <button id=\"EditRoomPosition\" className=\"LeftBottom40Button\" onClick={this.editRoomModePosition}>\r\n        Adjust Room Position\r\n      </button>\r\n\r\n      <button id=\"EditRoomElementPosition\" className=\"LeftBottom40Button\" onClick={this.editRoomModeElementPosition}>\r\n        Adjust Room Element Position\r\n      </button>\r\n      <button id=\"DoneRoomEdit\" className=\"RightBottom40Button\" onClick={this.editRoomModeDone}>\r\n        Done\r\n      </button>\r\n\r\n      <div id=\"mySidenav\" className=\"sidenav\">\r\n        <a href=\"javascript:void(0)\" className=\"closebtn\"\r\n\r\n        >&times;</a>\r\n        {/* <!-- <a href=\"#\">About</a> --> */}\r\n        <button className=\"accordion\">Change Rooms »</button>\r\n        <div className=\"accordionpanel\" id=\"accordionpanelChangeRoom\">\r\n        </div>\r\n        <button className=\"accordion2\">Enable Rooms »</button>\r\n        <div className=\"accordionpanel\" id=\"accordionpanelEnableRoom\">\r\n        </div>\r\n\r\n        <button className=\"accordion3\">Mode »</button>\r\n        <div className=\"accordionpanel\" id=\"accordionpanelModes\">\r\n          <button onClick={this.planeMode} className=\"accordionbutton\" id=\"Wall Create\">Wall</button>\r\n          <button onClick={this.cubeMode} className=\"accordionbutton\" id=\"Wall Create\">Cube</button>\r\n          <button onClick={this.editRoomMode} className=\"accordionbutton\" id=\"Edit Room\">Edit Room</button>\r\n        </div>\r\n\r\n        <button className=\"accordion4\">Camera</button>\r\n        <div className=\"accordionpanel\" id=\"accordionpanelCamera\">\r\n          <button onClick={this.DefaultCamera} className=\"accordionbutton\" id=\"Default Camera\">Default Camera</button>\r\n          <button onClick={this.FreeCamera} className=\"accordionbutton\" id=\"Free Camera\">Free Camera</button>\r\n          <button onClick={this.TopCamera} className=\"accordionbutton\" id=\"Top Camera\">Top Camera</button>\r\n        </div>\r\n      </div>\r\n      <span style={{\r\n        fontSize: '30px',\r\n        cursor: 'pointer',\r\n        position: 'absolute'\r\n      }}\r\n        onClick={this.openNav}\r\n      >&#9776;</span>\r\n\r\n      <div id=\"myModal\" className=\"modal\">\r\n\r\n        <div className=\"modal-content\">\r\n          <span className=\"close\">&times;</span>\r\n\r\n          <p>Some text in the Modal..</p>\r\n          <p>Some text in the Modal..</p>\r\n          <button type=\"button\" className=\"modalButton\">OK</button>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n\r\n  }\r\n  DefaultCamera() {\r\n    window.wDefaultCamera();\r\n  }\r\n\r\n  FreeCamera() {\r\n    window.wFreeCamera();\r\n  }\r\n\r\n  TopCamera() {\r\n    window.wTopCamera();\r\n  }\r\n\r\n  openNav() {\r\n    var dd: any = document.getElementById(\"mySidenav\");\r\n    dd.style.width = \"250px\";\r\n  }\r\n  closeNav() {\r\n    var dd: any = document.getElementById(\"mySidenav\");\r\n    dd.style.width = \"0px\";\r\n  }\r\n\r\n  panelSet() {\r\n    var acc: any = document.getElementsByClassName(\"accordion\");\r\n    acc[0].classList.toggle(\"active\");\r\n\r\n    acc[0].addEventListener(\"click\", () => {\r\n      var panel: any = acc[0].nextElementSibling;\r\n      if (panel.style.display === \"block\") {\r\n        panel.style.display = \"none\";\r\n      } else {\r\n        panel.style.display = \"block\";\r\n      }\r\n    });\r\n\r\n\r\n    var acc2: any = document.getElementsByClassName(\"accordion2\");\r\n\r\n    acc2[0].addEventListener(\"click\", function () {\r\n      acc2[0].classList.toggle(\"active\");\r\n      var panel: any = acc2[0].nextElementSibling;\r\n      if (panel.style.display === \"block\") {\r\n        panel.style.display = \"none\";\r\n      } else {\r\n        panel.style.display = \"block\";\r\n      }\r\n    });\r\n\r\n\r\n    var acc3: any = document.getElementsByClassName(\"accordion3\");\r\n    acc3[0].addEventListener(\"click\", function () {\r\n      console.log(acc3[0])\r\n      acc3[0].classList.toggle(\"active\");\r\n      var panel: any = acc3[0].nextElementSibling;\r\n      if (panel.style.display === \"block\") {\r\n        panel.style.display = \"none\";\r\n      } else {\r\n        panel.style.display = \"block\";\r\n      }\r\n    });\r\n\r\n    var acc4: any = document.getElementsByClassName(\"accordion4\");\r\n    acc4[0].addEventListener(\"click\", function () {\r\n      console.log(acc4[0])\r\n      acc4[0].classList.toggle(\"active\");\r\n      const panel: any = acc4[0].nextElementSibling;\r\n      if (panel.style.display === \"block\") {\r\n        panel.style.display = \"none\";\r\n      } else {\r\n        panel.style.display = \"block\";\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n\r\n  planeMode() {\r\n    // console.log(this.appInit)\r\n    var dd: any = document.getElementById(\"mySidenav\");\r\n    dd.style.width = \"0px\";\r\n    window.wplanMode();\r\n\r\n    // this.appInit.modeManger.toggleWallMode();\r\n  }\r\n\r\n  planeModeCreateWall() {\r\n    window.wplaneModeCreateWall();\r\n\r\n  }\r\n  planeModeCreateWallDone() {\r\n    window.wplaneModeCreateWallDone();\r\n\r\n  }\r\n\r\n  planeModeMergeWithFirstCorner() {\r\n    window.wplaneModeMergeWithFirstCorner();\r\n\r\n  }\r\n\r\n  planeModeEditWall() {\r\n    window.wplaneModeEditWall();\r\n  }\r\n\r\n  planeModeEditWallDone() {\r\n    window.wplaneModeEditWallDone();\r\n  }\r\n\r\n  planeModeMergeAllWalls() {\r\n    window.wplaneModeMergeAllWalls();\r\n  }\r\n  planeModeAdjustWallsFromTop() {\r\n    window.wplaneModeAdjustWallsFromTop();\r\n  }\r\n  planeModeAdjustWallsFromTopDone() {\r\n    window.wplaneModeAdjustWallsFromTopDone();\r\n  }\r\n\r\n  planeModeFloorDone() {\r\n    window.wplaneModeFloorDone();\r\n  }\r\n\r\n\r\n  cubeMode() {\r\n    var dd: any = document.getElementById(\"mySidenav\");\r\n    dd.style.width = \"0px\";\r\n    window.wcubeMode();\r\n  }\r\n  cubeModeCreateNewCube() {\r\n\r\n    window.wcubeModeCreateNewCube();\r\n  }\r\n  cubeModeEditCube() {\r\n\r\n    window.wcubeModeEditCube();\r\n  }\r\n  cubeModeSelectCube() {\r\n\r\n    window.wcubeModeEditCube();\r\n  }\r\n  cubeModeEditCubeToggle() {\r\n\r\n    var checkBox: any = document.getElementById(\"CubeEditToggle\");\r\n    console.log(checkBox.checked)\r\n    window.wcubeModeEditCubeUV(checkBox.checked);\r\n  }\r\n\r\n  editRoomMode() {\r\n    window.wtoggleEditRoomMode();\r\n  }\r\n\r\n  editRoomModePosition() {\r\n    window.wEditRoomPosition();\r\n  }\r\n  editRoomModeElementPosition() {\r\n    window.weditRoomModeElementPosition();\r\n  }\r\n\r\n  editRoomModeDone() {\r\n    window.wEditRoomDone();\r\n  }\r\n\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}